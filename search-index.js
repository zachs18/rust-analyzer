var searchIndex = JSON.parse('{\
"base_db":{"doc":"base_db defines basic database traits. The concrete DB is …","t":[12,12,12,12,12,13,3,3,13,18,3,3,13,3,3,3,3,3,3,4,13,13,17,3,4,13,13,13,3,3,8,3,3,3,3,3,3,13,13,4,13,13,3,3,13,8,4,3,4,6,8,8,3,3,3,3,3,3,3,3,13,13,13,8,3,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,11,12,12,10,12,10,10,11,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,10,12,11,11,11,11,11,11,12,12,11,11,11,12,12,11,11,11,11,11,11,12,10,11,10,11,11,12,12,2,11,10,11,10,10,10,10,10,11,10,10,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,12,12,12,12,3,17,8,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["0","0","0","0","0","Alloc","AnchoredPath","AnchoredPathBuf","Attr","CURRENT","Cancelled","Change","Core","CrateData","CrateDisplayName","CrateGraph","CrateGraphQuery","CrateId","CrateName","CrateOrigin","CratesIo","CustomDerive","DEFAULT_LRU_CAP","Dependency","Edition","Edition2015","Edition2018","Edition2021","Env","FileId","FileLoader","FileLoaderDelegate","FilePosition","FileRange","FileSet","FileSourceRootQuery","FileTextQuery","FuncLike","Lang","LangCrateOrigin","Other","Panic","ParseQuery","ProcMacro","ProcMacro","ProcMacroExpander","ProcMacroExpansionError","ProcMacroId","ProcMacroKind","ProcMacroLoadResult","SourceDatabase","SourceDatabaseExt","SourceDatabaseExtGroupStorage__","SourceDatabaseExtStorage","SourceDatabaseGroupStorage__","SourceDatabaseStorage","SourceRoot","SourceRootCratesQuery","SourceRootId","SourceRootQuery","Std","System","Test","Upcast","VfsPath","add_crate_root","add_dep","anchor","anchor","apply","as_path","as_smol_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","canonical_name","catch","cfg_options","change_file","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","crate_graph","crate_graph","crate_graph","crate_id","crate_id_for_crate_root","crate_name","crates_in_topological_order","default","default","default","default","default","default","default","default","default","default","dependencies","deref","deref","display_name","edition","env","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","execute","execute","expand","expander","extend","file_for_path","file_for_path","file_id","file_id","file_source_root","file_source_root","file_text","file_text","file_text","file_text","files_changed","fixture","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_index","fmt_index","for_each_query","for_each_query","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_canonical_name","from_iter","from_str","get","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","impl_intern_key","in_db","in_db","in_db","in_db","in_db","in_db","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","index","insert","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_empty","is_library","is_prelude","is_proc_macro","iter","iter","iter","iter","join","kind","len","maybe_changed_since","maybe_changed_since","name","name","name_and_extension","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new_library","new_local","new_real_path","new_virtual_path","normalize_dashes","offset","origin","parent","parse","parse","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","patch_cfg_if","path","path","path_for_file","path_for_file","pop","potential_cfg_options","proc_macro","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","range","relevant_crates","relevant_crates","resolve_path","resolve_path","resolve_path","root_file_id","roots","salsa","set","set_crate_graph","set_crate_graph","set_crate_graph_with_durability","set_file_source_root","set_file_source_root_with_durability","set_file_text","set_file_text_with_durability","set_roots","set_source_root","set_source_root_with_durability","source_root","source_root","source_root_crates","source_root_crates","starts_with","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","transitive_deps","transitive_rev_deps","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","version","with_prelude","0","repo","0","0","ChangeFixture","WORKSPACE","WithFixture","borrow","borrow_mut","change","file_position","files","from","into","parse","parse_with_proc_macros","test_crate","try_from","try_into","type_id","with_files","with_files_extra_proc_macros","with_many_files","with_position","with_range","with_range_or_offset","with_single_file"],"q":["base_db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","base_db::CrateOrigin","","base_db::ProcMacroExpansionError","","base_db::fixture","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","Path relative to a file.","Path relative to a file.","","","A panic payload indicating that a salsa revision was …","Encapsulate a bunch of raw <code>.set</code> calls on the database.","","","","<code>CrateGraph</code> is a bit of information which turns a set of …","","","","Origin of the crates. It is used in emitting monikers.","Crates that are from crates.io official registry,","","","","","","","","","Handle to a file in <code>Vfs</code>","","Silly workaround for cyclic deps between the traits","","","A set of <code>VfsPath</code>s identified by <code>FileId</code>s.","","","","Crates that are provided by the language, like std, core, …","","","","","","","","","","","","Database which stores all significant input facts: source …","We don’t want to give HIR knowledge of source roots, …","","Representative struct for the query group.","","Representative struct for the query group.","","","Files are grouped into source roots. A source root is a …","","","Things like “proc macro server was killed by OOM”.","","","Path in <code>Vfs</code>.","","","File that this path is relative to.","File that this path is relative to.","","Returns the <code>AbsPath</code> representation of <code>self</code> if <code>self</code> is on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Runs <code>f</code>, and catches any salsa cancellation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The crate graph.","","","","","","Returns all crates in the graph, sorted in topological …","","","","","","","","","","","","","","A name used in the package’s project declaration: for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extends this crate graph by adding a complete disjoint …","Get the id corresponding to <code>path</code> if it exists in the set.","","","","Path to a file, relative to the root of its source root. …","","Text of the file.","","","","","A set of high-level utility fixture methods to use in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","","Insert the <code>file_id, path</code> pair into the set.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Sysroot or crates.io library.","Whether this dependency is to be added to the depending …","","Iterate over this set’s ids.","","","","Creates a new <code>VfsPath</code> with <code>path</code> adjoined to <code>self</code>.","","Returns the number of stored paths.","","","","","Returns <code>self</code>’s base name and file extension.","","","","","","","","","","","","","","","","Creates a crate name, checking for dashes in the string …","","","","","","","Create a path from string. Input should be a string …","Creates an “in-memory” path from <code>/</code>-separated string.","Creates a crate name, unconditionally replacing the dashes …","","","Returns the <code>VfsPath</code> without its final component, if there …","","","","","","","","","Path relative to <code>anchor</code>’s containing directory.","Path relative to <code>anchor</code>’s containing directory.","Get the path corresponding to <code>file</code> if it exists in the set.","","Remove the last component of <code>self</code> if there is one.","","","","","","","","","","","","","Get the id of the file corresponding to <code>path</code>.","","","","","","Set the value of the <code>crate_graph</code> input.","","Set the value of the <code>crate_graph</code> input and promise that …","Set the value of the <code>file_source_root</code> input.","Set the value of the <code>file_source_root</code> input and promise …","Set the value of the <code>file_text</code> input.","Set the value of the <code>file_text</code> input and promise that its …","","Set the value of the <code>source_root</code> input.","Set the value of the <code>source_root</code> input and promise that …","Contents of the source root.","","","","Returns <code>true</code> if <code>other</code> is a prefix of <code>self</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator over all transitive dependencies of …","Returns all transitive reverse dependencies of the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[1,2,3,4,5,6,0,0,7,8,0,0,6,0,0,0,0,0,0,0,9,7,0,0,0,8,8,8,0,0,0,0,0,0,0,0,0,7,9,0,6,10,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,10,6,0,0,11,11,12,13,14,15,16,10,12,13,17,15,1,2,3,18,11,4,16,9,6,19,5,7,20,21,8,22,23,14,24,25,26,27,28,29,30,31,32,33,34,35,36,10,12,13,17,15,1,2,3,18,11,4,16,9,6,19,5,7,20,21,8,22,23,14,24,25,26,27,28,29,30,31,32,33,34,35,36,19,36,21,14,12,13,17,15,1,3,18,11,4,16,9,6,19,5,7,20,21,8,22,23,24,25,12,13,17,15,1,3,18,11,4,16,9,6,19,5,7,20,21,8,22,23,24,25,15,1,3,4,8,37,14,27,23,11,19,11,17,11,22,14,28,29,32,33,34,35,21,16,19,21,21,21,12,13,17,15,1,3,18,4,16,9,6,19,5,7,8,22,23,25,12,13,17,15,1,3,18,4,16,9,6,19,5,7,8,22,23,25,28,35,38,20,11,17,18,24,25,39,31,40,39,2,31,14,0,12,13,17,15,15,1,3,18,11,4,16,16,9,6,6,19,19,5,7,20,21,8,8,22,23,14,24,25,28,29,32,33,34,35,36,36,27,31,27,31,10,12,13,17,15,15,1,2,3,18,11,4,16,9,6,6,19,19,5,7,20,21,8,22,23,14,24,25,26,27,28,29,30,31,32,33,34,35,36,19,22,8,22,15,1,3,4,16,9,6,19,5,7,8,25,0,28,29,32,33,34,35,28,29,32,33,34,35,11,17,10,12,13,17,15,1,2,3,18,11,4,16,9,6,19,5,7,20,21,8,22,23,14,24,25,26,27,28,29,30,31,32,33,34,35,36,11,18,23,21,17,18,11,22,15,20,17,27,31,20,23,15,12,13,17,15,1,3,18,4,16,9,19,5,22,23,25,16,23,14,27,31,18,18,15,15,16,24,21,15,37,27,15,1,3,4,8,11,12,13,17,18,15,21,21,28,29,32,33,34,35,25,40,2,40,17,2,21,14,0,22,37,14,37,39,39,39,39,14,39,39,39,31,39,31,15,12,13,17,15,1,3,18,11,4,16,9,6,19,5,7,20,21,8,22,23,24,25,15,16,6,19,8,36,11,11,10,12,13,17,15,1,2,3,18,11,4,16,9,6,19,5,7,20,21,8,22,23,14,24,25,26,27,28,29,30,31,32,33,34,35,36,10,12,13,17,15,1,2,3,18,11,4,16,9,6,19,5,7,20,21,8,22,23,14,24,25,26,27,28,29,30,31,32,33,34,35,36,10,12,13,17,15,1,2,3,18,11,4,16,9,6,19,5,7,20,21,8,22,23,14,24,25,26,27,28,29,30,31,32,33,34,35,36,41,21,23,42,43,44,45,0,0,0,46,46,46,46,46,46,46,46,46,47,46,46,46,47,47,47,47,47,47,47],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["fileid",3],["edition",4],["option",4,[["cratedisplayname",3]]],["option",4,[["string",3]]],["cfgoptions",3],["cfgoptions",3],["env",3],["procmacroloadresult",6],["bool",0],["crateorigin",4]],["crateid",3]],[[["",0],["crateid",3],["dependency",3]],["result",4,[["cyclicdependencieserror",3]]]],null,null,[[["sourcedatabaseext",8]]],[[["",0]],["option",4,[["abspath",3]]]],[[["",0]],["smolstrstr",0]],[[],["result",4,[["cancelled",3]]]],null,[[["",0],["fileid",3],["option",4,[["arc",3,[["string",3]]]]]]],[[["",0]],["anchoredpathbuf",3]],[[["",0]],["anchoredpath",3]],[[["",0]],["fileset",3]],[[["",0]],["vfspath",3]],[[["",0]],["fileid",3]],[[["",0]],["sourcerootid",3]],[[["",0]],["sourceroot",3]],[[["",0]],["crategraph",3]],[[["",0]],["crateid",3]],[[["",0]],["cratename",3]],[[["",0]],["crateorigin",4]],[[["",0]],["langcrateorigin",4]],[[["",0]],["cratedisplayname",3]],[[["",0]],["procmacroid",3]],[[["",0]],["procmacrokind",4]],[[["",0]],["procmacro",3]],[[["",0]],["cratedata",3]],[[["",0]],["edition",4]],[[["",0]],["env",3]],[[["",0]],["dependency",3]],[[["",0]],["fileposition",3]],[[["",0]],["filerange",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["vfspath",3]],["ordering",4]],[[["",0],["fileid",3]],["ordering",4]],[[["",0],["sourcerootid",3]],["ordering",4]],[[["",0],["crateid",3]],["ordering",4]],[[["",0],["edition",4]],["ordering",4]],[[["",0]],["arc",3,[["crategraph",3]]]],null,null,null,[[["",0],["fileid",3]],["option",4,[["crateid",3]]]],[[["",0]],["cratename",3]],[[["",0]],["vec",3,[["crateid",3]]]],[[],["fileset",3]],[[],["crategraph",3]],[[],["env",3]],[[],["change",3]],[[],["parsequery",3]],[[],["crategraphquery",3]],[[],["filetextquery",3]],[[],["filesourcerootquery",3]],[[],["sourcerootquery",3]],[[],["sourcerootcratesquery",3]],null,[[["",0]],["str",0]],[[["",0]],["str",0]],null,null,null,[[["",0],["anchoredpathbuf",3]],["bool",0]],[[["",0],["anchoredpath",3]],["bool",0]],[[["",0],["fileset",3]],["bool",0]],[[["",0],["vfspath",3]],["bool",0]],[[["",0],["fileid",3]],["bool",0]],[[["",0],["sourcerootid",3]],["bool",0]],[[["",0],["sourceroot",3]],["bool",0]],[[["",0],["crateid",3]],["bool",0]],[[["",0],["cratename",3]],["bool",0]],[[["",0],["crateorigin",4]],["bool",0]],[[["",0],["langcrateorigin",4]],["bool",0]],[[["",0],["cratedisplayname",3]],["bool",0]],[[["",0],["procmacroid",3]],["bool",0]],[[["",0],["procmacrokind",4]],["bool",0]],[[["",0],["edition",4]],["bool",0]],[[["",0],["env",3]],["bool",0]],[[["",0],["dependency",3]],["bool",0]],[[["",0],["filerange",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[]],[[]],[[["",0],["subtree",3],["option",4,[["subtree",3]]],["env",3]],["result",4,[["subtree",3],["procmacroexpansionerror",4]]]],null,[[["",0],["crategraph",3]],["u32",0]],[[["",0],["vfspath",3]],["option",4,[["fileid",3]]]],[[["",0],["vfspath",3]],["option",4,[["fileid",3]]]],null,null,[[["",0],["fileid",3]],["sourcerootid",3]],null,[[["",0],["fileid",3]],["arc",3,[["string",3]]]],[[["",0],["fileid",3]],["arc",3,[["string",3]]]],[[["",0],["fileid",3]],["arc",3,[["string",3]]]],null,null,null,[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["sourcedatabase",8],["databasekeyindex",3],["formatter",3]],["result",6]],[[["",0],["sourcedatabaseext",8],["databasekeyindex",3],["formatter",3]],["result",6]],[[["",0],["runtime",3],["fnmut",8]]],[[["",0],["runtime",3],["fnmut",8]]],[[]],[[]],[[]],[[]],[[]],[[["abspathbuf",3]],["vfspath",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",0]]],[[]],[[]],[[["cratename",3]],["cratedisplayname",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["string",3]],["cratedisplayname",3]],[[["intoiterator",8]]],[[["str",0]],["result",4]],[[["",0],["str",0]],["option",4,[["string",3]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[["sourcedatabase",8]],["querytable",3]],[[["sourcedatabase",8]],["querytable",3]],[[["sourcedatabaseext",8]],["querytable",3]],[[["sourcedatabaseext",8]],["querytable",3]],[[["sourcedatabaseext",8]],["querytable",3]],[[["sourcedatabaseext",8]],["querytable",3]],[[["sourcedatabase",8]],["querytablemut",3]],[[["sourcedatabase",8]],["querytablemut",3]],[[["sourcedatabaseext",8]],["querytablemut",3]],[[["sourcedatabaseext",8]],["querytablemut",3]],[[["sourcedatabaseext",8]],["querytablemut",3]],[[["sourcedatabaseext",8]],["querytablemut",3]],[[["",0],["crateid",3]],["cratedata",3]],[[["",0],["fileid",3],["vfspath",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],null,[[["",0]],["bool",0]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0],["str",0]],["option",4,[["vfspath",3]]]],null,[[["",0]],["usize",0]],[[["",0],["sourcedatabase",8],["databasekeyindex",3],["revision",3]],["bool",0]],[[["",0],["sourcedatabaseext",8],["databasekeyindex",3],["revision",3]],["bool",0]],null,null,[[["",0]],["option",4]],[[["",0],["anchoredpathbuf",3]],["bool",0]],[[["",0],["anchoredpath",3]],["bool",0]],[[["",0],["fileset",3]],["bool",0]],[[["",0],["vfspath",3]],["bool",0]],[[["",0],["fileid",3]],["bool",0]],[[["",0],["sourcerootid",3]],["bool",0]],[[["",0],["sourceroot",3]],["bool",0]],[[["",0],["crateid",3]],["bool",0]],[[["",0],["cratename",3]],["bool",0]],[[["",0],["crateorigin",4]],["bool",0]],[[["",0],["cratedisplayname",3]],["bool",0]],[[["",0],["procmacroid",3]],["bool",0]],[[["",0],["env",3]],["bool",0]],[[["",0],["dependency",3]],["bool",0]],[[["",0],["filerange",3]],["bool",0]],[[["str",0]],["result",4,[["cratename",3],["str",0]]]],[[["cratename",3],["crateid",3]]],[[],["change",3]],[[["u16",0]]],[[["u16",0]]],[[["fileset",3]],["sourceroot",3]],[[["fileset",3]],["sourceroot",3]],[[["string",3]],["vfspath",3]],[[["string",3]],["vfspath",3]],[[["str",0]],["cratename",3]],null,null,[[["",0]],["option",4,[["vfspath",3]]]],[[["",0],["fileid",3]],["parse",3,[["sourcefile",3]]]],null,[[["",0],["vfspath",3]],["option",4,[["ordering",4]]]],[[["",0],["fileid",3]],["option",4,[["ordering",4]]]],[[["",0],["sourcerootid",3]],["option",4,[["ordering",4]]]],[[["",0],["crateid",3]],["option",4,[["ordering",4]]]],[[["",0],["edition",4]],["option",4,[["ordering",4]]]],[[["",0]],["bool",0]],null,null,[[["",0],["fileid",3]],["option",4,[["vfspath",3]]]],[[["",0],["fileid",3]],["option",4,[["vfspath",3]]]],[[["",0]],["bool",0]],null,null,[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],null,[[["",0],["fileid",3]],["arc",3,[["fxhashset",6,[["crateid",3]]]]]],[[["",0],["fileid",3]],["arc",3,[["fxhashset",6,[["crateid",3]]]]]],[[["",0],["anchoredpath",3]],["option",4,[["fileid",3]]]],[[["",0],["anchoredpath",3]],["option",4,[["fileid",3]]]],[[["",0],["anchoredpath",3]],["option",4,[["fileid",3]]]],null,null,null,[[["",0],["str",0],["string",3]]],[[["",0],["arc",3,[["crategraph",3]]]]],[[["",0],["crategraph",3]]],[[["",0],["arc",3,[["crategraph",3]]],["durability",3]]],[[["",0],["fileid",3],["sourcerootid",3]]],[[["",0],["fileid",3],["sourcerootid",3],["durability",3]]],[[["",0],["fileid",3],["arc",3,[["string",3]]]]],[[["",0],["fileid",3],["arc",3,[["string",3]]],["durability",3]]],[[["",0],["vec",3,[["sourceroot",3]]]]],[[["",0],["sourcerootid",3],["arc",3,[["sourceroot",3]]]]],[[["",0],["sourcerootid",3],["arc",3,[["sourceroot",3]]],["durability",3]]],[[["",0],["sourcerootid",3]],["arc",3,[["sourceroot",3]]]],null,[[["",0],["sourcerootid",3]],["arc",3,[["fxhashset",6,[["crateid",3]]]]]],null,[[["",0],["vfspath",3]],["bool",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0],["crateid",3]]],[[["",0],["crateid",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["",0]],null,[[["cratename",3],["crateid",3],["bool",0]]],null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],null,null,null,[[]],[[]],[[["str",0]],["changefixture",3]],[[["str",0],["vec",3]],["changefixture",3]],[[["",0]],["crateid",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["str",0]]],[[["str",0],["vec",3]]],[[["str",0]]],[[["str",0]]],[[["str",0]]],[[["str",0]]],[[["str",0]]]],"p":[[3,"FileId"],[3,"FileLoaderDelegate"],[3,"SourceRootId"],[3,"CrateId"],[3,"ProcMacroId"],[4,"LangCrateOrigin"],[4,"ProcMacroKind"],[4,"Edition"],[4,"CrateOrigin"],[4,"ProcMacroExpansionError"],[3,"CrateGraph"],[3,"AnchoredPathBuf"],[3,"AnchoredPath"],[3,"Change"],[3,"VfsPath"],[3,"CrateName"],[3,"FileSet"],[3,"SourceRoot"],[3,"CrateDisplayName"],[3,"ProcMacro"],[3,"CrateData"],[3,"Env"],[3,"Dependency"],[3,"FilePosition"],[3,"FileRange"],[3,"SourceDatabaseStorage"],[3,"SourceDatabaseGroupStorage__"],[3,"ParseQuery"],[3,"CrateGraphQuery"],[3,"SourceDatabaseExtStorage"],[3,"SourceDatabaseExtGroupStorage__"],[3,"FileTextQuery"],[3,"FileSourceRootQuery"],[3,"SourceRootQuery"],[3,"SourceRootCratesQuery"],[3,"Cancelled"],[8,"SourceDatabase"],[8,"ProcMacroExpander"],[8,"SourceDatabaseExt"],[8,"FileLoader"],[8,"Upcast"],[13,"Lang"],[13,"CratesIo"],[13,"Panic"],[13,"System"],[3,"ChangeFixture"],[8,"WithFixture"]]},\
"cfg":{"doc":"cfg defines conditional compiling options, <code>cfg</code> attribute …","t":[13,13,13,4,3,4,3,3,13,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12],"n":["All","Any","Atom","CfgAtom","CfgDiff","CfgExpr","CfgOptions","DnfExpr","Flag","InactiveReason","Invalid","KeyValue","Not","apply_diff","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","compute_enable_hints","default","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","from","from","from","from","from","from","from","get_cfg_keys","get_cfg_values","hash","hash","insert_atom","insert_key_value","into","into","into","into","into","into","is_empty","is_target_defined","len","ne","ne","ne","ne","new","new","parse","partial_cmp","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","why_inactive","0","key","value","0","0","0","0"],"q":["cfg","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cfg::CfgAtom","","","cfg::CfgExpr","","",""],"d":["","","","A simple configuration value passed in from the outside.","","","Configuration options used for conditional compilation on …","A <code>#[cfg]</code> directive in Disjunctive Normal Form (DNF).","eg. <code>#[cfg(test)]</code>","","","eg. <code>#[cfg(target_os = &quot;linux&quot;)]</code>","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>CfgDiff</code> objects that would enable this directive …","","","","","","","","","","","","","","Fold the cfg by querying all basic <code>Atom</code> and <code>KeyValue</code> …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> when the atom comes from the target …","Returns the total number of atoms changed by this diff.","","","","","","Create a new CfgDiff. Will return None if the same item …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes a list of present or absent atoms in <code>opts</code> that …","","","","","","",""],"i":[1,1,1,0,0,0,0,0,2,0,1,2,1,3,4,5,2,1,3,6,4,5,2,1,3,6,3,2,1,3,6,2,1,3,6,2,4,3,2,1,3,6,4,5,2,2,1,3,6,6,1,4,5,2,1,1,3,6,3,3,2,1,3,3,4,5,2,1,3,6,6,2,6,2,1,3,6,4,6,1,2,2,1,3,6,4,5,2,6,4,5,2,1,3,6,4,5,2,1,3,6,4,5,2,1,3,6,4,7,8,8,9,10,11,12],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["cfgdiff",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["cfgexpr",4]],["option",4,[["bool",0]]]],[[["",0]],["cfgatom",4]],[[["",0]],["cfgexpr",4]],[[["",0]],["cfgoptions",3]],[[["",0]],["cfgdiff",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["cfgatom",4]],["ordering",4]],[[["",0],["cfgoptions",3]]],[[],["cfgoptions",3]],[[["",0],["cfgatom",4]],["bool",0]],[[["",0],["cfgexpr",4]],["bool",0]],[[["",0],["cfgoptions",3]],["bool",0]],[[["",0],["cfgdiff",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["fn",8]],["option",4,[["bool",0]]]],[[]],[[]],[[]],[[["cfgatom",4]]],[[]],[[]],[[]],[[["",0]]],[[["",0],["str",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["smolstr",3]]],[[["",0],["smolstr",3],["smolstr",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["usize",0]],[[["",0],["cfgatom",4]],["bool",0]],[[["",0],["cfgexpr",4]],["bool",0]],[[["",0],["cfgoptions",3]],["bool",0]],[[["",0],["cfgdiff",3]],["bool",0]],[[["cfgexpr",4]]],[[["vec",3,[["cfgatom",4]]],["vec",3,[["cfgatom",4]]]],["option",4,[["cfgdiff",3]]]],[[["subtree",3]],["cfgexpr",4]],[[["",0],["cfgatom",4]],["option",4,[["ordering",4]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["cfgoptions",3]],["option",4,[["inactivereason",3]]]],null,null,null,null,null,null,null],"p":[[4,"CfgExpr"],[4,"CfgAtom"],[3,"CfgOptions"],[3,"DnfExpr"],[3,"InactiveReason"],[3,"CfgDiff"],[13,"Flag"],[13,"KeyValue"],[13,"Atom"],[13,"All"],[13,"Any"],[13,"Not"]]},\
"flycheck":{"doc":"Flycheck provides the functionality needed to run …","t":[13,4,13,13,3,3,4,3,3,13,13,13,13,13,13,4,3,13,13,13,13,13,4,13,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,12,11,11,11,11,11,11,12,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["AddDiagnostic","Applicability","CargoCommand","CustomCommand","Diagnostic","DiagnosticCode","DiagnosticLevel","DiagnosticSpan","DiagnosticSpanMacroExpansion","DidCancel","DidCheckCrate","DidFinish","DidStart","Error","FailureNote","FlycheckConfig","FlycheckHandle","HasPlaceholders","Help","Ice","MachineApplicable","MaybeIncorrect","Message","Note","Progress","Progress","Unspecified","Warning","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_end","byte_start","children","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","code","column_end","column_start","def_site_span","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expansion","explanation","file_name","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","is_primary","label","level","line_end","line_start","macro_decl_name","message","ne","ne","ne","ne","ne","rendered","serialize","serialize","serialize","serialize","serialize","serialize","span","spans","spawn","suggested_replacement","suggestion_applicability","text","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","all_features","all_targets","args","command","command","extra_args","features","no_default_features","target_triple","diagnostic","id","progress","workspace_root","0","0"],"q":["flycheckflycheck::FlycheckConfig","","","","","","","","","flycheck::Message","","","","flycheck::Progress",""],"d":["Request adding a diagnostic with fixes included to a file","Whether a suggestion can be safely applied.","","","A diagnostic message generated by rustc","The error code associated to this diagnostic.","The diagnostic level","A section of the source code associated with a Diagnostic","Macro expansion information associated with a diagnostic.","","","","","Error","Failure note","","Flycheck wraps the shared state and communication …","The suggested replacement has placeholders that will need …","Help","Internal compiler error","The suggested replacement can be applied automatically …","The suggested replacement may be incorrect in some …","","Note","","Request check progress notification to client","The suggested replacement will probably not work.","Warning","","","","","","","","","","","","","","","","","","","","","The byte offset in the file where this diagnostic ends.","The byte offset in the file where this diagnostic starts …","Associated diagnostic messages.","","","","","","","","","","","","","","","The code itself.","The associated error code for this diagnostic","1-based, character offset.","1-based, character offset.","span where macro was defined (if known)","","","","","","","","","","","","","","","","","","","","","Macro invocations that created the code at this span, if …","An explanation for the code","The file name or the macro name this diagnostic comes from.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is this a “primary” span – meaning the point, or one …","Label that should be placed at this location (if any)","“error: internal compiler error”, “error”, “…","1-based. The line in the file.","1-based. The line in the file.","name of macro that was applied (e.g., “foo!” or “#[…","The error message of this diagnostic.","","","","","","The message as rustc would render it","","","","","","","span where macro was applied to generate this code; note …","A list of source code spans this diagnostic is associated …","","If we are suggesting a replacement, this will contain text …","If the suggestion is approximate","Source text from the start of line_start to the end of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Schedule a re-start of the cargo check worker.","","","","","","","","","","","Flycheck instance ID","","","",""],"i":[1,0,2,2,0,0,0,0,0,3,3,3,3,4,4,0,0,5,4,4,5,5,0,4,0,1,5,4,1,2,6,3,7,8,9,5,4,10,1,2,6,3,7,8,9,5,4,10,9,9,10,2,7,8,9,5,4,10,2,7,8,9,5,4,10,7,10,9,9,8,7,8,9,5,4,10,2,7,8,9,5,4,10,2,7,8,9,5,4,10,9,7,9,1,2,2,6,3,7,8,9,5,4,10,10,1,2,6,3,7,8,9,5,4,10,7,8,9,5,4,10,1,2,6,3,7,8,9,5,4,10,9,9,10,9,9,8,10,2,7,8,9,10,10,7,8,9,5,4,10,8,10,6,9,9,9,2,7,8,9,5,4,10,2,10,1,2,6,3,7,8,9,5,4,10,1,2,6,3,7,8,9,5,4,10,1,2,6,3,7,8,9,5,4,10,6,11,11,12,11,12,11,11,11,11,13,14,14,13,15,16],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,null,[[["",0]],["flycheckconfig",4]],[[["",0]],["diagnosticcode",3]],[[["",0]],["diagnosticspanmacroexpansion",3]],[[["",0]],["diagnosticspan",3]],[[["",0]],["applicability",4]],[[["",0]],["diagnosticlevel",4]],[[["",0]],["diagnostic",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,null,null,null,[[],["result",4,[["diagnosticcode",3]]]],[[],["result",4,[["diagnosticspanmacroexpansion",3]]]],[[],["result",4,[["diagnosticspan",3]]]],[[],["result",4,[["applicability",4]]]],[[],["result",4,[["diagnosticlevel",4]]]],[[],["result",4,[["diagnostic",3]]]],[[["",0],["flycheckconfig",4]],["bool",0]],[[["",0],["diagnosticcode",3]],["bool",0]],[[["",0],["diagnosticspanmacroexpansion",3]],["bool",0]],[[["",0],["diagnosticspan",3]],["bool",0]],[[["",0],["applicability",4]],["bool",0]],[[["",0],["diagnosticlevel",4]],["bool",0]],[[["",0],["diagnostic",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],null,null,null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[["",0],["flycheckconfig",4]],["bool",0]],[[["",0],["diagnosticcode",3]],["bool",0]],[[["",0],["diagnosticspanmacroexpansion",3]],["bool",0]],[[["",0],["diagnosticspan",3]],["bool",0]],[[["",0],["diagnostic",3]],["bool",0]],null,[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],null,null,[[["usize",0],["box",3,[["fn",8]]],["flycheckconfig",4],["abspathbuf",3]],["flycheckhandle",3]],null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"Message"],[4,"FlycheckConfig"],[4,"Progress"],[4,"DiagnosticLevel"],[4,"Applicability"],[3,"FlycheckHandle"],[3,"DiagnosticCode"],[3,"DiagnosticSpanMacroExpansion"],[3,"DiagnosticSpan"],[3,"Diagnostic"],[13,"CargoCommand"],[13,"CustomCommand"],[13,"AddDiagnostic"],[13,"Progress"],[13,"DidCheckCrate"],[13,"DidFinish"]]},\
"hir":{"doc":"HIR (previously known as descriptors) provides a …","t":[12,13,4,4,13,13,13,13,13,2,13,8,4,4,16,13,3,13,3,3,3,4,13,2,13,3,13,3,13,13,13,13,3,4,4,4,3,13,3,13,13,13,13,3,13,13,3,13,3,13,13,13,4,13,3,13,13,18,3,13,13,13,6,3,4,13,13,13,3,13,13,13,13,13,4,4,13,8,8,8,8,8,3,3,13,13,13,13,3,2,3,13,2,4,13,3,13,3,13,3,13,13,3,13,13,2,3,4,13,13,2,2,2,2,2,3,3,13,13,13,4,13,4,13,13,4,3,13,4,13,2,13,4,13,3,13,4,4,13,13,13,13,4,13,13,13,13,13,13,2,4,3,13,3,3,13,13,13,13,3,13,13,3,13,13,4,13,3,13,3,13,13,13,13,13,13,13,3,3,13,13,13,3,2,3,3,13,13,4,13,13,2,3,13,13,13,13,2,2,2,2,2,13,13,3,13,13,13,4,4,3,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,3,8,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,8,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,8,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,8,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,10,11,12,11,11,11,11,11,11,10,12,10,12,10,10,12,10,12,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,12,10,12,10,12,10,10,12,10,12,10,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,10,10,12,10,12,10,12,10,12,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,12,10,12,10,12,10,12,10,12,11,11,11,11,11,11,10,10,12,10,12,10,12,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,10,10,10,10,10,12,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,12,10,10,10,12,10,12,10,12,11,11,11,11,11,11,10,12,10,12,10,12,10,12,10,12,10,12,10,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,12,10,12,10,12,4,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,3,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,3,4,3,3,13,13,3,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,5,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,14,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,13,3,13,3,4,13,13,13,13,13,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["0","Abs","Access","Adt","Adt","Adt","AdtSelfType","All","Any","AnyDiagnostic","Array","AsAssocItem","AssocItem","AssocItemContainer","Ast","Atom","Attr","Attr","AttributeTemplate","Attrs","AttrsWithOwner","BindingMode","BlockExpr","BreakOutsideOfLoop","BuiltIn","BuiltinAttr","BuiltinAttr","BuiltinType","BuiltinType","ByCrate","BySelf","Call","Callable","CallableKind","CfgAtom","CfgExpr","CfgOptions","Closure","Const","Const","Const","Const","Const","ConstParam","ConstParam","ConstParam","Crate","Crate","CrateDependency","Declarative","Def","Def","DefWithBody","Derive","Documentation","DollarCrate","DynTrait","EMPTY","Enum","Enum","Error","Exclusive","ExpandResult","Field","FieldSource","Flag","Fn","FnPtr","Function","Function","Function","Function","Function","Function","GenericDef","GenericParam","GenericParam","HasAttrs","HasCrate","HasSource","HasVisibility","HirDisplay","HirFileId","Impl","Impl","Impl","ImplSelfType","ImplTrait","InFile","InactiveCode","IncorrectCase","Invalid","InvalidDeriveTarget","ItemInNs","KeyValue","Label","Label","LifetimeParam","LifetimeParam","Local","Local","Local","Macro","Macro","Macro","MacroError","MacroFile","MacroKind","Macros","Macros","MalformedDerive","MismatchedArgCount","MissingFields","MissingMatchArms","MissingUnsafe","ModPath","Module","Module","Module","Module","ModuleDef","ModuleDef","ModuleSource","Move","Mut","Mutability","Name","Named","Namespace","Never","NoSuchField","Not","Origin","Owned","Param","Path","PathKind","PathResolution","Placeholder","Plain","Plain","Pos","PrefixKind","ProcMacro","Public","RawPtr","Record","Ref","Reference","ReplaceFilterMapNextWithFindMap","ScopeDef","SelfParam","SelfType","Semantics","SemanticsScope","Shared","Shared","Slice","SourceFile","Static","Static","Static","Struct","Struct","Struct","StructKind","Super","ToolModule","ToolModule","Trait","Trait","Trait","Trait","Tuple","Tuple","TupleEnumVariant","TupleStruct","Type","TypeAlias","TypeAlias","TypeAlias","TypeAlias","TypeInfo","TypeMismatch","TypeOrConstParam","TypeParam","TypeParam","TypeParam","TypeRef","Types","Types","UnimplementedBuiltinMacro","Union","Union","Union","Unit","Unknown","UnresolvedExternCrate","UnresolvedImport","UnresolvedMacroCall","UnresolvedModule","UnresolvedProcMacro","Values","Values","Variant","Variant","Variant","Variant","VariantDef","Visibility","VisibleTraits","access","adjusted","adjusted","all","all_for_trait","all_for_type","all_in_crate","all_items","ancestors_at_offset_with_macros","ancestors_with_macros","ancestors_with_macros","ancestors_with_macros","ancestors_with_macros_skip_attr_item","applicable_inherent_traits","apply_diff","as_adt","as_assoc_item","as_assoc_item","as_assoc_item","as_assoc_item","as_assoc_item","as_associated_type_parent_trait","as_builtin","as_call_id_with_errors","as_callable","as_def_with_body","as_dyn_trait","as_enum","as_ident","as_impl_traits","as_keyword_for_ptr","as_keyword_for_ref","as_local","as_module_def","as_proc_macro","as_ref","as_reference","as_self_param","as_str","as_text","as_tuple_index","as_type_param","assert_contains_node","assoc_fn_params","assoc_type_shorthand_candidates","associated_locals","async_ret_type","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","attrs","autoderef","binding_mode_of_pat","body_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","by_key","call_node","canonical_module_path","canonical_path","cfg","cfg","check","children","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cloned","cmp","cmp","cmp","cmp","container","containing_trait","containing_trait_impl","containing_trait_or_trait_impl","contains_unknown","could_coerce_to","could_unify_with","crate_root","db","db","db","debug_hir","declaration_source","declarations","default","default","default","definition_source","dependencies","deref","deref","deref","descend_into_macros","descend_into_macros_single","descend_into_macros_with_kind_preference","descend_into_macros_with_same_text","descend_node_into_attributes","descendants","diagnostics","diagnostics","diagnostics","diagnostics","diagnostics_display_range","display","display","display_name","display_source_code","display_test","display_truncated","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs","docs_with_rangemap","edition","env_traits","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","escaped","escaped","eval","expand","expand_attr_macro","expand_derive_as_pseudo_attr_macro","expand_derive_macro","expansion_info","expansion_level","expected_case","fields","fields","fields","fields","fields","file","file_id","file_syntax","find_node_at_offset_with_descend","find_node_at_offset_with_macros","find_nodes_at_offset_with_descend","find_use_path","find_use_path_prefixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ast","from_kind","from_mutable","from_segments","from_src","get","get_cfg_keys","get_cfg_values","get_html_root_url","has_adjustment","has_body","has_doc_hidden","has_non_default_type_params","has_non_default_type_params","has_self_param","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hir_file_for","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","ident","ident_text","ident_type","impl_defs","impls_fnonce","impls_future","impls_trait","import_map","insert_atom","insert_key_value","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_displayable","is_Self","is_array","is_async","is_attr","is_attr_macro","is_attr_macro_call","is_auto","is_bool","is_bool","is_builtin","is_builtin_derive","is_builtin_derive","is_builtin_derive","is_char","is_closure","is_const","is_copy","is_crate_root","is_custom_derive","is_derive","is_derive_annotated","is_derive_attr_pseudo_expansion","is_float","is_fn","is_fn_like","is_ident","is_implicit","is_implicit_reborrow","is_include_macro","is_inline","is_int","is_macro","is_macro_export","is_mod_rs","is_mut","is_mut","is_mut","is_mutable_reference","is_negative","is_never","is_packed","is_param","is_proc_macro","is_proc_macro_attribute","is_proc_macro_derive","is_raw_ptr","is_ref","is_reference","is_self","is_self","is_shared","is_slice","is_str","is_target_defined","is_uint","is_unit","is_unknown","is_unsafe","is_unsafe_ident_pat","is_unsafe_macro_call","is_unsafe_method_call","is_unsafe_ref_expr","is_unsafe_to_call","is_usize","is_visible_from","is_visible_from","items","items","items_with_supertraits","iterate_assoc_items","iterate_method_candidates","iterate_path_candidates","kind","kind","kind","kind","kind","known","krate","krate","krate","krate","krate","krate","krate","krate","krate","krate","krate","krate","krate","krate","krate","krate","krate","krate","krate","krate","lang","lang","legacy_macros","len","list","macro_call_id","macro_file","map","merge","merge","method_params","missing","module","module","module","module","module","module","module","module","module","module","module","module","module","module","module","module","module","module","module","module","module","module","module","module","modules","n_params","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name_value_str","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new_lifetime","new_slice","new_tuple_field","normalize_trait_assoc_type","origin","original","original","original_ast_node","original_ast_node","original_call_node","original_file","original_file_range","original_file_range","original_file_range_opt","original_file_range_opt","original_range","original_range_opt","params","params","params_without_self","parent","parent","parent","parent","parent","parent","parent_def","parent_enum","parse","parse","parse_or_expand","parse_path_comma_token_tree","parse_proc_macro_decl","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path","path_to_root","pattern_adjustments","pattern_source","pop_segment","potential_cfg","process_all_names","push_segment","query_external_importables","receiver_param","record_literal_missing_fields","record_pattern_missing_fields","reference","remove_ref","repr","representative","resolve_attr_macro_call","resolve_bind_pat_to_const","resolve_derive_macro","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_doc_path","resolve_extern_crate","resolve_field","resolve_label","resolve_lifetime_param","resolve_macro_call","resolve_method_call","resolve_method_call_as_callable","resolve_path","resolve_record_field","resolve_record_pat_field","resolve_type","resolve_variant","resolver","ret_type","return_type","reverse_dependencies","root_file","root_module","scope","scope","scope_at_offset","scope_for_def","segments","self_param","self_ty","single_ident_value","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source","source_map","speculative_expand","speculative_expand_attr_macro","speculative_expand_derive_as_pseudo_attr_macro","speculative_resolve","split","storage","storage","str","string_value","strip_references","suggested_text","symbols","syntax","template","to_def","to_module_def","to_module_defs","to_node","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_smol_str","to_string","to_string","to_string","token_ancestors_with_macros","token_tree_value","trait_","trait_bounds","transitive_reverse_dependencies","transpose","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tuple_fields","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty_with_args","type_arguments","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_of_expr","type_of_pat","type_of_self","type_or_const_param_count","type_params","type_ref","upmap","value","value","value","variants","version","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visible_traits","walk","walk","with_value","word","0","0","0","0","0","0","0","0","0","0","0","0","0","key","value","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","1","1","1","2","0","0","0","0","AdtVarianceQuery","AssociatedTyDataQuery","AssociatedTyValueQuery","AstDatabase","AstDatabaseStorage","AstIdMapQuery","AttrsQuery","BlockDefMapQuery","BodyQuery","BodyWithSourceMapQuery","CallableItemSignatureQuery","ConstDataQuery","ConstEvalQuery","ConstParamTyQuery","ConstVisibilityQuery","CrateDefMapQueryQuery","CrateLangItemsQuery","CrateLimits","CrateSupportsNoStdQuery","DefDatabase","DefDatabaseGroupStorage__","DefDatabaseStorage","EnableProcAttrMacrosQuery","EnumDataQuery","ExprScopesQuery","FieldTypesQuery","FieldVisibilitiesQuery","FieldsAttrsQuery","FieldsAttrsSourceMapQuery","FileItemTreeQuery","FnDefDatumQuery","FnDefVarianceQuery","FunctionDataQuery","FunctionVisibilityQuery","GenericDefaultsQuery","GenericParamsQuery","GenericPredicatesForParamQuery","GenericPredicatesQuery","HirDatabase","HirDatabaseGroupStorage__","HirDatabaseStorage","HygieneFrameQuery","ImplDataQuery","ImplDatumQuery","ImplSelfTyQuery","ImplTraitQuery","ImportMapQuery","InferQueryQuery","InherentImplCratesQuery","InherentImplsInBlockQuery","InherentImplsInCrateQuery","InternBlockLookupQuery","InternBlockQuery","InternCallableDefLookupQuery","InternCallableDefQuery","InternClosureLookupQuery","InternClosureQuery","InternConstLookupQuery","InternConstQuery","InternDatabase","InternDatabaseGroupStorage__","InternDatabaseStorage","InternEnumLookupQuery","InternEnumQuery","InternExternBlockLookupQuery","InternExternBlockQuery","InternFunctionLookupQuery","InternFunctionQuery","InternImplLookupQuery","InternImplQuery","InternImplTraitIdLookupQuery","InternImplTraitIdQuery","InternLifetimeParamIdLookupQuery","InternLifetimeParamIdQuery","InternMacro2LookupQuery","InternMacro2Query","InternMacroCallQuery","InternMacroRulesLookupQuery","InternMacroRulesQuery","InternProcMacroLookupQuery","InternProcMacroQuery","InternStaticLookupQuery","InternStaticQuery","InternStructLookupQuery","InternStructQuery","InternTraitLookupQuery","InternTraitQuery","InternTypeAliasLookupQuery","InternTypeAliasQuery","InternTypeOrConstParamIdLookupQuery","InternTypeOrConstParamIdQuery","InternUnionLookupQuery","InternUnionQuery","InternedCallableDefId","InternedClosureId","InternedConstParamId","InternedLifetimeParamId","InternedOpaqueTyId","InternedTypeOrConstParamId","LangItemQuery","Macro2DataQuery","MacroArgTextQuery","MacroDefQuery","MacroExpandQuery","MacroRulesDataQuery","ParseMacroExpansionQuery","ProcMacroDataQuery","ProgramClausesForChalkEnvQuery","ReturnTypeImplTraitsQuery","StaticDataQuery","StructDataQuery","StructDatumQuery","TraitDataQuery","TraitDatumQuery","TraitEnvironmentQuery","TraitImplsInBlockQuery","TraitImplsInCrateQuery","TraitImplsInDepsQuery","TraitSolveQueryQuery","TyQuery","TypeAliasDataQuery","UnionDataQuery","ValueTyQuery","VariantsAttrsQuery","VariantsAttrsSourceMapQuery","adt_variance","adt_variance","adt_variance","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","associated_ty_data","associated_ty_data","associated_ty_value","associated_ty_value","ast_id_map","attrs","attrs","block_def_map","block_def_map","body","body","body_with_source_map","body_with_source_map","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callable_item_signature","callable_item_signature","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","const_data","const_data","const_eval","const_eval","const_param_ty","const_param_ty","const_visibility","const_visibility","crate_def_map","crate_def_map_query","crate_def_map_query","crate_lang_items","crate_lang_items","crate_limits","crate_supports_no_std","crate_supports_no_std","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","enable_proc_attr_macros","enable_proc_attr_macros","enum_data","enum_data","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expand_proc_macro","expr_scopes","expr_scopes","field_types","field_types","field_visibilities","field_visibilities","fields_attrs","fields_attrs","fields_attrs_source_map","fields_attrs_source_map","file_item_tree","file_item_tree","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_index","fmt_index","fmt_index","fn_def_datum","fn_def_datum","fn_def_variance","fn_def_variance","fn_def_variance","for_each_query","for_each_query","for_each_query","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","function_data","function_data","function_visibility","function_visibility","generic_defaults","generic_defaults","generic_params","generic_params","generic_predicates","generic_predicates","generic_predicates_for_param","generic_predicates_for_param","hash","hash","hash","hash","hash","hash","hygiene_frame","impl_data","impl_data","impl_datum","impl_datum","impl_self_ty","impl_self_ty","impl_trait","impl_trait","import_map","import_map","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","infer","infer_query","infer_query","inherent_impl_crates","inherent_impl_crates","inherent_impls_in_block","inherent_impls_in_block","inherent_impls_in_crate","inherent_impls_in_crate","intern_block","intern_block","intern_callable_def","intern_callable_def","intern_closure","intern_closure","intern_const","intern_const","intern_enum","intern_enum","intern_extern_block","intern_extern_block","intern_function","intern_function","intern_impl","intern_impl","intern_impl_trait_id","intern_impl_trait_id","intern_lifetime_param_id","intern_lifetime_param_id","intern_macro2","intern_macro2","intern_macro_call","intern_macro_rules","intern_macro_rules","intern_proc_macro","intern_proc_macro","intern_static","intern_static","intern_struct","intern_struct","intern_trait","intern_trait","intern_type_alias","intern_type_alias","intern_type_or_const_param_id","intern_type_or_const_param_id","intern_union","intern_union","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","lang_item","lang_item","lookup_intern_block","lookup_intern_block","lookup_intern_callable_def","lookup_intern_callable_def","lookup_intern_closure","lookup_intern_closure","lookup_intern_const","lookup_intern_const","lookup_intern_enum","lookup_intern_enum","lookup_intern_extern_block","lookup_intern_extern_block","lookup_intern_function","lookup_intern_function","lookup_intern_impl","lookup_intern_impl","lookup_intern_impl_trait_id","lookup_intern_impl_trait_id","lookup_intern_lifetime_param_id","lookup_intern_lifetime_param_id","lookup_intern_macro2","lookup_intern_macro2","lookup_intern_macro_call","lookup_intern_macro_rules","lookup_intern_macro_rules","lookup_intern_proc_macro","lookup_intern_proc_macro","lookup_intern_static","lookup_intern_static","lookup_intern_struct","lookup_intern_struct","lookup_intern_trait","lookup_intern_trait","lookup_intern_type_alias","lookup_intern_type_alias","lookup_intern_type_or_const_param_id","lookup_intern_type_or_const_param_id","lookup_intern_union","lookup_intern_union","macro2_data","macro2_data","macro_arg","macro_arg_text","macro_def","macro_expand","macro_expand_error","macro_rules_data","macro_rules_data","maybe_changed_since","maybe_changed_since","maybe_changed_since","ne","ne","ne","ne","ne","ne","new","new","new","parse_macro_expansion","parse_or_expand","partial_cmp","proc_macro_data","proc_macro_data","program_clauses_for_chalk_env","program_clauses_for_chalk_env","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","recursion_limit","return_type_impl_traits","return_type_impl_traits","set_enable_proc_attr_macros","set_enable_proc_attr_macros_with_durability","static_data","static_data","struct_data","struct_data","struct_datum","struct_datum","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","trait_data","trait_data","trait_datum","trait_datum","trait_environment","trait_environment","trait_impls_in_block","trait_impls_in_block","trait_impls_in_crate","trait_impls_in_crate","trait_impls_in_deps","trait_impls_in_deps","trait_solve","trait_solve_query","trait_solve_query","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","ty","type_alias_data","type_alias_data","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union_data","union_data","value_ty","value_ty","variants_attrs","variants_attrs","variants_attrs_source_map","variants_attrs_source_map","AnyDiagnostic","BreakOutsideOfLoop","BreakOutsideOfLoop","InactiveCode","InactiveCode","IncorrectCase","IncorrectCase","InvalidDeriveTarget","InvalidDeriveTarget","MacroError","MacroError","MalformedDerive","MalformedDerive","MismatchedArgCount","MismatchedArgCount","MissingFields","MissingFields","MissingMatchArms","MissingMatchArms","MissingUnsafe","MissingUnsafe","NoSuchField","NoSuchField","ReplaceFilterMapNextWithFindMap","ReplaceFilterMapNextWithFindMap","TypeMismatch","TypeMismatch","UnimplementedBuiltinMacro","UnimplementedBuiltinMacro","UnresolvedExternCrate","UnresolvedExternCrate","UnresolvedImport","UnresolvedImport","UnresolvedMacroCall","UnresolvedMacroCall","UnresolvedModule","UnresolvedModule","UnresolvedProcMacro","UnresolvedProcMacro","actual","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_expr","candidates","cfg","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","decl","decl","decl","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","expected","expected","expected_case","expr","expr","expr","field","field_list_parent","field_list_parent_path","file","file","file","file","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","found","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","ident","ident_text","ident_type","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_bang","kind","krate","macro_call","macro_name","match_expr","message","missed_fields","ne","ne","ne","ne","next_expr","node","node","node","node","node","node","opts","path","precise_location","precise_location","precise_location","suggested_text","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uncovered_patterns","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","Adt","AssociatedItem","BuiltinType","Const","Contains","EnumVariant","Equals","Function","Fuzzy","ImportInfo","ImportKind","ImportMap","ImportPath","Macro","Module","Query","SearchMode","Static","Trait","TypeAlias","assoc_items_only","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","case_sensitive","clone","clone","clone_into","clone_into","container","default","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","exclude_import_kind","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","import_info_for","import_map_query","into","into","into","into","into","into","is_trait_assoc_item","limit","name_only","ne","ne","new","path","path_of","search_dependencies","search_mode","segments","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Box","Clone","Copy","Debug","Default","Eq","Future","Hash","Index","IntoIterator","Item","Iterator","Neg","None","Not","Ok","Option","Ord","Output","PartialEq","PartialOrd","Range","RangeFrom","RangeFull","RangeInclusive","RangeTo","RangeToInclusive","Result","SELF_PARAM","SELF_TYPE","STATIC_LIFETIME","Target","Try","abort","add","add_assign","add_with_overflow","alloc","asm","assert","bench","bitand","bitand_assign","bitor","bitor_assign","bitreverse","bitxor","bitxor_assign","black_box","bool","boxed","bswap","caller_location","cfg","cfg_accessible","cfg_attr","cfg_eval","char","column","compile_error","concat","concat_bytes","concat_idents","const_format_args","core","core_panic","crate_type","ctlz","ctpop","cttz","deref","deref_mut","derive","discriminant_value","div","div_assign","doc","env","eq","f32","f64","file","filter_map","fn","fn_mut","fn_once","forget","format_args","format_args_nl","future","future_trait","ge","global_allocator","global_asm","gt","i128","i16","i32","i64","i8","include","include_bytes","include_str","index","index_mut","is_empty","isize","iter","iter_mut","le","len","likely","line","llvm_asm","log_syntax","lt","macro_rules","maxnumf32","maxnumf64","min_align_of","min_align_of_val","minnumf32","minnumf64","module_path","mul","mul_assign","mul_with_overflow","name","ne","needs_drop","neg","new","next","not","ops","option","option_env","owned_box","partial_ord","prelude","ptr_guaranteed_eq","ptr_guaranteed_ne","recursion_limit","register_attr","register_tool","rem","rem_assign","result","rotate_left","rotate_right","rust_2015","rust_2018","rust_2021","rustc_peek","saturating_add","saturating_sub","shl","shl_assign","shr","shr_assign","size_of","size_of_val","std","std_panic","str","stringify","sub","sub_assign","sub_with_overflow","test","test_case","trace_macros","type_id","type_name","u128","u16","u32","u64","u8","unlikely","unreachable","usize","v1","variant_count","wrapping_add","wrapping_mul","wrapping_sub","Const","DeclarationLocation","Enum","FileSymbol","FileSymbolKind","Function","Macro","Module","Static","Struct","SymbolCollector","Trait","TypeAlias","Union","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","collect","container_name","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","hash","hash","hash","hir_file_id","into","into","into","into","is_type","kind","loc","name","name_ptr","ne","ne","original_name_range","original_range","ptr","syntax","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":["hirhir::Adt","","","hir::AssocItem","","","hir::AssocItemContainer","","hir::BindingMode","hir::CallableKind","","","hir::CfgAtom","","","hir::CfgExpr","","","","hir::DefWithBody","","","hir::FieldSource","","hir::GenericDef","","","","","","","hir::GenericParam","","","hir::ItemInNs","","","hir::ModuleDef","","","","","","","","","","hir::ModuleSource","","","hir::PathKind","","hir::PathResolution","","","","","","","hir::ScopeDef","","","","","","hir::TypeRef","","","","","","","","","","","","","","","hir::VariantDef","","","hir::Visibility","hir::dbhir::diagnosticshir::diagnostics::AnyDiagnostic","","","","","","","","","","","","","","","","","","","hir::import_map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir::knownhir::symbols","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Absolute path (::foo)","","A Data Type","","","","","","","","","Invariant: <code>inner.as_assoc_item(db).is_some()</code> We do not …","","","","","A procedural attribute macro.","A template that the attribute input must match. Only …","","","","","","A built-in function-like macro.","","","","","Causes paths to start with <code>crate</code> where applicable, …","Causes paths to always start with either <code>self</code>, <code>super</code>, <code>crate</code>…","","","","A simple configuration value passed in from the outside.","","Configuration options used for conditional compilation on …","","","","","","","","A const parameter","","hir::Crate describes a single crate. It’s the main …","","","<code>macro_rules!</code> or Macros 2.0 macro.","","An item","The defs which have a body.","A built-in or custom derive.","Holds documentation","<code>$crate</code> from macro expansion","","","","","","","","","","eg. <code>#[cfg(test)]</code>","A fn pointer. Last element of the vector is the return …","","","","","","","","","","","","Trait for obtaining the defining crate of an item.","","","","Input to the analyzer is a set of files, where each file …","","","","","","<code>InFile&lt;T&gt;</code> stores a value of <code>T</code> inside a particular …","","","","","","eg. <code>#[cfg(target_os = &quot;linux&quot;)]</code>","","","","","A single local definition.","A local binding (only value namespace)","","","","","","","","","","","","","","","","","","","Visibility is restricted to a certain module.","The defs which can be visible in the module.","","","","","","<code>Name</code> is a wrapper around string, which is used in hir for …","","","","","","","","","","","","","","Causes paths to ignore imports in the local module.","","","A function-like procedural macro.","Visibility is unrestricted.","","","","","","For IDE only","","","Primary API to get semantic information, like types, from …","<code>SemanticScope</code> encapsulates the notion of a scope (the set …","","","","","","","","","","","","<code>self::</code> is <code>Super(0)</code>","","","","","","","","","","","","","","","","","","","","A type parameter","","Compare ty::Ty","","","","","","","","","","","","","","","","","","","","","Visibility of an item, with the path resolved.","","","The adjusted type, or the original in case no adjustments …","The adjusted type, if an adjustment happened.","","","","","","","Iterates the ancestors of the given node, climbing up …","","","Skips the attributed item that caused the macro invocation …","If a type can be represented as <code>dyn Trait</code>, returns all …","","","","","","","","","","","","","","","If this path is a single identifier, like <code>foo</code>, return its …","","","","","","","","","","","Returns the text this name represents if it isn’t a …","Returns the tuple index this name represents if it is a …","","","","Iterates over associated types that may be specified after …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type this def’s body has to evaluate to.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If this is a macro call, returns the syntax node of the …","","","","","","Iterates over all child modules.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Topmost parent of this module. Every module has a …","Re-exports various subcrates databases so that the calling …","","","A textual representation of the HIR of this function for …","Returns a node which declares this module, either a …","","","","","Returns a node which defines this module. That is, a file …","","","","","Descend the token into macrocalls to all its mapped …","Descend the token into macrocalls to its first mapped …","","Descend the token into macrocalls to all its mapped …","Maps a node down by mapping its first and last token down.","","Re-export diagnostics such that clients of <code>hir</code> don’t …","","","","","","Returns a <code>Display</code>able type that is human-readable. Use …","","Returns a String representation of <code>self</code> that can be …","Returns a String representation of <code>self</code> for test purposes","Returns a <code>Display</code>able type that is human-readable and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If <code>item</code> has an attribute macro attached to it, expands it.","","","Return expansion information if it is a macro-expansion …","","","","","","","","","","","Find an AstNode by offset inside SyntaxNode, if it is …","Find an AstNode by offset inside SyntaxNode, if it is …","Find an AstNode by offset inside SyntaxNode, if it is …","Finds a path that can be used to refer to the given item …","Finds a path that can be used to refer to the given item …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fold the cfg by querying all basic <code>Atom</code> and <code>KeyValue</code> …","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts an <code>ast::TypeRef</code> to a <code>hir::TypeRef</code>.","Creates a <code>ModPath</code> from a <code>PathKind</code>, with no extra path …","","","","","","","Try to get the root URL of the documentation of a crate.","","Whether this function declaration has a definition.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks that particular type <code>ty</code> implements <code>std::ops::FnOnce</code>.","Checks that particular type <code>ty</code> implements …","","A map of all publicly exported items in a crate.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns a <code>Display</code>able type that is human-readable.","","","","","Return whether this file is an attr macro","","","","","","Indicate it is macro file generated for builtin derive","","","","","","","","","","","Return whether this file is the pseudo expansion of the …","","","","","Is this type parameter implicitly introduced (eg. <code>Self</code> in …","","Return whether this file is an include macro","","","","","","","","Returns <code>true</code> if the mutability is <code>Mut</code>.","","","","","","","","","","","","","","Returns <code>true</code> if the mutability is <code>Shared</code>.","","","Returns <code>true</code> when the atom comes from the target …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the crate this module is part of.","","","","","","","","","","","","Returns the crate defining this item (or <code>None</code> if <code>self</code> is …","","","","","","","","Returns the number of segments in the path (counting …","","","","","","","","A fake name for things missing in the source code.","","","","","","","","","","","","","","","","","","","","","","","","","","","Name of this module.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The original type of the expression or pattern.","Attempts to map the node out of macro expanded files. This …","","If this is a macro call, returns the syntax node of the …","For macro-expansion files, returns the file original …","Falls back to the macro call range if the node cannot be …","Falls back to the macro call range if the node cannot be …","Attempts to map the syntax node back up its macro calls.","Attempts to map the syntax node back up its macro calls.","Attempts to map the node out of macro expanded files …","Attempts to map the node out of macro expanded files …","","","","Finds a parent module.","","","","","","","","","","","Parses this attribute as a token tree consisting of comma …","","","","","","","","","","","","","","","","","","","","","If this local is part of a multi-local, retrieve the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get this function’s return type","","","","","","Returns a <code>ModuleScope</code>: a set of items, visible in this …","","","","","","#[path(ident)]","Fetches the definition’s source node. Using …","Search for a definition’s source and cache its syntax …","","","","","","","","","","","","","","","","","","","","","","","","Resolve a path as-if it was written at the given scope. …","","","","","#[path = “string”]","","","File symbol extraction.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the textual representation of this name as a …","","","","","#[path TokenTree]","","FIXME: this only lists trait bounds from the item defining …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type as in the signature of the struct (i.e., …","","","","Turns this ADT into a type. Any type parameters of the ADT …","","","","","","","","","","","Turns this ADT into a type with the given type parameters. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Note: <code>VisibleTraits</code> should be treated as an opaque type, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Representative struct for the query group.","","","","","","","","","","","","","","","","","Representative struct for the query group.","","","","","","","","","","","","","","","","","","","Representative struct for the query group.","","","","","","","","","","","","","","","","","","","","","Representative struct for the query group.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This exists just for Chalk, because Chalk just has a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes the block-level <code>DefMap</code>, returning <code>None</code> when <code>block</code> …pecial case of the previous query for procedural macros. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","","","","Collects all crates in the dependency graph that have …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Macro ids. That’s probably the tricksiest bit in …","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Lowers syntactic macro call to a token tree representation.","Extracts syntax node, corresponding to a macro call. That…","Gets the expander for this macro. This compiles …","Expand macro call to a token tree. This query is LRUed (we …","Firewall query that returns the error from the <code>macro_expand</code>…","","","","","","","","","","","","","","","Implementation for the macro case.","Main public API – parses a hir file, not caring whether …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The maximum depth for potentially infinitely-recursive …","","","Set the value of the <code>enable_proc_attr_macros</code> input.","Set the value of the <code>enable_proc_attr_macros</code> input and …eturns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","The crate id of the proc-macro this macro belongs to, or …","","","","","","","","","","This expression is the whole method chain up to and …","","","","","","","","","","If the diagnostic can be pinpointed more accurately than …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Import map entry should contain the query string.","","Import map entry should strictly match the query string.","","Import map entry should contain all letters from the query …","Item import details stored in the <code>ImportMap</code>.","","A map from publicly exported items to the path needed to …","","","","","A way to match import map contents against the search …","","","","Matches only the entries that are associated items, …","","","","","","","","","","","","","Respect casing of the query string when matching.","","","","","The module containing this item.","","","","","","","","","","Do not include imports of the specified kind in the search …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Whether the import is a trait associated item or not.","Limits the returned number of items to <code>limit</code>.","Matches entries’ names only, ignoring the rest of the …","","","","A path that can be used to import the item, relative to …","Returns the <code>ModPath</code> needed to import/mention <code>item</code>, …","Searches dependencies of <code>krate</code> for an importable path …","Specifies the way to search for the entries using the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The actual data that is stored in the index. It should be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","The file id for both the <code>ptr</code> and <code>name_ptr</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","This points to the <code>syntax::ast::Name</code> identifier of the …","","","","","This points to the whole syntax node of the declaration.","","","","","","","","","","","","","","","",""],"i":[1,2,0,0,3,4,5,6,6,0,7,0,0,0,8,6,0,9,0,0,0,0,10,0,9,0,11,0,3,12,12,13,0,0,0,0,0,14,0,3,15,16,4,0,11,17,0,2,0,9,13,11,0,9,0,2,7,18,0,19,7,20,0,0,0,21,7,14,0,14,3,15,16,4,0,0,5,0,0,0,0,0,0,0,22,4,5,7,0,0,0,6,0,0,21,0,5,0,17,0,11,5,0,3,7,0,0,0,23,24,0,0,0,0,0,0,0,3,10,25,0,5,0,26,27,0,0,28,0,7,0,6,0,20,0,7,0,0,7,2,12,28,0,9,25,7,29,26,7,0,0,0,11,0,0,20,27,7,10,0,3,15,0,19,30,0,2,0,11,0,3,22,4,7,29,14,14,0,0,3,16,4,0,0,0,0,11,17,0,23,24,0,0,19,30,29,5,0,0,0,0,0,23,24,0,3,30,4,0,0,0,31,32,32,33,34,34,34,5,35,35,36,36,36,37,38,37,39,3,40,41,42,37,37,36,37,3,37,19,43,37,27,27,44,24,40,36,37,45,46,47,47,37,35,40,48,45,40,49,50,3,51,52,53,54,55,19,40,41,56,57,42,58,24,16,17,59,60,61,34,5,37,35,15,21,6,38,35,1,13,47,43,2,62,63,36,14,11,32,48,23,33,64,50,3,51,28,52,53,54,55,19,30,15,40,20,44,31,41,56,57,42,65,9,58,24,16,22,4,45,66,67,68,17,59,60,61,69,34,37,70,26,5,46,18,71,72,27,7,73,74,29,10,25,12,21,6,38,35,1,13,47,43,2,62,63,36,14,11,32,48,23,33,64,50,3,51,28,52,53,54,55,19,30,15,40,20,44,31,41,56,57,42,65,9,58,24,16,22,4,45,66,67,68,17,59,60,61,69,34,37,70,26,5,46,18,71,72,27,7,73,74,29,10,25,12,18,62,3,3,33,18,38,50,21,6,38,47,43,2,62,63,36,11,23,33,50,3,51,52,53,54,55,19,30,15,40,20,44,31,41,56,57,42,65,9,58,24,16,4,45,66,67,68,17,59,60,61,69,34,37,26,5,46,18,71,72,27,7,73,29,10,25,12,21,6,38,47,43,2,62,63,36,11,23,33,50,3,51,52,53,54,55,19,30,15,40,20,44,31,41,56,57,42,65,9,58,24,16,4,45,66,67,68,17,59,60,61,69,34,37,26,5,46,18,71,72,27,7,73,29,10,25,12,36,21,47,43,2,16,16,16,16,37,37,37,50,0,35,48,40,50,50,38,59,18,50,33,1,18,71,35,35,35,35,35,36,0,50,3,15,35,31,75,33,75,75,75,49,50,51,52,53,54,55,19,40,41,56,57,42,58,16,17,59,60,61,34,18,71,33,37,21,6,38,13,47,43,2,62,63,36,11,23,33,50,3,51,28,52,53,54,55,19,30,15,40,20,31,41,56,57,42,65,9,58,24,16,4,45,66,67,68,17,59,60,61,69,34,37,26,5,46,18,71,72,27,7,29,10,25,12,21,6,38,13,47,43,2,62,63,36,11,23,33,50,3,51,28,52,53,54,55,19,30,15,40,20,31,41,56,57,42,65,9,58,24,16,4,45,66,67,68,17,59,60,61,69,34,37,26,5,46,18,71,72,27,7,29,10,25,12,47,43,41,35,35,35,35,62,62,74,52,53,55,30,37,74,36,36,35,35,35,50,50,21,21,6,38,35,13,47,47,43,43,2,62,63,36,11,32,48,23,33,64,50,3,51,28,52,53,54,55,19,30,15,40,44,31,41,56,57,42,65,9,58,24,16,22,4,45,66,67,68,17,59,60,61,69,34,37,70,26,5,46,18,71,72,27,7,74,29,10,25,12,6,21,6,6,38,35,1,13,47,43,43,2,62,62,62,63,36,14,11,32,48,23,33,33,64,50,50,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,51,51,28,52,52,53,53,54,54,55,55,19,19,19,19,19,30,30,30,30,30,15,15,15,15,15,40,40,20,20,44,31,41,41,56,56,57,57,42,42,65,65,9,58,58,24,24,24,24,16,16,22,4,4,4,4,4,4,4,4,4,4,4,4,45,45,66,67,68,68,17,17,17,17,17,59,59,60,60,61,61,69,69,34,34,37,70,26,5,5,46,18,71,72,27,7,73,74,29,10,25,12,7,43,27,43,43,18,38,38,33,32,40,18,19,42,40,21,6,47,43,2,62,63,36,23,33,50,3,51,52,53,54,55,19,30,15,40,31,41,56,57,42,65,9,58,24,16,4,45,66,67,68,17,59,60,61,69,34,5,46,27,7,25,35,75,50,51,52,53,54,55,19,40,41,56,57,42,58,17,59,60,61,69,37,7,74,74,74,50,37,37,37,0,38,38,21,6,38,35,1,13,47,43,2,62,63,36,14,11,32,48,23,33,64,50,3,51,28,52,53,54,55,19,30,15,40,20,44,31,41,56,57,42,65,9,58,24,16,22,4,45,66,67,68,17,59,60,61,69,34,37,70,26,5,46,18,71,72,27,7,73,74,29,10,25,12,75,43,37,40,58,62,35,57,65,37,33,62,58,34,65,37,40,37,50,62,58,35,62,65,37,58,43,59,35,62,50,65,62,58,50,56,45,27,37,34,37,37,45,18,18,18,37,45,37,43,45,27,37,65,21,65,37,37,57,35,35,35,35,40,37,76,25,57,34,57,37,37,37,52,55,58,70,43,0,77,48,50,50,51,52,53,55,19,40,41,56,57,42,58,24,16,37,5,64,57,18,50,43,73,63,62,36,59,61,40,47,48,3,52,53,54,55,19,30,15,40,41,56,57,42,58,16,45,68,17,59,60,61,69,34,33,70,50,3,51,52,53,54,55,19,30,15,40,44,41,56,57,42,65,58,16,45,66,67,68,17,59,60,61,69,64,73,21,6,38,47,43,2,62,63,36,11,33,50,3,51,28,52,53,54,55,19,30,15,40,31,41,56,57,42,65,58,24,16,4,45,66,67,68,17,59,60,61,69,34,37,26,5,46,18,71,72,7,10,25,35,36,46,47,37,47,37,33,32,32,35,36,62,62,36,36,36,36,35,35,4,70,40,50,45,68,60,61,69,51,55,6,35,35,72,18,21,47,43,2,72,50,35,44,43,33,48,43,33,70,35,35,37,37,52,45,35,35,35,49,50,51,52,53,54,55,19,40,41,56,57,42,58,16,17,59,60,61,34,35,35,35,35,35,35,35,35,35,35,35,35,19,40,70,33,33,33,35,50,35,35,43,40,34,72,8,35,51,52,53,54,55,19,40,44,31,41,56,57,42,58,45,68,60,69,34,71,35,35,35,48,69,43,7,65,72,37,74,0,36,66,35,35,35,36,21,6,38,47,43,2,62,63,36,11,23,33,50,3,51,52,53,54,55,19,30,15,40,20,44,31,41,56,57,42,65,9,58,24,16,4,45,66,67,68,17,59,60,61,69,34,37,26,5,46,18,71,72,27,7,73,29,10,25,12,47,21,47,43,35,72,34,59,33,36,21,6,38,35,1,13,47,43,2,62,63,36,14,11,32,48,23,33,64,50,3,51,28,52,53,54,55,19,30,15,40,20,44,31,41,56,57,42,65,9,58,24,16,22,4,45,66,67,68,17,59,60,61,69,34,37,70,26,5,46,18,71,72,27,7,73,74,29,10,25,12,21,6,38,35,1,13,47,43,2,62,63,36,14,11,32,48,23,33,64,50,3,51,28,52,53,54,55,19,30,15,40,20,44,31,41,56,57,42,65,9,58,24,16,22,4,45,66,67,68,17,59,60,61,69,34,37,70,26,5,46,18,71,72,27,7,73,74,29,10,25,12,37,51,52,53,54,19,44,31,41,56,42,65,45,59,61,69,19,37,21,6,38,35,1,13,47,43,2,62,63,36,14,11,32,48,23,33,64,50,3,51,28,52,53,54,55,19,30,15,40,20,44,31,41,56,57,42,65,9,58,24,16,22,4,45,66,67,68,17,59,60,61,69,34,37,70,26,5,46,18,71,72,27,7,73,74,29,10,25,12,35,35,35,57,4,42,36,41,56,36,54,33,76,50,3,51,52,53,54,55,19,40,41,56,57,42,58,16,48,37,7,36,73,78,79,80,81,82,83,84,85,86,87,88,89,90,91,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,144,145,146,148,145,152,153,154,155,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,156,156,157,158,159,160,161,162,163,156,157,156,157,164,165,166,165,166,165,166,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,166,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,157,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,158,159,160,161,162,163,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,166,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,157,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,158,159,160,161,162,163,156,157,158,159,160,161,162,163,158,159,160,161,162,163,163,165,166,156,157,156,157,165,166,165,165,166,165,166,165,165,166,169,170,171,172,173,174,175,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,165,166,165,166,158,159,160,161,162,163,158,159,160,161,162,163,164,165,166,156,157,165,166,165,166,165,166,165,166,169,170,171,172,173,174,175,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,158,159,160,161,162,163,177,166,157,156,157,156,156,157,177,166,157,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,166,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,157,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,158,159,160,161,161,162,162,163,163,158,159,160,161,162,163,165,166,165,166,156,157,165,166,156,157,156,157,158,159,160,161,162,163,164,165,166,156,157,156,157,156,157,165,166,169,170,171,172,173,174,175,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,169,170,171,172,173,174,175,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,156,156,157,156,157,156,157,156,157,280,177,156,157,156,157,280,177,280,177,280,177,280,177,280,177,156,157,156,157,280,177,164,280,177,280,177,280,177,280,177,280,177,280,177,156,157,280,177,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,166,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,157,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,158,159,160,161,162,163,165,166,280,177,156,157,156,157,280,177,280,177,280,177,280,177,280,177,156,157,156,157,280,177,164,280,177,280,177,280,177,280,177,280,177,280,177,156,157,280,177,165,166,164,164,164,164,164,165,166,177,166,157,158,159,160,161,162,163,177,166,157,164,164,163,165,166,156,157,169,170,171,172,173,174,175,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,167,156,157,165,165,165,166,165,166,156,157,158,159,160,161,162,163,165,166,156,157,156,157,156,157,156,157,156,157,156,156,157,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,166,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,157,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,158,159,160,161,162,163,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,166,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,157,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,158,159,160,161,162,163,156,157,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,166,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,157,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,158,159,160,161,162,163,165,166,156,157,165,166,165,166,0,0,281,0,281,0,281,0,281,0,281,0,281,0,281,0,281,0,281,0,281,0,281,0,281,0,281,0,281,0,281,0,281,0,281,0,281,0,281,282,281,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,282,281,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,282,298,283,287,286,287,288,289,286,287,288,289,283,284,285,286,287,288,289,286,287,288,289,298,282,74,294,295,282,293,296,296,296,297,299,74,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,282,298,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,282,74,74,74,281,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,282,286,288,288,286,288,299,289,296,286,287,288,289,297,287,288,289,290,291,292,287,286,286,288,289,74,286,287,288,289,281,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,282,281,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,282,281,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,282,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,319,319,319,320,319,320,319,320,0,0,0,0,319,319,0,0,319,319,319,321,322,323,324,319,320,321,322,323,324,319,320,321,321,322,323,322,323,322,324,322,323,324,319,322,323,324,319,321,322,323,323,324,319,320,321,322,323,324,319,320,321,319,324,324,322,323,324,319,320,321,322,321,321,322,323,321,322,324,0,321,323,322,323,323,322,323,324,319,320,321,322,323,324,319,320,321,322,323,324,319,320,321,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,325,0,325,0,0,325,325,325,325,325,0,325,325,325,326,327,328,325,326,327,328,325,327,328,325,327,328,325,326,327,327,328,325,327,328,325,327,328,325,326,327,328,325,327,328,325,328,326,327,328,325,325,327,327,327,328,327,328,328,328,328,328,327,328,325,326,327,328,325,326,327,328,325,326,327,328,325],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["hirdatabase",8]],["access",4]],[[],["type",3]],null,[[["hirdatabase",8]],["vec",3,[["crate",3]]]],[[["hirdatabase",8],["trait",3]],["vec",3,[["impl",3]]]],[[["hirdatabase",8],["type",3]],["vec",3,[["impl",3]]]],[[["hirdatabase",8],["crate",3]],["vec",3,[["impl",3]]]],[[["perns",3]],["arrayvec",3]],[[["",0],["syntaxnode",6],["textsize",3]]],[[["",0],["syntaxnode",6]]],[[["astdatabase",8]]],[[["astdatabase",8]]],[[["astdatabase",8]]],[[["",0],["hirdatabase",8]]],[[["",0],["cfgdiff",3]]],[[["",0]],["option",4,[["adt",4]]]],[[["hirdatabase",8]],["option",4,[["associtem",4]]]],[[["hirdatabase",8]],["option",4,[["associtem",4]]]],[[["hirdatabase",8]],["option",4,[["associtem",4]]]],[[["hirdatabase",8]],["option",4,[["associtem",4]]]],[[["hirdatabase",8]],["option",4,[["associtem",4]]]],[[["",0],["hirdatabase",8]],["option",4,[["trait",3]]]],[[["",0]],["option",4,[["builtintype",3]]]],[[["",0],["defdatabase",8],["crateid",3],["fnmut",8]],["result",4,[["result",4,[["macrocallid",3],["erroremitted",3]]],["unresolvedmacro",3]]]],[[["",0],["hirdatabase",8]],["option",4,[["callable",3]]]],[[],["option",4,[["defwithbody",4]]]],[[["",0]],["option",4,[["trait",3]]]],[[["",0]],["option",4,[["enum",3]]]],[[["",0]],["option",4,[["name",3]]]],[[["",0],["hirdatabase",8]],["option",4]],[[],["str",0]],[[],["str",0]],[[["",0],["hirdatabase",8]],["option",4,[["local",3]]]],[[],["option",4,[["moduledef",4]]]],[[["hirdatabase",8]],["option",4,[["macro",3]]]],[[["",0]],["infile",3]],[[["",0]],["option",4]],[[["hirdatabase",8]],["option",4,[["selfparam",3]]]],[[["",0]],["str",0]],[[["",0]],["option",4,[["smolstr",3]]]],[[["",0]],["option",4,[["usize",0]]]],[[["",0],["hirdatabase",8]],["option",4,[["typeparam",3]]]],[[["",0],["syntaxnode",6]]],[[["hirdatabase",8]],["vec",3,[["param",3]]]],[[["",0],["pathresolution",4]],["option",4]],[[["hirdatabase",8]],["box",3]],[[["hirdatabase",8]],["option",4,[["type",3]]]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],["attrswithowner",3]],[[["",0],["hirdatabase",8]],["option",4,[["attrswithowner",3]]]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],["attrswithowner",3]],[[["",0],["hirdatabase",8]],["option",4,[["attrswithowner",3]]]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],["attrswithowner",3]],[[["hirdatabase",8]],["attrswithowner",3]],[[["",0],["hirdatabase",8]],["option",4,[["attrswithowner",3]]]],[[["",0],["hirdatabase",8]]],[[["",0],["identpat",3]],["option",4,[["bindingmode",4]]]],[[["hirdatabase",8]],["typestr",0]],["attrquery",3]],[[["astdatabase",8]],["option",4,[["infile",3,[["syntaxnode",3,[["rustlanguage",4]]]]]]]],[[["",0],["hirdatabase",8]],["option",4]],[[["",0],["hirdatabase",8]],["option",4,[["string",3]]]],[[["",0],["hirdatabase",8]],["cfgoptions",3]],[[["",0]],["option",4,[["cfgexpr",4]]]],[[["",0],["cfgexpr",4]],["option",4,[["bool",0]]]],[[["hirdatabase",8]]],[[["",0]],["cfgatom",4]],[[["",0]],["cfgexpr",4]],[[["",0]],["cfgoptions",3]],[[["",0]],["name",3]],[[["",0]],["modpath",3]],[[["",0]],["pathkind",4]],[[["",0]],["hirfileid",3]],[[["",0]],["macrofile",3]],[[["",0]],["infile",3]],[[["",0]],["pathresolution",4]],[[["",0]],["namespace",4]],[[["",0]],["crate",3]],[[["",0]],["module",3]],[[["",0]],["moduledef",4]],[[["",0]],["field",3]],[[["",0]],["struct",3]],[[["",0]],["union",3]],[[["",0]],["enum",3]],[[["",0]],["variant",3]],[[["",0]],["adt",4]],[[["",0]],["variantdef",4]],[[["",0]],["defwithbody",4]],[[["",0]],["function",3]],[[["",0]],["access",4]],[[["",0]],["param",3]],[[["",0]],["selfparam",3]],[[["",0]],["const",3]],[[["",0]],["static",3]],[[["",0]],["trait",3]],[[["",0]],["typealias",3]],[[["",0]],["builtintype",3]],[[["",0]],["macrokind",4]],[[["",0]],["macro",3]],[[["",0]],["iteminns",4]],[[["",0]],["associtem",4]],[[["",0]],["genericdef",4]],[[["",0]],["local",3]],[[["",0]],["builtinattr",3]],[[["",0]],["toolmodule",3]],[[["",0]],["label",3]],[[["",0]],["genericparam",4]],[[["",0]],["typeparam",3]],[[["",0]],["lifetimeparam",3]],[[["",0]],["constparam",3]],[[["",0]],["typeorconstparam",3]],[[["",0]],["impl",3]],[[["",0]],["type",3]],[[["",0]],["bindingmode",4]],[[["",0]],["scopedef",4]],[[["",0]],["documentation",3]],[[["",0]],["attrs",3]],[[["",0]],["attrswithowner",3]],[[["",0]],["attr",3]],[[["",0]],["mutability",4]],[[["",0]],["typeref",4]],[[["",0]],["attributetemplate",3]],[[["",0]],["structkind",4]],[[["",0]],["modulesource",4]],[[["",0]],["visibility",4]],[[["",0]],["prefixkindinfile",3]],[[["",0],["cfgatom",4]],["ordering",4]],[[["",0],["name",3]],["ordering",4]],[[["",0],["modpath",3]],["ordering",4]],[[["",0],["pathkind",4]],["ordering",4]],[[["hirdatabase",8]],["associtemcontainer",4]],[[["hirdatabase",8]],["option",4,[["trait",3]]]],[[["hirdatabase",8]],["option",4,[["trait",3]]]],[[["hirdatabase",8]],["option",4,[["trait",3]]]],[[["",0]],["bool",0]],[[["",0],["hirdatabase",8],["type",3]],["bool",0]],[[["",0],["hirdatabase",8],["type",3]],["bool",0]],[[["hirdatabase",8]],["module",3]],null,null,null,[[["hirdatabase",8]],["string",3]],[[["hirdatabase",8]],["option",4,[["infile",3,[["module",3]]]]]],[[["hirdatabase",8]],["vec",3,[["moduledef",4]]]],[[],["cfgoptions",3]],[[["hirdatabase",8]],["option",4,[["type",3]]]],[[],["attrs",3]],[[["hirdatabase",8]],["infile",3,[["modulesource",4]]]],[[["hirdatabase",8]],["vec",3,[["cratedependency",3]]]],[[["",0]]],[[["",0]]],[[["",0]],["attrs",3]],[[["",0],["syntaxtoken",6]],["smallvec",3]],[[["",0],["syntaxtoken",6]],["syntaxtoken",6]],[[["",0],["syntaxtoken",6]],["syntaxtoken",6]],[[["",0],["syntaxtoken",6]],["smallvec",3]],[[["",0],["astnode",8]],["smallvec",3]],[[]],null,[[["hirdatabase",8],["vec",3]]],[[["hirdatabase",8]],["vec",3,[["anydiagnostic",4]]]],[[["hirdatabase",8],["vec",3]]],[[["",0],["infile",3,[["syntaxnodeptr",6]]]],["filerange",3]],[[["hirdatabase",8]],["str",0]],[[["",0],["hirdatabase",8]],["hirdisplaywrapper",3]],[[["hirdatabase",8]],["option",4,[["cratedisplayname",3]]]],[[["",0],["hirdatabase",8],["moduleid",3]],["result",4,[["string",3],["displaysourcecodeerror",4]]]],[[["",0],["hirdatabase",8]],["hirdisplaywrapper",3]],[[["",0],["hirdatabase",8],["option",4,[["usize",0]]]],["hirdisplaywrapper",3]],[[["hirdatabase",8]],["option",4,[["documentation",3]]]],[[["hirdatabase",8]],["option",4,[["documentation",3]]]],[[["hirdatabase",8]],["option",4,[["documentation",3]]]],[[["hirdatabase",8]],["option",4,[["documentation",3]]]],[[["hirdatabase",8]],["option",4,[["documentation",3]]]],[[["hirdatabase",8]],["option",4,[["documentation",3]]]],[[["hirdatabase",8]],["option",4,[["documentation",3]]]],[[["hirdatabase",8]],["option",4,[["documentation",3]]]],[[["hirdatabase",8]],["option",4,[["documentation",3]]]],[[["hirdatabase",8]],["option",4,[["documentation",3]]]],[[["hirdatabase",8]],["option",4,[["documentation",3]]]],[[["hirdatabase",8]],["option",4,[["documentation",3]]]],[[["hirdatabase",8]],["option",4,[["documentation",3]]]],[[["hirdatabase",8]],["option",4,[["documentation",3]]]],[[["hirdatabase",8]],["option",4,[["documentation",3]]]],[[["hirdatabase",8]],["option",4,[["documentation",3]]]],[[["hirdatabase",8]],["option",4,[["documentation",3]]]],[[["hirdatabase",8]],["option",4,[["documentation",3]]]],[[["hirdatabase",8]],["option",4,[["documentation",3]]]],[[["hirdatabase",8]],["option",4,[["documentation",3]]]],[[["",0]],["option",4,[["documentation",3]]]],[[["",0],["defdatabase",8]],["option",4]],[[["hirdatabase",8]],["edition",4]],[[["",0],["hirdatabase",8]]],[[["",0],["cfgatom",4]],["bool",0]],[[["",0],["cfgexpr",4]],["bool",0]],[[["",0],["cfgoptions",3]],["bool",0]],[[["",0],["origin",4]],["bool",0]],[[["",0],["name",3]],["bool",0]],[[["",0],["modpath",3]],["bool",0]],[[["",0],["pathkind",4]],["bool",0]],[[["",0],["hirfileid",3]],["bool",0]],[[["",0],["macrofile",3]],["bool",0]],[[["",0],["infile",3]],["bool",0]],[[["",0],["pathresolution",4]],["bool",0]],[[["",0],["namespace",4]],["bool",0]],[[["",0],["crate",3]],["bool",0]],[[["",0],["module",3]],["bool",0]],[[["",0],["moduledef",4]],["bool",0]],[[["",0],["field",3]],["bool",0]],[[["",0],["fieldsource",4]],["bool",0]],[[["",0],["struct",3]],["bool",0]],[[["",0],["union",3]],["bool",0]],[[["",0],["enum",3]],["bool",0]],[[["",0],["variant",3]],["bool",0]],[[["",0],["adt",4]],["bool",0]],[[["",0],["variantdef",4]],["bool",0]],[[["",0],["defwithbody",4]],["bool",0]],[[["",0],["function",3]],["bool",0]],[[["",0],["access",4]],["bool",0]],[[["",0],["selfparam",3]],["bool",0]],[[["",0],["const",3]],["bool",0]],[[["",0],["static",3]],["bool",0]],[[["",0],["trait",3]],["bool",0]],[[["",0],["typealias",3]],["bool",0]],[[["",0],["builtintype",3]],["bool",0]],[[["",0],["macrokind",4]],["bool",0]],[[["",0],["macro",3]],["bool",0]],[[["",0],["iteminns",4]],["bool",0]],[[["",0],["associtem",4]],["bool",0]],[[["",0],["genericdef",4]],["bool",0]],[[["",0],["local",3]],["bool",0]],[[["",0],["builtinattr",3]],["bool",0]],[[["",0],["toolmodule",3]],["bool",0]],[[["",0],["label",3]],["bool",0]],[[["",0],["genericparam",4]],["bool",0]],[[["",0],["typeparam",3]],["bool",0]],[[["",0],["lifetimeparam",3]],["bool",0]],[[["",0],["constparam",3]],["bool",0]],[[["",0],["typeorconstparam",3]],["bool",0]],[[["",0],["impl",3]],["bool",0]],[[["",0],["type",3]],["bool",0]],[[["",0],["bindingmode",4]],["bool",0]],[[["",0],["scopedef",4]],["bool",0]],[[["",0],["documentation",3]],["bool",0]],[[["",0],["attrs",3]],["bool",0]],[[["",0],["attrswithowner",3]],["bool",0]],[[["",0],["attr",3]],["bool",0]],[[["",0],["mutability",4]],["bool",0]],[[["",0],["typeref",4]],["bool",0]],[[["",0],["structkind",4]],["bool",0]],[[["",0],["modulesource",4]],["bool",0]],[[["",0],["visibility",4]],["bool",0]],[[["",0],["prefixkind",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0]],["escapedname",3]],[[["",0]],["escapedmodpath",3]],[[["hirdatabase",8]],["result",4,[["computedexpr",4],["constevalerror",4]]]],[[["",0],["macrocall",3]],["option",4,[["syntaxnode",6]]]],[[["",0],["item",4]],["option",4,[["syntaxnode",6]]]],[[["",0],["attr",3]],["option",4,[["syntaxnode",6]]]],[[["",0],["attr",3]],["option",4,[["vec",3,[["syntaxnode",6]]]]]],[[["astdatabase",8]],["option",4,[["expansioninfo",3]]]],[[["astdatabase",8]],["u32",0]],null,[[["hirdatabase",8]],["vec",3,[["field",3]]]],[[["hirdatabase",8]],["vec",3,[["field",3]]]],[[["hirdatabase",8]],["vec",3,[["field",3]]]],[[["hirdatabase",8]],["vec",3,[["field",3]]]],[[["",0],["hirdatabase",8]],["vec",3]],null,null,[[["",0],["astdatabase",8]],["syntaxnode",3,[["rustlanguage",4]]]],[[["",0],["syntaxnode",6],["textsize",3]],["option",4,[["astnode",8]]]],[[["",0],["syntaxnode",6],["textsize",3]],["option",4,[["astnode",8]]]],[[["",0],["syntaxnode",6],["textsize",3]]],[[["defdatabase",8]],["option",4,[["modpath",3]]]],[[["defdatabase",8],["prefixkind",4]],["option",4,[["modpath",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["fn",8]],["option",4,[["bool",0]]]],[[]],[[["cfgatom",4]],["cfgexpr",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["name",3]],["modpath",3]],[[]],[[]],[[["macrofile",3]],["hirfileid",3]],[[["fileid",3]],["hirfileid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["crateid",3]],["crate",3]],[[]],[[]],[[["moduleid",3]],["module",3]],[[]],[[["module",3]],["moduledef",4]],[[["variantdef",4]]],[[["typealias",3]],["moduledef",4]],[[["const",3]],["moduledef",4]],[[["moduledefid",4]]],[[["associtem",4]]],[[["variant",3]],["moduledef",4]],[[]],[[["trait",3]],["moduledef",4]],[[["union",3]],["moduledef",4]],[[["enum",3]],["moduledef",4]],[[["struct",3]],["moduledef",4]],[[["adt",4]],["moduledef",4]],[[["builtintype",3]],["moduledef",4]],[[["static",3]],["moduledef",4]],[[["macro",3]],["moduledef",4]],[[["function",3]],["moduledef",4]],[[["fieldid",3]]],[[]],[[]],[[]],[[["structid",3]],["struct",3]],[[["unionid",3]],["union",3]],[[]],[[["enumid",3]],["enum",3]],[[]],[[["enumvariantid",3]]],[[]],[[]],[[["adtid",4]]],[[["union",3]],["adt",4]],[[["struct",3]],["adt",4]],[[["enum",3]],["adt",4]],[[["struct",3]],["variantdef",4]],[[]],[[["union",3]],["variantdef",4]],[[["variantid",4]]],[[["variant",3]],["variantdef",4]],[[]],[[["static",3]],["defwithbody",4]],[[["const",3]],["defwithbody",4]],[[["function",3]],["defwithbody",4]],[[["defwithbodyid",4]]],[[]],[[["functionid",3]],["function",3]],[[["mutability",4]],["access",4]],[[]],[[]],[[]],[[["constid",3]],["const",3]],[[]],[[["staticid",3]],["static",3]],[[]],[[["traitid",3]],["trait",3]],[[]],[[]],[[["typealiasid",3]],["typealias",3]],[[]],[[["builtintype",4]]],[[]],[[["macroid",4]],["macro",3]],[[]],[[]],[[["macro",3]]],[[["iteminns",4]]],[[["moduledef",4]]],[[["associtemid",4]]],[[]],[[]],[[["genericdefid",4]]],[[["typealias",3]],["genericdef",4]],[[]],[[["adt",4]],["genericdef",4]],[[["enum",3]],["genericdef",4]],[[["impl",3]],["genericdef",4]],[[["const",3]],["genericdef",4]],[[["variant",3]],["genericdef",4]],[[["struct",3]],["genericdef",4]],[[["trait",3]],["genericdef",4]],[[["function",3]],["genericdef",4]],[[["union",3]],["genericdef",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[["lifetimeparam",3]],["genericparam",4]],[[["constparam",3]],["genericparam",4]],[[["typeparam",3]],["genericparam",4]],[[["genericparamid",4]]],[[]],[[]],[[["typeparamid",3]],["typeparam",3]],[[]],[[["lifetimeparamid",3]],["lifetimeparam",3]],[[["constparamid",3]],["constparam",3]],[[]],[[]],[[["typeorconstparamid",3]],["typeorconstparam",3]],[[["implid",3]],["impl",3]],[[]],[[]],[[]],[[]],[[]],[[["iteminns",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["lowerctx",3],["type",4]],["typeref",4]],[[["pathkind",4]],["modpath",3]],[[["bool",0]],["mutability",4]],[[["pathkind",4]],["modpath",3]],[[["astdatabase",8],["path",3],["hygiene",3]],["option",4,[["modpath",3]]]],[[["",0],["attrid",3]],["option",4,[["attr",3]]]],[[["",0]]],[[["",0],["str",0]]],[[["crate",3],["hirdatabase",8]],["option",4,[["string",3]]]],[[["",0]],["bool",0]],[[["hirdatabase",8]],["bool",0]],[[["",0]],["bool",0]],[[["hirdatabase",8]],["bool",0]],[[["hirdatabase",8]],["bool",0]],[[["hirdatabase",8]],["boolsyntaxnode",6]],["hirfileid",3]],[[["",0],["hirformatter",3]],["result",4,[["hirdisplayerror",4]]]],[[["",0],["hirformatter",3]],["result",4,[["hirdisplayerror",4]]]],[[["",0],["hirformatter",3]],["result",4,[["hirdisplayerror",4]]]],[[["",0],["hirformatter",3]],["result",4,[["hirdisplayerror",4]]]],[[["",0],["hirformatter",3]],["result",4,[["hirdisplayerror",4]]]],[[["",0],["hirformatter",3]],["result",4,[["hirdisplayerror",4]]]],[[["",0],["hirformatter",3]],["result",4,[["hirdisplayerror",4]]]],[[["",0],["hirformatter",3]],["result",4,[["hirdisplayerror",4]]]],[[["",0],["hirformatter",3]],["result",4,[["hirdisplayerror",4]]]],[[["",0],["hirformatter",3]],["result",4,[["hirdisplayerror",4]]]],[[["",0],["hirformatter",3]],["result",4,[["hirdisplayerror",4]]]],[[["",0],["hirformatter",3]],["result",4,[["hirdisplayerror",4]]]],[[["",0],["hirformatter",3]],["result",4,[["hirdisplayerror",4]]]],[[["",0],["hirformatter",3]],["result",4,[["hirdisplayerror",4]]]],[[["",0],["hirformatter",3]],["result",4,[["hirdisplayerror",4]]]],[[["",0],["hirformatter",3]],["result",4,[["hirdisplayerror",4]]]],[[["",0],["hirformatter",3]],["result",4,[["hirdisplayerror",4]]]],[[["",0],["hirformatter",3]],["result",4,[["hirdisplayerror",4]]]],[[["",0],["hirformatter",3]],["result",4,[["hirdisplayerror",4]]]],[[["",0],["hirformatter",3]],["result",4,[["hirdisplayerror",4]]]],[[["",0],["hirformatter",3]],["result",4,[["hirdisplayerror",4]]]],null,null,null,[[["hirdatabase",8]],["vec",3,[["impl",3]]]],[[["",0],["hirdatabase",8]],["bool",0]],[[["",0],["hirdatabase",8]],["bool",0]],[[["",0],["hirdatabase",8],["trait",3]],["bool",0]],null,[[["",0],["smolstr",3]]],[[["",0],["smolstr",3],["smolstr",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["hirdatabase",8],["option",4,[["usize",0]]],["bool",0],["displaytarget",4]],["hirdisplaywrapper",3]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["hirdatabase",8]],["bool",0]],[[["",0],["hirdatabase",8]],["bool",0]],[[["",0],["astdatabase",8]],["bool",0]],[[["",0],["item",4]],["bool",0]],[[["hirdatabase",8]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["hirdatabase",8]],["bool",0]],[[["",0],["astdatabase",8]],["option",4,[["infile",3,[["attr",3]]]]]],[[["",0],["hirdatabase",8]],["bool",0]],[[["hirdatabase",8]],["option",4,[["infile",3,[["attr",3]]]]]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["hirdatabase",8]],["bool",0]],[[["",0],["hirdatabase",8]],["bool",0]],[[["hirdatabase",8]],["bool",0]],[[["",0],["astdatabase",8]],["bool",0]],[[["",0],["hirdatabase",8]],["bool",0]],[[["",0],["adt",4]],["bool",0]],[[["",0],["astdatabase",8]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0],["hirdatabase",8]],["bool",0]],[[["",0]],["bool",0]],[[["hirdatabase",8]],["bool",0]],[[["",0],["expr",4]],["option",4,[["mutability",4]]]],[[["",0],["astdatabase",8]],["bool",0]],[[["hirdatabase",8]],["bool",0]],[[["",0]],["bool",0]],[[],["bool",0]],[[["hirdatabase",8]],["bool",0]],[[["hirdatabase",8]],["bool",0]],[[["hirdatabase",8]],["bool",0]],[[["hirdatabase",8]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["hirdatabase",8]],["bool",0]],[[["",0]],["bool",0]],[[["",0],["hirdatabase",8]],["bool",0]],[[["hirdatabase",8]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["hirdatabase",8]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["hirdatabase",8]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0],["hirdatabase",8]],["bool",0]],[[["",0],["identpat",3]],["bool",0]],[[["",0],["macrocall",3]],["bool",0]],[[["",0],["methodcallexpr",3]],["bool",0]],[[["",0],["refexpr",3]],["bool",0]],[[["hirdatabase",8]],["bool",0]],[[["",0]],["bool",0]],[[["",0],["hirdatabase",8],["module",3]],["bool",0]],[[["defdatabase",8],["moduleid",3]],["bool",0]],[[["hirdatabase",8]],["vec",3,[["associtem",4]]]],[[["hirdatabase",8]],["vec",3,[["associtem",4]]]],[[["hirdatabase",8]],["vec",3,[["associtem",4]]]],[[["",0],["hirdatabase",8],["crate",3]],["option",4]],[[["",0],["hirdatabase",8],["semanticsscope",3],["fxhashset",6],["option",4,[["module",3]]],["option",4,[["name",3]]]],["option",4]],[[["",0],["hirdatabase",8],["semanticsscope",3],["fxhashset",6],["option",4,[["module",3]]],["option",4,[["name",3]]]],["option",4]],[[["hirdatabase",8]],["structkind",4]],[[["hirdatabase",8]],["structkind",4]],[[["",0],["hirdatabase",8]],["macrokind",4]],[[["",0]],["callablekind",4]],null,null,[[["",0],["hirdatabase",8]],["crate",3]],[[["",0]],["crate",3]],[[["",0],["hirdatabase",8]],["crate",3]],[[],["crate",3]],[[["",0],["hirdatabase",8]],["crate",3]],[[["",0],["hirdatabase",8]],["crate",3]],[[["",0],["hirdatabase",8]],["crate",3]],[[["",0],["hirdatabase",8]],["crate",3]],[[["",0],["hirdatabase",8]],["crate",3]],[[["",0],["hirdatabase",8]],["crate",3]],[[["",0],["hirdatabase",8]],["crate",3]],[[["",0],["hirdatabase",8]],["crate",3]],[[["",0],["hirdatabase",8]],["crate",3]],[[["",0],["hirdatabase",8]],["crate",3]],[[["",0],["hirdatabase",8]],["crate",3]],[[["",0],["hirdatabase",8]],["option",4,[["crate",3]]]],[[["",0],["hirdatabase",8]],["crate",3]],[[["",0],["hirdatabase",8]],["crate",3]],[[["",0],["hirdatabase",8]],["option",4,[["crate",3]]]],null,[[["hirdatabase",8],["crate",3],["name",3]],["option",4,[["trait",3]]]],[[["",0]],["option",4,[["smolstr",3]]]],[[["hirdatabase",8]],["vec",3,[["macro",3]]]],[[["",0]],["usize",0]],null,null,[[],["option",4,[["macrofile",3]]]],[[],["infile",3]],[[],["typeorconstparam",3]],[[],["typeorconstparam",3]],[[["hirdatabase",8]],["option",4,[["vec",3,[["param",3]]]]]],[[],["name",3]],[[["",0]],["module",3]],[[["hirdatabase",8]],["option",4,[["module",3]]]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["module",3]],[[["hirdatabase",8]],["vec",3,[["module",3]]]],[[["",0]],["usize",0]],[[["hirdatabase",8]],["option",4,[["name",3]]]],[[["hirdatabase",8]],["option",4,[["name",3]]]],[[["",0],["hirdatabase",8]],["name",3]],[[["hirdatabase",8]],["name",3]],[[["hirdatabase",8]],["name",3]],[[["hirdatabase",8]],["name",3]],[[["hirdatabase",8]],["name",3]],[[["hirdatabase",8]],["name",3]],[[["",0],["hirdatabase",8]],["name",3]],[[["hirdatabase",8]],["option",4,[["name",3]]]],[[["hirdatabase",8]],["name",3]],[[["",0],["hirdatabase",8]],["option",4,[["name",3]]]],[[["hirdatabase",8]],["option",4,[["name",3]]]],[[["hirdatabase",8]],["name",3]],[[["hirdatabase",8]],["name",3]],[[["hirdatabase",8]],["name",3]],[[],["name",3]],[[["hirdatabase",8]],["name",3]],[[["hirdatabase",8]],["option",4,[["name",3]]]],[[["hirdatabase",8]],["name",3]],[[["",0],["hirdatabase",8]],["smolstr",3]],[[["",0],["hirdatabase",8]],["smolstr",3]],[[["hirdatabase",8]],["name",3]],[[["hirdatabase",8]],["name",3]],[[["hirdatabase",8]],["name",3]],[[["hirdatabase",8]],["name",3]],[[["hirdatabase",8]],["name",3]],[[["hirdatabase",8]],["name",3]],null,null,[[["",0],["cfgatom",4]],["bool",0]],[[["",0],["cfgexpr",4]],["bool",0]],[[["",0],["cfgoptions",3]],["bool",0]],[[["",0],["name",3]],["bool",0]],[[["",0],["modpath",3]],["bool",0]],[[["",0],["pathkind",4]],["bool",0]],[[["",0],["hirfileid",3]],["bool",0]],[[["",0],["macrofile",3]],["bool",0]],[[["",0],["infile",3]],["bool",0]],[[["",0],["pathresolution",4]],["bool",0]],[[["",0],["crate",3]],["bool",0]],[[["",0],["module",3]],["bool",0]],[[["",0],["moduledef",4]],["bool",0]],[[["",0],["field",3]],["bool",0]],[[["",0],["fieldsource",4]],["bool",0]],[[["",0],["struct",3]],["bool",0]],[[["",0],["union",3]],["bool",0]],[[["",0],["enum",3]],["bool",0]],[[["",0],["variant",3]],["bool",0]],[[["",0],["adt",4]],["bool",0]],[[["",0],["variantdef",4]],["bool",0]],[[["",0],["defwithbody",4]],["bool",0]],[[["",0],["function",3]],["bool",0]],[[["",0],["selfparam",3]],["bool",0]],[[["",0],["const",3]],["bool",0]],[[["",0],["static",3]],["bool",0]],[[["",0],["trait",3]],["bool",0]],[[["",0],["typealias",3]],["bool",0]],[[["",0],["builtintype",3]],["bool",0]],[[["",0],["macro",3]],["bool",0]],[[["",0],["iteminns",4]],["bool",0]],[[["",0],["associtem",4]],["bool",0]],[[["",0],["genericdef",4]],["bool",0]],[[["",0],["local",3]],["bool",0]],[[["",0],["builtinattr",3]],["bool",0]],[[["",0],["toolmodule",3]],["bool",0]],[[["",0],["label",3]],["bool",0]],[[["",0],["genericparam",4]],["bool",0]],[[["",0],["typeparam",3]],["bool",0]],[[["",0],["lifetimeparam",3]],["bool",0]],[[["",0],["constparam",3]],["bool",0]],[[["",0],["typeorconstparam",3]],["bool",0]],[[["",0],["impl",3]],["bool",0]],[[["",0],["type",3]],["bool",0]],[[["",0],["bindingmode",4]],["bool",0]],[[["",0],["scopedef",4]],["bool",0]],[[["",0],["documentation",3]],["bool",0]],[[["",0],["attrs",3]],["bool",0]],[[["",0],["attrswithowner",3]],["bool",0]],[[["",0],["attr",3]],["bool",0]],[[["",0],["typeref",4]],["bool",0]],[[["",0],["modulesource",4]],["bool",0]],[[["",0],["visibility",4]],["bool",0]],[[["",0]],["semantics",3]],[[["hirfileid",3]],["infile",3]],[[["string",3]],["documentation",3]],[[["lifetime",3]],["name",3]],[[["type",3]],["type",3]],[[["usize",0]],["name",3]],[[["",0],["hirdatabase",8],["typealias",3]],["option",4,[["type",3]]]],[[["hirdatabase",8]],["crateorigin",4]],[[],["type",3]],null,[[["",0],["astnode",8]],["option",4,[["astnode",8]]]],[[["astdatabase",8]],["option",4,[["infile",3]]]],[[["astdatabase",8]],["option",4]],[[["astdatabase",8]],["fileid",3]],[[["astdatabase",8]],["filerange",3]],[[["astdatabase",8]],["filerange",3]],[[["astdatabase",8]],["option",4,[["filerange",3]]]],[[["astdatabase",8]],["option",4,[["filerange",3]]]],[[["",0],["syntaxnode",6]],["filerange",3]],[[["",0],["syntaxnode",6]],["option",4,[["filerange",3]]]],[[["hirdatabase",8]],["vec",3,[["genericparam",4]]]],[[["",0],["hirdatabase",8]],["vec",3]],[[["hirdatabase",8]],["vec",3,[["param",3]]]],[[["hirdatabase",8]],["option",4,[["module",3]]]],[[["hirdatabase",8]],["defwithbody",4]],[[["hirdatabase",8]],["defwithbody",4]],[[["hirdatabase",8]],["genericdef",4]],[[["hirdatabase",8]],["genericdef",4]],[[["hirdatabase",8]],["genericdef",4]],[[["",0],["hirdatabase",8]],["variantdef",4]],[[["hirdatabase",8]],["enum",3]],[[["subtree",3]],["cfgexpr",4]],[[["",0],["fileid",3]],["sourcefile",3]],[[["",0],["hirfileid",3]],["option",4,[["syntaxnode",6]]]],[[["",0]],["option",4]],[[["",0],["name",3]],["option",4,[["procmacrodef",3]]]],[[["",0],["cfgatom",4]],["option",4,[["ordering",4]]]],[[["",0],["name",3]],["option",4,[["ordering",4]]]],[[["",0],["modpath",3]],["option",4,[["ordering",4]]]],[[["",0],["pathkind",4]],["option",4,[["ordering",4]]]],[[["",0]],["modpath",3]],[[["hirdatabase",8]],["vec",3,[["module",3]]]],[[["",0],["pat",4]],["smallvec",3]],[[["",0],["hirdatabase",8]],["option",4,[["pat",4]]]],[[["",0]],["option",4,[["name",3]]]],[[["",0],["hirdatabase",8]],["cfgoptions",3]],[[["",0],["fnmut",8]]],[[["",0],["name",3]]],[[["defdatabase",8],["query",3]]],[[["",0],["hirdatabase",8]],["option",4,[["selfparam",3]]]],[[["",0],["recordexpr",3]],["vec",3]],[[["",0],["recordpat",3]],["vec",3]],[[["type",3],["mutability",4]],["type",3]],[[["",0]],["option",4,[["type",3]]]],[[["hirdatabase",8]],["option",4,[["reprkind",4]]]],[[["hirdatabase",8]],["local",3]],[[["",0],["item",4]],["option",4,[["macro",3]]]],[[["",0],["identpat",3]],["option",4,[["moduledef",4]]]],[[["",0],["attr",3]],["option",4,[["vec",3,[["option",4,[["macro",3]]]]]]]],[[["hirdatabase",8],["str",0],["option",4,[["namespace",4]]]],["option",4,[["moduledef",4]]]],[[["hirdatabase",8],["str",0],["option",4,[["namespace",4]]]],["option",4,[["moduledef",4]]]],[[["hirdatabase",8],["str",0],["option",4,[["namespace",4]]]],["option",4,[["moduledef",4]]]],[[["hirdatabase",8],["str",0],["option",4,[["namespace",4]]]],["option",4,[["moduledef",4]]]],[[["hirdatabase",8],["str",0],["option",4,[["namespace",4]]]],["option",4,[["moduledef",4]]]],[[["hirdatabase",8],["str",0],["option",4,[["namespace",4]]]],["option",4,[["moduledef",4]]]],[[["hirdatabase",8],["str",0],["option",4,[["namespace",4]]]],["option",4,[["moduledef",4]]]],[[["hirdatabase",8],["str",0],["option",4,[["namespace",4]]]],["option",4,[["moduledef",4]]]],[[["hirdatabase",8],["str",0],["option",4,[["namespace",4]]]],["option",4,[["moduledef",4]]]],[[["hirdatabase",8],["str",0],["option",4,[["namespace",4]]]],["option",4,[["moduledef",4]]]],[[["hirdatabase",8],["str",0],["option",4,[["namespace",4]]]],["option",4,[["moduledef",4]]]],[[["hirdatabase",8],["str",0],["option",4,[["namespace",4]]]],["option",4,[["moduledef",4]]]],[[["hirdatabase",8],["str",0],["option",4,[["namespace",4]]]],["option",4,[["moduledef",4]]]],[[["hirdatabase",8],["str",0],["option",4,[["namespace",4]]]],["option",4,[["moduledef",4]]]],[[["hirdatabase",8],["str",0],["option",4,[["namespace",4]]]],["option",4,[["moduledef",4]]]],[[["hirdatabase",8],["str",0],["option",4,[["namespace",4]]]],["option",4,[["moduledef",4]]]],[[["hirdatabase",8],["str",0],["option",4,[["namespace",4]]]],["option",4,[["moduledef",4]]]],[[["hirdatabase",8],["str",0],["option",4,[["namespace",4]]]],["option",4,[["moduledef",4]]]],[[["hirdatabase",8],["str",0],["option",4,[["namespace",4]]]],["option",4,[["moduledef",4]]]],[[["hirdatabase",8],["str",0],["option",4,[["namespace",4]]]],["option",4,[["moduledef",4]]]],[[["",0],["externcrate",3]],["option",4,[["crate",3]]]],[[["",0],["fieldexpr",3]],["option",4,[["field",3]]]],[[["",0],["lifetime",3]],["option",4,[["label",3]]]],[[["",0],["lifetime",3]],["option",4,[["lifetimeparam",3]]]],[[["",0],["macrocall",3]],["option",4,[["macro",3]]]],[[["",0],["methodcallexpr",3]],["option",4,[["function",3]]]],[[["",0],["methodcallexpr",3]],["option",4,[["callable",3]]]],[[["",0],["path",3]],["option",4,[["pathresolution",4]]]],[[["",0],["recordexprfield",3]],["option",4]],[[["",0],["recordpatfield",3]],["option",4,[["field",3]]]],[[["",0],["type",4]],["option",4,[["type",3]]]],[[["",0],["recordexpr",3]],["option",4,[["variantdef",4]]]],[[["defdatabase",8]],["resolver",3]],[[["hirdatabase",8]],["type",3]],[[["",0]],["type",3]],[[["hirdatabase",8]],["vec",3,[["crate",3]]]],[[["hirdatabase",8]],["fileid",3]],[[["hirdatabase",8]],["module",3]],[[["",0],["syntaxnode",6]],["option",4,[["semanticsscope",3]]]],[[["hirdatabase",8],["option",4,[["module",3]]]],["vec",3]],[[["",0],["syntaxnode",6],["textsize",3]],["option",4,[["semanticsscope",3]]]],[[["",0],["trait",3]],["semanticsscope",3]],[[["",0]]],[[["hirdatabase",8]],["option",4,[["selfparam",3]]]],[[["hirdatabase",8]],["type",3]],[[["",0]],["option",4,[["ident",3]]]],[[["hirdatabase",8]],["option",4,[["infile",3]]]],[[["",0],["hassource",8]],["option",4,[["infile",3]]]],[[["hirdatabase",8]],["option",4,[["infile",3]]]],[[["hirdatabase",8]],["option",4,[["infile",3]]]],[[["hirdatabase",8]],["option",4,[["infile",3]]]],[[["hirdatabase",8]],["option",4,[["infile",3]]]],[[["hirdatabase",8]],["option",4,[["infile",3,[["variant",3]]]]]],[[["hirdatabase",8]],["option",4,[["infile",3]]]],[[["hirdatabase",8]],["option",4,[["infile",3]]]],[[["",0],["hirdatabase",8]],["option",4,[["infile",3,[["param",3]]]]]],[[["",0],["hirdatabase",8]],["option",4,[["infile",3,[["selfparam",3]]]]]],[[["hirdatabase",8]],["option",4,[["infile",3]]]],[[["hirdatabase",8]],["option",4,[["infile",3]]]],[[["hirdatabase",8]],["option",4,[["infile",3]]]],[[["hirdatabase",8]],["option",4,[["infile",3]]]],[[["hirdatabase",8]],["option",4,[["infile",3]]]],[[["hirdatabase",8]],["infile",3,[["either",4,[["identpat",3],["selfparam",3]]]]]],[[["hirdatabase",8]],["infile",3,[["label",3]]]],[[["hirdatabase",8]],["option",4,[["infile",3]]]],[[["hirdatabase",8]],["option",4,[["infile",3]]]],[[["hirdatabase",8]],["option",4,[["infile",3]]]],[[["",0],["defdatabase",8]],["attrsourcemap",3]],[[["",0],["macrocall",3],["tokentree",3],["syntaxtoken",6]],["option",4]],[[["",0],["item",4],["item",4],["syntaxtoken",6]],["option",4]],[[["",0],["attr",3],["attr",3],["syntaxtoken",6]],["option",4]],[[["",0],["path",3]],["option",4,[["pathresolution",4]]]],[[["hirdatabase",8]],["either",4,[["constparam",3],["typeparam",3]]]],[[],["internstorage",3]],[[],["internstorage",3]],[[],["builtintype",3]],[[["",0]],["option",4,[["smolstr",3]]]],[[["",0]],["type",3]],null,null,[[["",0]],["infile",3,[["syntaxnode",3]]]],[[["",0],["hirdatabase",8]],["option",4,[["attributetemplate",3]]]],[[["",0],["",0]],["option",4]],[[["",0],["fileid",3]],["option",4,[["module",3]]]],[[["",0],["fileid",3]]],[[["",0],["astdatabasesmolstr",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0],["syntaxtoken",6]]],[[["",0]],["option",4,[["subtree",3]]]],[[["hirdatabase",8]],["option",4,[["trait",3]]]],[[["hirdatabase",8]],["vec",3,[["trait",3]]]],[[["hirdatabase",8]]],[[],["option",4,[["infile",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0],["hirdatabase",8]],["vec",3,[["type",3]]]],[[["",0],["hirdatabase",8]],["type",3]],[[["hirdatabase",8]],["type",3]],[[["hirdatabase",8]],["type",3]],[[["hirdatabase",8]],["type",3]],[[["hirdatabase",8]],["type",3]],[[["",0]],["type",3]],[[["",0],["hirdatabase",8]],["type",3]],[[["hirdatabase",8]],["type",3]],[[["hirdatabase",8]],["type",3]],[[["hirdatabase",8]],["type",3]],[[["hirdatabase",8]],["type",3]],[[["hirdatabase",8]],["type",3]],[[["hirdatabase",8]],["type",3]],[[["hirdatabase",8]],["type",3]],[[["hirdatabase",8]],["type",3]],[[["hirdatabase",8]],["type",3]],[[["",0]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["expr",4]],["option",4,[["typeinfo",3]]]],[[["",0],["pat",4]],["option",4,[["typeinfo",3]]]],[[["",0],["selfparam",3]],["option",4,[["type",3]]]],[[["",0],["hirdatabase",8],["bool",0]],["usize",0]],[[["hirdatabase",8]],["vec",3,[["typeorconstparam",3]]]],[[["hirdatabase",8]],["option",4,[["typeref",4]]]],[[["astdatabase",8]],["option",4,[["infile",3,[["syntaxtoken",3,[["rustlanguage",4]]]]]]]],[[["hirdatabase",8]],["option",4,[["expr",4]]]],[[["hirdatabase",8]],["option",4,[["expr",4]]]],null,[[["hirdatabase",8]],["vec",3,[["variant",3]]]],[[["hirdatabase",8]],["option",4,[["string",3]]]],[[["",0],["hirdatabase",8]],["visibility",4]],[[["",0],["hirdatabase",8]],["visibility",4]],[[["",0],["hirdatabase",8]],["visibility",4]],[[["",0],["hirdatabase",8]],["visibility",4]],[[["",0],["hirdatabase",8]],["visibility",4]],[[["",0],["hirdatabase",8]],["visibility",4]],[[["",0],["hirdatabase",8]],["visibility",4]],[[["",0],["hirdatabase",8]],["visibility",4]],[[["",0],["hirdatabase",8]],["visibility",4]],[[["",0],["hirdatabase",8]],["visibility",4]],[[["",0],["hirdatabase",8]],["visibility",4]],[[["",0],["hirdatabase",8]],["visibility",4]],[[["",0],["hirdatabase",8]],["visibility",4]],[[["",0],["hirdatabase",8]],["visibility",4]],[[["",0],["hirdatabase",8]],["visibility",4]],[[["",0],["hirdatabase",8]],["visibility",4]],[[["",0]],["visibletraits",3]],[[["",0],["hirdatabase",8]]],[[["",0]]],[[["",0]],["infile",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["adtid",3,[["interner",3]]]],["variances",3,[["interner",3]]]],[[["",0],["adtid",3,[["interner",3]]]],["variances",3,[["interner",3]]]],null,[[["",0]],["internid",3]],[[["",0]],["internid",3]],[[["",0]],["internid",3]],[[["",0]],["internid",3]],[[["",0]],["internid",3]],[[["",0]],["internid",3]],[[["",0],["assoctypeid",3,[["interner",3]]]],["arc",3,[["associatedtydatum",3,[["interner",3]]]]]],null,[[["",0],["crateid",3],["associatedtyvalueid",3,[["interner",3]]]],["arc",3,[["associatedtyvalue",3,[["interner",3]]]]]],null,[[["",0],["hirfileid",3]],["arc",3,[["astidmap",3]]]],[[["",0],["attrdefid",4]],["attrswithowner",3]],null,[[["",0],["blockid",3]],["option",4,[["arc",3,[["defmap",3]]]]]],null,[[["",0],["defwithbodyid",4]],["arc",3,[["body",3]]]],null,[[["",0],["defwithbodyid",4]]],nullcallabledefid",4]],["binders",3,[["callablesig",3]]]],null,[[["",0]],["internedtypeorconstparamid",3]],[[["",0]],["internedlifetimeparamid",3]],[[["",0]],["internedconstparamid",3]],[[["",0]],["internedopaquetyid",3]],[[["",0]],["internedclosureid",3]],[[["",0]],["internedcallabledefid",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["internedcallabledefid",3]],["ordering",4]],[[["",0],["constid",3]],["arc",3,[["constdata",3]]]],null,[[["",0],["constid",3]],["result",4,[["computedexpr",4],["constevalerror",4]]]],null,[[["",0],["constparamid",3]],["ty",3,[["interner",3]]]],null,[[["",0],["constid",3]],["visibility",4]],null,[[["",0],["crateid",3]],["arc",3,[["defmap",3]]]],[[["",0],["crateid",3]],["arc",3,[["defmap",3]]]],null,[[["",0],["crateid",3]],["arc",3,[["langitems",3]]]],null,[[["",0],["crateid",3]],["cratelimits",3]],[[["",0],["crateid",3]],["bool",0]],null,[[],["astidmapquery",3]],[[],["parsemacroexpansionquery",3]],[[],["internmacrocallquery",3]],[[],["macroargtextquery",3]],[[],["macrodefquery",3]],[[],["macroexpandquery",3]],[[],["hygieneframequery",3]],[[],["internfunctionquery",3]],[[],["internfunctionlookupquery",3]],[[],["internstructquery",3]],[[],["internstructlookupquery",3]],[[],["internunionquery",3]],[[],["internunionlookupquery",3]],[[],["internenumquery",3]],[[],["internenumlookupquery",3]],[[],["internconstquery",3]],[[],["internconstlookupquery",3]],[[],["internstaticquery",3]],[[],["internstaticlookupquery",3]],[[],["interntraitquery",3]],[[],["interntraitlookupquery",3]],[[],["interntypealiasquery",3]],[[],["interntypealiaslookupquery",3]],[[],["internimplquery",3]],[[],["internimpllookupquery",3]],[[],["internexternblockquery",3]],[[],["internexternblocklookupquery",3]],[[],["internblockquery",3]],[[],["internblocklookupquery",3]],[[],["internmacro2query",3]],[[],["internmacro2lookupquery",3]],[[],["internprocmacroquery",3]],[[],["internprocmacrolookupquery",3]],[[],["internmacrorulesquery",3]],[[],["internmacroruleslookupquery",3]],[[],["enableprocattrmacrosquery",3]],[[],["fileitemtreequery",3]],[[],["cratedefmapqueryquery",3]],[[],["blockdefmapquery",3]],[[],["structdataquery",3]],[[],["uniondataquery",3]],[[],["enumdataquery",3]],[[],["impldataquery",3]],[[],["traitdataquery",3]],[[],["typealiasdataquery",3]],[[],["functiondataquery",3]],[[],["constdataquery",3]],[[],["staticdataquery",3]],[[],["macro2dataquery",3]],[[],["macrorulesdataquery",3]],[[],["procmacrodataquery",3]],[[],["bodywithsourcemapquery",3]],[[],["bodyquery",3]],[[],["exprscopesquery",3]],[[],["genericparamsquery",3]],[[],["variantsattrsquery",3]],[[],["fieldsattrsquery",3]],[[],["variantsattrssourcemapquery",3]],[[],["fieldsattrssourcemapquery",3]],[[],["attrsquery",3]],[[],["cratelangitemsquery",3]],[[],["langitemquery",3]],[[],["importmapquery",3]],[[],["fieldvisibilitiesquery",3]],[[],["functionvisibilityquery",3]],[[],["constvisibilityquery",3]],[[],["cratesupportsnostdquery",3]],[[],["inferqueryquery",3]],[[],["tyquery",3]],[[],["valuetyquery",3]],[[],["implselftyquery",3]],[[],["constparamtyquery",3]],[[],["constevalquery",3]],[[],["impltraitquery",3]],[[],["fieldtypesquery",3]],[[],["callableitemsignaturequery",3]],[[],["returntypeimpltraitsquery",3]],[[],["genericpredicatesforparamquery",3]],[[],["genericpredicatesquery",3]],[[],["traitenvironmentquery",3]],[[],["genericdefaultsquery",3]],[[],["inherentimplsincratequery",3]],[[],["inherentimplsinblockquery",3]],[[],["inherentimplcratesquery",3]],[[],["traitimplsincratequery",3]],[[],["traitimplsinblockquery",3]],[[],["traitimplsindepsquery",3]],[[],["interncallabledefquery",3]],[[],["interncallabledeflookupquery",3]],[[],["interntypeorconstparamidquery",3]],[[],["interntypeorconstparamidlookupquery",3]],[[],["internlifetimeparamidquery",3]],[[],["internlifetimeparamidlookupquery",3]],[[],["internimpltraitidquery",3]],[[],["internimpltraitidlookupquery",3]],[[],["internclosurequery",3]],[[],["internclosurelookupquery",3]],[[],["associatedtydataquery",3]],[[],["traitdatumquery",3]],[[],["structdatumquery",3]],[[],["impldatumquery",3]],[[],["fndefdatumquery",3]],[[],["fndefvariancequery",3]],[[],["adtvariancequery",3]],[[],["associatedtyvaluequery",3]],[[],["traitsolvequeryquery",3]],[[],["programclausesforchalkenvquery",3]],[[["",0]],["bool",0]],null,[[["",0],["enumid",3]],["arc",3,[["enumdata",3]]]],null,[[["",0],["internedtypeorconstparamid",3]],["bool",0]],[[["",0],["internedlifetimeparamid",3]],["bool",0]],[[["",0],["internedconstparamid",3]],["bool",0]],[[["",0],["internedopaquetyid",3]],["bool",0]],[[["",0],["internedclosureid",3]],["bool",0]],[[["",0],["internedcallabledefid",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["macrocallid",3]],["valueresult",3,[["subtree",3],["expanderror",4]]]],[[["",0],["defwithbodyid",4]],["arc",3,[["exprscopes",3]]]],null,[[["",0],["variantid",4]],["arc",3,[["arenamap",3,[["idx",3,[["fielddata",3]]],["binders",3,[["ty",3,[["interner",3]]]]]]]]]],null,[[["",0],["variantid",4]],["arc",3,[["arenamap",3,[["idx",3,[["fielddata",3]]],["visibility",4]]]]]],null,[[["",0],["variantid",4]],["arc",3,[["arenamap",3,[["idx",3,[["fielddata",3]]],["attrs",3]]]]]],null,[[["",0],["variantid",4]],["arc",3,[["arenamap",3,[["idx",3,[["fielddata",3]]],["either",4,[["astptr",3,[["tuplefield",3]]],["astptr",3,[["recordfield",3]]]]]]]]]],null,[[["",0],["hirfileid",3]],["arc",3,[["itemtree",3]]]],null,[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["interndatabase",8],["databasekeyindex",3],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["defdatabase",8],["databasekeyindex",3],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["hirdatabase",8],["databasekeyindex",3],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["crateid",3],["fndefid",3,[["interner",3]]]],["arc",3,[["fndefdatum",3,[["interner",3]]]]]],null,[[["",0],["fndefid",3,[["interner",3]]]],["variances",3,[["interner",3]]]],[[["",0],["fndefid",3,[["interner",3]]]],["variances",3,[["interner",3]]]],null,[[["",0],["runtime",3],["fnmut",8]]],[[["",0],["runtime",3],["fnmut",8]]],[[["",0],["runtime",3],["fnmut",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["opaquetyid",3,[["interner",3]]]],["internedopaquetyid",3]],[[["closureid",3,[["interner",3]]]],["internedclosureid",3]],[[]],[[]],[[["fndefid",3,[["interner",3]]]],["internedcallabledefid",3]],[[["internid",3]],["internedtypeorconstparamid",3]],[[["internid",3]],["internedlifetimeparamid",3]],[[["internid",3]],["internedconstparamid",3]],[[["internid",3]],["internedopaquetyid",3]],[[["internid",3]],["internedclosureid",3]],[[["internid",3]],["internedcallabledefid",3]],[[["",0],["functionid",3]],["arc",3,[["functiondata",3]]]],null,[[["",0],["functionid",3]],["visibility",4]],null,[[["",0],["genericdefid",4]],["arc",3]],null,[[["",0],["genericdefid",4]],["interned",3,[["genericparams",3]]]],null,[[["",0],["genericdefid",4]],["arc",3]],null,[[["",0],["genericdefid",4],["typeorconstparamid",3],["option",4,[["name",3]]]],["arc",3]],null,[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["hirfileid",3]],["arc",3,[["hygieneframe",3]]]],[[["",0],["implid",3]],["arc",3,[["impldata",3]]]],null,[[["",0],["crateid",3],["implid",3,[["interner",3]]]],["arc",3,[["impldatum",3,[["interner",3]]]]]],null,[[["",0],["implid",3]],["binders",3,[["ty",3,[["interner",3]]]]]],null,[[["",0],["implid",3]],["option",4,[["binders",3,[["traitref",3,[["interner",3]]]]]]]],null,[[["",0],["crateid",3]],["arc",3,[["importmap",3]]]],null,[[["astdatabase",8]],["querytable",3,[["astidmapquery",3]]]],[[["astdatabase",8]],["querytable",3,[["parsemacroexpansionquery",3]]]],[[["astdatabase",8]],["querytable",3,[["internmacrocallquery",3]]]],[[["astdatabase",8]],["querytable",3,[["macroargtextquery",3]]]],[[["astdatabase",8]],["querytable",3,[["macrodefquery",3]]]],[[["astdatabase",8]],["querytable",3,[["macroexpandquery",3]]]],[[["astdatabase",8]],["querytable",3,[["hygieneframequery",3]]]],[[["interndatabase",8]],["querytable",3,[["internfunctionquery",3]]]],[[["interndatabase",8]],["querytable",3,[["internfunctionlookupquery",3]]]],[[["interndatabase",8]],["querytable",3,[["internstructquery",3]]]],[[["interndatabase",8]],["querytable",3,[["internstructlookupquery",3]]]],[[["interndatabase",8]],["querytable",3,[["internunionquery",3]]]],[[["interndatabase",8]],["querytable",3,[["internunionlookupquery",3]]]],[[["interndatabase",8]],["querytable",3,[["internenumquery",3]]]],[[["interndatabase",8]],["querytable",3,[["internenumlookupquery",3]]]],[[["interndatabase",8]],["querytable",3,[["internconstquery",3]]]],[[["interndatabase",8]],["querytable",3,[["internconstlookupquery",3]]]],[[["interndatabase",8]],["querytable",3,[["internstaticquery",3]]]],[[["interndatabase",8]],["querytable",3,[["internstaticlookupquery",3]]]],[[["interndatabase",8]],["querytable",3,[["interntraitquery",3]]]],[[["interndatabase",8]],["querytable",3,[["interntraitlookupquery",3]]]],[[["interndatabase",8]],["querytable",3,[["interntypealiasquery",3]]]],[[["interndatabase",8]],["querytable",3,[["interntypealiaslookupquery",3]]]],[[["interndatabase",8]],["querytable",3,[["internimplquery",3]]]],[[["interndatabase",8]],["querytable",3,[["internimpllookupquery",3]]]],[[["interndatabase",8]],["querytable",3,[["internexternblockquery",3]]]],[[["interndatabase",8]],["querytable",3,[["internexternblocklookupquery",3]]]],[[["interndatabase",8]],["querytable",3,[["internblockquery",3]]]],[[["interndatabase",8]],["querytable",3,[["internblocklookupquery",3]]]],[[["interndatabase",8]],["querytable",3,[["internmacro2query",3]]]],[[["interndatabase",8]],["querytable",3,[["internmacro2lookupquery",3]]]],[[["interndatabase",8]],["querytable",3,[["internprocmacroquery",3]]]],[[["interndatabase",8]],["querytable",3,[["internprocmacrolookupquery",3]]]],[[["interndatabase",8]],["querytable",3,[["internmacrorulesquery",3]]]],[[["interndatabase",8]],["querytable",3,[["internmacroruleslookupquery",3]]]],[[["defdatabase",8]],["querytable",3,[["enableprocattrmacrosquery",3]]]],[[["defdatabase",8]],["querytable",3,[["fileitemtreequery",3]]]],[[["defdatabase",8]],["querytable",3,[["cratedefmapqueryquery",3]]]],[[["defdatabase",8]],["querytable",3,[["blockdefmapquery",3]]]],[[["defdatabase",8]],["querytable",3,[["structdataquery",3]]]],[[["defdatabase",8]],["querytable",3,[["uniondataquery",3]]]],[[["defdatabase",8]],["querytable",3,[["enumdataquery",3]]]],[[["defdatabase",8]],["querytable",3,[["impldataquery",3]]]],[[["defdatabase",8]],["querytable",3,[["traitdataquery",3]]]],[[["defdatabase",8]],["querytable",3,[["typealiasdataquery",3]]]],[[["defdatabase",8]],["querytable",3,[["functiondataquery",3]]]],[[["defdatabase",8]],["querytable",3,[["constdataquery",3]]]],[[["defdatabase",8]],["querytable",3,[["staticdataquery",3]]]],[[["defdatabase",8]],["querytable",3,[["macro2dataquery",3]]]],[[["defdatabase",8]],["querytable",3,[["macrorulesdataquery",3]]]],[[["defdatabase",8]],["querytable",3,[["procmacrodataquery",3]]]],[[["defdatabase",8]],["querytable",3,[["bodywithsourcemapquery",3]]]],[[["defdatabase",8]],["querytable",3,[["bodyquery",3]]]],[[["defdatabase",8]],["querytable",3,[["exprscopesquery",3]]]],[[["defdatabase",8]],["querytable",3,[["genericparamsquery",3]]]],[[["defdatabase",8]],["querytable",3,[["variantsattrsquery",3]]]],[[["defdatabase",8]],["querytable",3,[["fieldsattrsquery",3]]]],[[["defdatabase",8]],["querytable",3,[["variantsattrssourcemapquery",3]]]],[[["defdatabase",8]],["querytable",3,[["fieldsattrssourcemapquery",3]]]],[[["defdatabase",8]],["querytable",3,[["attrsquery",3]]]],[[["defdatabase",8]],["querytable",3,[["cratelangitemsquery",3]]]],[[["defdatabase",8]],["querytable",3,[["langitemquery",3]]]],[[["defdatabase",8]],["querytable",3,[["importmapquery",3]]]],[[["defdatabase",8]],["querytable",3,[["fieldvisibilitiesquery",3]]]],[[["defdatabase",8]],["querytable",3,[["functionvisibilityquery",3]]]],[[["defdatabase",8]],["querytable",3,[["constvisibilityquery",3]]]],[[["defdatabase",8]],["querytable",3,[["cratesupportsnostdquery",3]]]],[[["hirdatabase",8]],["querytable",3,[["inferqueryquery",3]]]],[[["hirdatabase",8]],["querytable",3,[["tyquery",3]]]],[[["hirdatabase",8]],["querytable",3,[["valuetyquery",3]]]],[[["hirdatabase",8]],["querytable",3,[["implselftyquery",3]]]],[[["hirdatabase",8]],["querytable",3,[["constparamtyquery",3]]]],[[["hirdatabase",8]],["querytable",3,[["constevalquery",3]]]],[[["hirdatabase",8]],["querytable",3,[["impltraitquery",3]]]],[[["hirdatabase",8]],["querytable",3,[["fieldtypesquery",3]]]],[[["hirdatabase",8]],["querytable",3,[["callableitemsignaturequery",3]]]],[[["hirdatabase",8]],["querytable",3,[["returntypeimpltraitsquery",3]]]],[[["hirdatabase",8]],["querytable",3,[["genericpredicatesforparamquery",3]]]],[[["hirdatabase",8]],["querytable",3,[["genericpredicatesquery",3]]]],[[["hirdatabase",8]],["querytable",3,[["traitenvironmentquery",3]]]],[[["hirdatabase",8]],["querytable",3,[["genericdefaultsquery",3]]]],[[["hirdatabase",8]],["querytable",3,[["inherentimplsincratequery",3]]]],[[["hirdatabase",8]],["querytable",3,[["inherentimplsinblockquery",3]]]],[[["hirdatabase",8]],["querytable",3,[["inherentimplcratesquery",3]]]],[[["hirdatabase",8]],["querytable",3,[["traitimplsincratequery",3]]]],[[["hirdatabase",8]],["querytable",3,[["traitimplsinblockquery",3]]]],[[["hirdatabase",8]],["querytable",3,[["traitimplsindepsquery",3]]]],[[["hirdatabase",8]],["querytable",3,[["interncallabledefquery",3]]]],[[["hirdatabase",8]],["querytable",3,[["interncallabledeflookupquery",3]]]],[[["hirdatabase",8]],["querytable",3,[["interntypeorconstparamidquery",3]]]],[[["hirdatabase",8]],["querytable",3,[["interntypeorconstparamidlookupquery",3]]]],[[["hirdatabase",8]],["querytable",3,[["internlifetimeparamidquery",3]]]],[[["hirdatabase",8]],["querytable",3,[["internlifetimeparamidlookupquery",3]]]],[[["hirdatabase",8]],["querytable",3,[["internimpltraitidquery",3]]]],[[["hirdatabase",8]],["querytable",3,[["internimpltraitidlookupquery",3]]]],[[["hirdatabase",8]],["querytable",3,[["internclosurequery",3]]]],[[["hirdatabase",8]],["querytable",3,[["internclosurelookupquery",3]]]],[[["hirdatabase",8]],["querytable",3,[["associatedtydataquery",3]]]],[[["hirdatabase",8]],["querytable",3,[["traitdatumquery",3]]]],[[["hirdatabase",8]],["querytable",3,[["structdatumquery",3]]]],[[["hirdatabase",8]],["querytable",3,[["impldatumquery",3]]]],[[["hirdatabase",8]],["querytable",3,[["fndefdatumquery",3]]]],[[["hirdatabase",8]],["querytable",3,[["fndefvariancequery",3]]]],[[["hirdatabase",8]],["querytable",3,[["adtvariancequery",3]]]],[[["hirdatabase",8]],["querytable",3,[["associatedtyvaluequery",3]]]],[[["hirdatabase",8]],["querytable",3,[["traitsolvequeryquery",3]]]],[[["hirdatabase",8]],["querytable",3,[["programclausesforchalkenvquery",3]]]],[[["astdatabase",8]],["querytablemut",3,[["astidmapquery",3]]]],[[["astdatabase",8]],["querytablemut",3,[["parsemacroexpansionquery",3]]]],[[["astdatabase",8]],["querytablemut",3,[["internmacrocallquery",3]]]],[[["astdatabase",8]],["querytablemut",3,[["macroargtextquery",3]]]],[[["astdatabase",8]],["querytablemut",3,[["macrodefquery",3]]]],[[["astdatabase",8]],["querytablemut",3,[["macroexpandquery",3]]]],[[["astdatabase",8]],["querytablemut",3,[["hygieneframequery",3]]]],[[["interndatabase",8]],["querytablemut",3,[["internfunctionquery",3]]]],[[["interndatabase",8]],["querytablemut",3,[["internfunctionlookupquery",3]]]],[[["interndatabase",8]],["querytablemut",3,[["internstructquery",3]]]],[[["interndatabase",8]],["querytablemut",3,[["internstructlookupquery",3]]]],[[["interndatabase",8]],["querytablemut",3,[["internunionquery",3]]]],[[["interndatabase",8]],["querytablemut",3,[["internunionlookupquery",3]]]],[[["interndatabase",8]],["querytablemut",3,[["internenumquery",3]]]],[[["interndatabase",8]],["querytablemut",3,[["internenumlookupquery",3]]]],[[["interndatabase",8]],["querytablemut",3,[["internconstquery",3]]]],[[["interndatabase",8]],["querytablemut",3,[["internconstlookupquery",3]]]],[[["interndatabase",8]],["querytablemut",3,[["internstaticquery",3]]]],[[["interndatabase",8]],["querytablemut",3,[["internstaticlookupquery",3]]]],[[["interndatabase",8]],["querytablemut",3,[["interntraitquery",3]]]],[[["interndatabase",8]],["querytablemut",3,[["interntraitlookupquery",3]]]],[[["interndatabase",8]],["querytablemut",3,[["interntypealiasquery",3]]]],[[["interndatabase",8]],["querytablemut",3,[["interntypealiaslookupquery",3]]]],[[["interndatabase",8]],["querytablemut",3,[["internimplquery",3]]]],[[["interndatabase",8]],["querytablemut",3,[["internimpllookupquery",3]]]],[[["interndatabase",8]],["querytablemut",3,[["internexternblockquery",3]]]],[[["interndatabase",8]],["querytablemut",3,[["internexternblocklookupquery",3]]]],[[["interndatabase",8]],["querytablemut",3,[["internblockquery",3]]]],[[["interndatabase",8]],["querytablemut",3,[["internblocklookupquery",3]]]],[[["interndatabase",8]],["querytablemut",3,[["internmacro2query",3]]]],[[["interndatabase",8]],["querytablemut",3,[["internmacro2lookupquery",3]]]],[[["interndatabase",8]],["querytablemut",3,[["internprocmacroquery",3]]]],[[["interndatabase",8]],["querytablemut",3,[["internprocmacrolookupquery",3]]]],[[["interndatabase",8]],["querytablemut",3,[["internmacrorulesquery",3]]]],[[["interndatabase",8]],["querytablemut",3,[["internmacroruleslookupquery",3]]]],[[["defdatabase",8]],["querytablemut",3,[["enableprocattrmacrosquery",3]]]],[[["defdatabase",8]],["querytablemut",3,[["fileitemtreequery",3]]]],[[["defdatabase",8]],["querytablemut",3,[["cratedefmapqueryquery",3]]]],[[["defdatabase",8]],["querytablemut",3,[["blockdefmapquery",3]]]],[[["defdatabase",8]],["querytablemut",3,[["structdataquery",3]]]],[[["defdatabase",8]],["querytablemut",3,[["uniondataquery",3]]]],[[["defdatabase",8]],["querytablemut",3,[["enumdataquery",3]]]],[[["defdatabase",8]],["querytablemut",3,[["impldataquery",3]]]],[[["defdatabase",8]],["querytablemut",3,[["traitdataquery",3]]]],[[["defdatabase",8]],["querytablemut",3,[["typealiasdataquery",3]]]],[[["defdatabase",8]],["querytablemut",3,[["functiondataquery",3]]]],[[["defdatabase",8]],["querytablemut",3,[["constdataquery",3]]]],[[["defdatabase",8]],["querytablemut",3,[["staticdataquery",3]]]],[[["defdatabase",8]],["querytablemut",3,[["macro2dataquery",3]]]],[[["defdatabase",8]],["querytablemut",3,[["macrorulesdataquery",3]]]],[[["defdatabase",8]],["querytablemut",3,[["procmacrodataquery",3]]]],[[["defdatabase",8]],["querytablemut",3,[["bodywithsourcemapquery",3]]]],[[["defdatabase",8]],["querytablemut",3,[["bodyquery",3]]]],[[["defdatabase",8]],["querytablemut",3,[["exprscopesquery",3]]]],[[["defdatabase",8]],["querytablemut",3,[["genericparamsquery",3]]]],[[["defdatabase",8]],["querytablemut",3,[["variantsattrsquery",3]]]],[[["defdatabase",8]],["querytablemut",3,[["fieldsattrsquery",3]]]],[[["defdatabase",8]],["querytablemut",3,[["variantsattrssourcemapquery",3]]]],[[["defdatabase",8]],["querytablemut",3,[["fieldsattrssourcemapquery",3]]]],[[["defdatabase",8]],["querytablemut",3,[["attrsquery",3]]]],[[["defdatabase",8]],["querytablemut",3,[["cratelangitemsquery",3]]]],[[["defdatabase",8]],["querytablemut",3,[["langitemquery",3]]]],[[["defdatabase",8]],["querytablemut",3,[["importmapquery",3]]]],[[["defdatabase",8]],["querytablemut",3,[["fieldvisibilitiesquery",3]]]],[[["defdatabase",8]],["querytablemut",3,[["functionvisibilityquery",3]]]],[[["defdatabase",8]],["querytablemut",3,[["constvisibilityquery",3]]]],[[["defdatabase",8]],["querytablemut",3,[["cratesupportsnostdquery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["inferqueryquery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["tyquery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["valuetyquery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["implselftyquery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["constparamtyquery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["constevalquery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["impltraitquery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["fieldtypesquery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["callableitemsignaturequery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["returntypeimpltraitsquery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["genericpredicatesforparamquery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["genericpredicatesquery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["traitenvironmentquery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["genericdefaultsquery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["inherentimplsincratequery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["inherentimplsinblockquery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["inherentimplcratesquery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["traitimplsincratequery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["traitimplsinblockquery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["traitimplsindepsquery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["interncallabledefquery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["interncallabledeflookupquery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["interntypeorconstparamidquery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["interntypeorconstparamidlookupquery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["internlifetimeparamidquery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["internlifetimeparamidlookupquery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["internimpltraitidquery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["internimpltraitidlookupquery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["internclosurequery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["internclosurelookupquery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["associatedtydataquery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["traitdatumquery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["structdatumquery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["impldatumquery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["fndefdatumquery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["fndefvariancequery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["adtvariancequery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["associatedtyvaluequery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["traitsolvequeryquery",3]]]],[[["hirdatabase",8]],["querytablemut",3,[["programclausesforchalkenvquery",3]]]],[[["",0],["defwithbodyid",4]],["arc",3,[["inferenceresult",3]]]],[[["",0],["defwithbodyid",4]],["arc",3,[["inferenceresult",3]]]],null,[[["",0],["crateid",3],["tyfingerprint",4]],["arrayvec",3,[["crateid",3]]]],null,[[["",0],["blockid",3]],["option",4,[["arc",3,[["inherentimpls",3]]]]]],null,[[["",0],["crateid",3]],["arc",3,[["inherentimpls",3]]]],null,[[["",0],["blockloc",3]],["blockid",3]],null,[[["",0],["callabledefid",4]],["internedcallabledefid",3]],null,[[["",0]],["internedclosureid",3]],null,[[["",0],["associtemloc",3,[["const",3]]]],["constid",3]],null,[[["",0],["itemloc",3,[["enum",3]]]],["enumid",3]],null,[[["",0],["itemloc",3,[["externblock",3]]]],["externblockid",3]],null,[[["",0],["associtemloc",3,[["function",3]]]],["functionid",3]],null,[[["",0],["itemloc",3,[["impl",3]]]],["implid",3]],null,[[["",0],["impltraitid",4]],["internedopaquetyid",3]],null,[[["",0],["lifetimeparamid",3]],["internedlifetimeparamid",3]],null,[[["",0],["macro2loc",3]],["macro2id",3]],null,[[["",0],["macrocallloc",3]],["macrocallid",3]],[[["",0],["macrorulesloc",3]],["macrorulesid",3]],null,[[["",0],["procmacroloc",3]],["procmacroid",3]],null,[[["",0],["associtemloc",3,[["static",3]]]],["staticid",3]],null,[[["",0],["itemloc",3,[["struct",3]]]],["structid",3]],null,[[["",0],["itemloc",3,[["trait",3]]]],["traitid",3]],null,[[["",0],["associtemloc",3,[["typealias",3]]]],["typealiasid",3]],null,[[["",0],["typeorconstparamid",3]],["internedtypeorconstparamid",3]],null,[[["",0],["itemloc",3,[["union",3]]]],["unionid",3]],nullcrateid",3],["smolstr",3]],["option",4,[["langitemtarget",4]]]],null,[[["",0],["blockid",3]],["blockloc",3]],null,[[["",0],["internedcallabledefid",3]],["callabledefid",4]],null,[[["",0],["internedclosureid",3]]],null,[[["",0],["constid",3]],["associtemloc",3,[["const",3]]]],null,[[["",0],["enumid",3]],["itemloc",3,[["enum",3]]]],null,[[["",0],["externblockid",3]],["itemloc",3,[["externblock",3]]]],null,[[["",0],["functionid",3]],["associtemloc",3,[["function",3]]]],null,[[["",0],["implid",3]],["itemloc",3,[["impl",3]]]],null,[[["",0],["internedopaquetyid",3]],["impltraitid",4]],null,[[["",0],["internedlifetimeparamid",3]],["lifetimeparamid",3]],null,[[["",0],["macro2id",3]],["macro2loc",3]],null,[[["",0],["macrocallid",3]],["macrocallloc",3]],[[["",0],["macrorulesid",3]],["macrorulesloc",3]],null,[[["",0],["procmacroid",3]],["procmacroloc",3]],null,[[["",0],["staticid",3]],["associtemloc",3,[["static",3]]]],null,[[["",0],["structid",3]],["itemloc",3,[["struct",3]]]],null,[[["",0],["traitid",3]],["itemloc",3,[["trait",3]]]],null,[[["",0],["typealiasid",3]],["associtemloc",3,[["typealias",3]]]],null,[[["",0],["internedtypeorconstparamid",3]],["typeorconstparamid",3]],null,[[["",0],["unionid",3]],["itemloc",3,[["union",3]]]],null,[[["",0],["macro2id",3]],["arc",3,[["macro2data",3]]]],null,[[["",0],["macrocallid",3]],["option",4,[["arc",3]]]],[[["",0],["macrocallid",3]],["option",4,[["greennode",3]]]],[[["",0],["macrodefid",3]],["result",4,[["arc",3,[["tokenexpander",4]]],["parseerror",4]]]],[[["",0],["macrocallid",3]],["valueresult",3,[["option",4,[["arc",3,[["subtree",3]]]]],["expanderror",4]]]],[[["",0],["macrocallid",3]],["option",4,[["expanderror",4]]]],[[["",0],["macrorulesid",3]],["arc",3,[["macrorulesdata",3]]]],null,[[["",0],["interndatabase",8],["databasekeyindex",3],["revision",3]],["bool",0]],[[["",0],["defdatabase",8],["databasekeyindex",3],["revision",3]],["bool",0]],[[["",0],["hirdatabase",8],["databasekeyindex",3],["revision",3]],["bool",0]],[[["",0],["internedtypeorconstparamid",3]],["bool",0]],[[["",0],["internedlifetimeparamid",3]],["bool",0]],[[["",0],["internedconstparamid",3]],["bool",0]],[[["",0],["internedopaquetyid",3]],["bool",0]],[[["",0],["internedclosureid",3]],["bool",0]],[[["",0],["internedcallabledefid",3]],["bool",0]],[[["u16",0]],["interndatabasegroupstorage__",3]],[[["u16",0]],["defdatabasegroupstorage__",3]],[[["u16",0]],["hirdatabasegroupstorage__",3]],[[["",0],["macrofile",3]],["valueresult",3,[["option",4],["expanderror",4]]]],[[["",0],["hirfileid",3]],["option",4,[["syntaxnode",3,[["rustlanguage",4]]]]]],[[["",0],["internedcallabledefid",3]],["option",4,[["ordering",4]]]],[[["",0],["procmacroid",3]],["arc",3,[["procmacrodata",3]]]],null,[[["",0],["crateid",3],["environment",3,[["interner",3]]]],["programclauses",3,[["interner",3]]]],null,[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],null,[[["",0],["functionid",3]],["option",4,[["arc",3,[["binders",3,[["returntypeimpltraits",3]]]]]]]],null,[[["",0],["bool",0]]],[[["",0],["bool",0],["durability",3]]],[[["",0],["staticid",3]],["arc",3,[["staticdata",3]]]],null,[[["",0],["structid",3]],["arc",3,[["structdata",3]]]],null,[[["",0],["crateid",3],["adtid",3,[["interner",3]]]],["arc",3,[["adtdatum",3,[["interner",3]]]]]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0],["traitid",3]],["arc",3,[["traitdata",3]]]],null,[[["",0],["crateid",3],["traitid",3,[["interner",3]]]],["arc",3,[["traitdatum",3,[["interner",3]]]]]],null,[[["",0],["genericdefid",4]],["arc",3,[["traitenvironment",3]]]],null,[[["",0],["blockid",3]],["option",4,[["arc",3,[["traitimpls",3]]]]]],null,[[["",0],["crateid",3]],["arc",3,[["traitimpls",3]]]],null,[[["",0],["crateid",3]],["arc",3,[["traitimpls",3]]]],null,[[["",0],["crateid",3],["canonical",3,[["inenvironment",3,[["goal",3,[["interner",3]]]]]]]],["option",4,[["solution",4,[["interner",3]]]]]],[[["",0],["crateid",3],["canonical",3,[["inenvironment",3,[["goal",3,[["interner",3]]]]]]]],["option",4,[["solution",4,[["interner",3]]]]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0],["tydefid",4]],["binders",3,[["ty",3,[["interner",3]]]]]],null,[[["",0],["typealiasid",3]],["arc",3,[["typealiasdata",3]]]],null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["unionid",3]],["arc",3,[["structdata",3]]]],null,[[["",0],["valuetydefid",4]],["binders",3,[["ty",3,[["interner",3]]]]]],null,[[["",0],["enumid",3]],["arc",3,[["arenamap",3,[["idx",3,[["enumvariantdata",3]]],["attrs",3]]]]]],null,[[["",0],["enumid",3]],["arc",3,[["arenamap",3,[["idx",3,[["enumvariantdata",3]]],["astptr",3,[["variant",3]]]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,null,null,[[["",0]],["unresolvedmacrocall",3]],[[["",0]],["inactivecode",3]],[[["",0]],["unresolvedprocmacro",3]],[[["",0]],["macroerror",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,null,[[["",0],["unresolvedmacrocall",3]],["bool",0]],[[["",0],["inactivecode",3]],["bool",0]],[[["",0],["unresolvedprocmacro",3]],["bool",0]],[[["",0],["macroerror",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],null,[[["missingfields",3]],["anydiagnostic",4]],[[["unimplementedbuiltinmacro",3]],["anydiagnostic",4]],[[["unresolvedimport",3]],["anydiagnostic",4]],[[["unresolvedmacrocall",3]],["anydiagnostic",4]],[[["unresolvedmodule",3]],["anydiagnostic",4]],[[["unresolvedprocmacro",3]],["anydiagnostic",4]],[[["inactivecode",3]],["anydiagnostic",4]],[[["breakoutsideofloop",3]],["anydiagnostic",4]],[[["mismatchedargcount",3]],["anydiagnostic",4]],[[["missingunsafe",3]],["anydiagnostic",4]],[[["malformedderive",3]],["anydiagnostic",4]],[[["unresolvedexterncrate",3]],["anydiagnostic",4]],[[["typemismatch",3]],["anydiagnostic",4]],[[["macroerror",3]],["anydiagnostic",4]],[[["missingmatcharms",3]],["anydiagnostic",4]],[[["invalidderivetarget",3]],["anydiagnostic",4]],[[]],[[["incorrectcase",3]],["anydiagnostic",4]],[[["nosuchfield",3]],["anydiagnostic",4]],[[["replacefiltermapnextwithfindmap",3]],["anydiagnostic",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,[[["",0],["unresolvedmacrocall",3]],["bool",0]],[[["",0],["inactivecode",3]],["bool",0]],[[["",0],["unresolvedprocmacro",3]],["bool",0]],[[["",0],["macroerror",3]],["bool",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["query",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[],["query",3]],[[["",0]],["importinfo",3]],[[["",0]],["importpath",3]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[],["importmap",3]],[[["",0],["importinfo",3]],["bool",0]],[[["",0],["importpath",3]],["bool",0]],[[["",0],["importmap",3]],["bool",0]],[[["",0],["importkind",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["importkind",4]],["query",3]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["",0]]],[[["",0],["iteminns",4]],["option",4,[["importinfo",3]]]],[[["defdatabase",8],["crateid",3]],["arc",3,[["importmap",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["usize",0]],["query",3]],[[],["query",3]],[[["",0],["importinfo",3]],["bool",0]],[[["",0],["importpath",3]],["bool",0]],[[["string",3]],["query",3]],null,[[["",0],["iteminns",4]],["option",4,[["importpath",3]]]],[[["defdatabase",8],["crateid",3],["query",3]],["hashset",3,[["iteminns",4],["buildhasherdefault",3,[["fxhasher",3]]]]]],[[["searchmode",4]],["query",3]],null,[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["filesymbol",3]],[[["",0]],["declarationlocation",3]],[[["",0]],["filesymbolkind",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["hirdatabase",8],["module",3]],["vec",3,[["filesymbol",3]]]],null,[[["",0],["filesymbol",3]],["bool",0]],[[["",0],["declarationlocation",3]],["bool",0]],[[["",0],["filesymbolkind",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[]],[[]],[[]],[[]],[[["filesymbolkind",4]],["bool",0]],null,null,null,null,[[["",0],["filesymbol",3]],["bool",0]],[[["",0],["declarationlocation",3]],["bool",0]],[[["",0],["hirdatabase",8]],["option",4,[["filerange",3]]]],[[["",0],["hirdatabase",8]],["option",4,[["filerange",3]]]],null,[[["",0],["semantics",3]],["option",4,[["syntaxnode",6]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[3,"VisibleTraits"],[4,"PathKind"],[4,"ModuleDef"],[4,"GenericDef"],[4,"ScopeDef"],[4,"CfgExpr"],[4,"TypeRef"],[8,"HasSource"],[4,"MacroKind"],[4,"ModuleSource"],[4,"PathResolution"],[4,"PrefixKind"],[4,"Origin"],[4,"CallableKind"],[4,"DefWithBody"],[4,"AssocItem"],[4,"GenericParam"],[3,"Attrs"],[4,"Adt"],[4,"Access"],[4,"CfgAtom"],[4,"AssocItemContainer"],[4,"Namespace"],[4,"ItemInNs"],[4,"Visibility"],[4,"BindingMode"],[4,"Mutability"],[4,"FieldSource"],[4,"StructKind"],[4,"VariantDef"],[3,"SelfParam"],[3,"TypeInfo"],[3,"Crate"],[3,"Impl"],[3,"Semantics"],[3,"InFile"],[3,"Type"],[3,"CfgOptions"],[8,"AsAssocItem"],[3,"Function"],[3,"Const"],[3,"TypeAlias"],[3,"ModPath"],[3,"Param"],[3,"Local"],[3,"Documentation"],[3,"Name"],[3,"SemanticsScope"],[8,"HasAttrs"],[3,"Module"],[3,"Field"],[3,"Struct"],[3,"Union"],[3,"Enum"],[3,"Variant"],[3,"Static"],[3,"Trait"],[3,"Macro"],[3,"TypeParam"],[3,"LifetimeParam"],[3,"ConstParam"],[3,"HirFileId"],[3,"MacroFile"],[3,"CrateDependency"],[3,"BuiltinType"],[3,"BuiltinAttr"],[3,"ToolModule"],[3,"Label"],[3,"TypeOrConstParam"],[3,"Callable"],[3,"AttrsWithOwner"],[3,"Attr"],[3,"AttributeTemplate"],[3,"IncorrectCase"],[8,"HirDisplay"],[8,"HasVisibility"],[8,"HasCrate"],[13,"Struct"],[13,"Union"],[13,"Enum"],[13,"Function"],[13,"Const"],[13,"TypeAlias"],[13,"Trait"],[13,"Impl"],[13,"Ref"],[13,"Function"],[13,"TupleStruct"],[13,"TupleEnumVariant"],[13,"Flag"],[13,"KeyValue"],[13,"Atom"],[13,"All"],[13,"Any"],[13,"Not"],[13,"Function"],[13,"Static"],[13,"Const"],[13,"Named"],[13,"Pos"],[13,"Function"],[13,"Adt"],[13,"Trait"],[13,"TypeAlias"],[13,"Impl"],[13,"Variant"],[13,"Const"],[13,"TypeParam"],[13,"ConstParam"],[13,"LifetimeParam"],[13,"Types"],[13,"Values"],[13,"Macros"],[13,"Module"],[13,"Function"],[13,"Adt"],[13,"Variant"],[13,"Const"],[13,"Static"],[13,"Trait"],[13,"TypeAlias"],[13,"BuiltinType"],[13,"Macro"],[13,"SourceFile"],[13,"Module"],[13,"BlockExpr"],[13,"Super"],[13,"DollarCrate"],[13,"Def"],[13,"Local"],[13,"TypeParam"],[13,"ConstParam"],[13,"SelfType"],[13,"BuiltinAttr"],[13,"ToolModule"],[13,"ModuleDef"],[13,"GenericParam"],[13,"ImplSelfType"],[13,"AdtSelfType"],[13,"Local"],[13,"Label"],[13,"Tuple"],[13,"Path"],[13,"RawPtr"],[13,"Reference"],[13,"Array"],[13,"Slice"],[13,"Fn"],[13,"ImplTrait"],[13,"DynTrait"],[13,"Macro"],[13,"Struct"],[13,"Union"],[13,"Variant"],[13,"Module"],[8,"HirDatabase"],[3,"HirDatabaseGroupStorage__"],[3,"InternedTypeOrConstParamId"],[3,"InternedLifetimeParamId"],[3,"InternedConstParamId"],[3,"InternedOpaqueTyId"],[3,"InternedClosureId"],[3,"InternedCallableDefId"],[8,"AstDatabase"],[8,"DefDatabase"],[3,"DefDatabaseGroupStorage__"],[3,"CrateLimits"],[3,"AstDatabaseStorage"],[3,"AstIdMapQuery"],[3,"ParseMacroExpansionQuery"],[3,"InternMacroCallQuery"],[3,"MacroArgTextQuery"],[3,"MacroDefQuery"],[3,"MacroExpandQuery"],[3,"HygieneFrameQuery"],[3,"InternDatabaseStorage"],[3,"InternDatabaseGroupStorage__"],[3,"InternFunctionQuery"],[3,"InternFunctionLookupQuery"],[3,"InternStructQuery"],[3,"InternStructLookupQuery"],[3,"InternUnionQuery"],[3,"InternUnionLookupQuery"],[3,"InternEnumQuery"],[3,"InternEnumLookupQuery"],[3,"InternConstQuery"],[3,"InternConstLookupQuery"],[3,"InternStaticQuery"],[3,"InternStaticLookupQuery"],[3,"InternTraitQuery"],[3,"InternTraitLookupQuery"],[3,"InternTypeAliasQuery"],[3,"InternTypeAliasLookupQuery"],[3,"InternImplQuery"],[3,"InternImplLookupQuery"],[3,"InternExternBlockQuery"],[3,"InternExternBlockLookupQuery"],[3,"InternBlockQuery"],[3,"InternBlockLookupQuery"],[3,"InternMacro2Query"],[3,"InternMacro2LookupQuery"],[3,"InternProcMacroQuery"],[3,"InternProcMacroLookupQuery"],[3,"InternMacroRulesQuery"],[3,"InternMacroRulesLookupQuery"],[3,"DefDatabaseStorage"],[3,"HirDatabaseStorage"],[3,"EnableProcAttrMacrosQuery"],[3,"FileItemTreeQuery"],[3,"CrateDefMapQueryQuery"],[3,"BlockDefMapQuery"],[3,"StructDataQuery"],[3,"UnionDataQuery"],[3,"EnumDataQuery"],[3,"ImplDataQuery"],[3,"TraitDataQuery"],[3,"TypeAliasDataQuery"],[3,"FunctionDataQuery"],[3,"ConstDataQuery"],[3,"StaticDataQuery"],[3,"Macro2DataQuery"],[3,"MacroRulesDataQuery"],[3,"ProcMacroDataQuery"],[3,"BodyWithSourceMapQuery"],[3,"BodyQuery"],[3,"ExprScopesQuery"],[3,"GenericParamsQuery"],[3,"VariantsAttrsQuery"],[3,"FieldsAttrsQuery"],[3,"VariantsAttrsSourceMapQuery"],[3,"FieldsAttrsSourceMapQuery"],[3,"AttrsQuery"],[3,"CrateLangItemsQuery"],[3,"LangItemQuery"],[3,"ImportMapQuery"],[3,"FieldVisibilitiesQuery"],[3,"FunctionVisibilityQuery"],[3,"ConstVisibilityQuery"],[3,"CrateSupportsNoStdQuery"],[3,"InferQueryQuery"],[3,"TyQuery"],[3,"ValueTyQuery"],[3,"ImplSelfTyQuery"],[3,"ConstParamTyQuery"],[3,"ConstEvalQuery"],[3,"ImplTraitQuery"],[3,"FieldTypesQuery"],[3,"CallableItemSignatureQuery"],[3,"ReturnTypeImplTraitsQuery"],[3,"GenericPredicatesForParamQuery"],[3,"GenericPredicatesQuery"],[3,"TraitEnvironmentQuery"],[3,"GenericDefaultsQuery"],[3,"InherentImplsInCrateQuery"],[3,"InherentImplsInBlockQuery"],[3,"InherentImplCratesQuery"],[3,"TraitImplsInCrateQuery"],[3,"TraitImplsInBlockQuery"],[3,"TraitImplsInDepsQuery"],[3,"InternCallableDefQuery"],[3,"InternCallableDefLookupQuery"],[3,"InternTypeOrConstParamIdQuery"],[3,"InternTypeOrConstParamIdLookupQuery"],[3,"InternLifetimeParamIdQuery"],[3,"InternLifetimeParamIdLookupQuery"],[3,"InternImplTraitIdQuery"],[3,"InternImplTraitIdLookupQuery"],[3,"InternClosureQuery"],[3,"InternClosureLookupQuery"],[3,"AssociatedTyDataQuery"],[3,"TraitDatumQuery"],[3,"StructDatumQuery"],[3,"ImplDatumQuery"],[3,"FnDefDatumQuery"],[3,"FnDefVarianceQuery"],[3,"AdtVarianceQuery"],[3,"AssociatedTyValueQuery"],[3,"TraitSolveQueryQuery"],[3,"ProgramClausesForChalkEnvQuery"],[8,"InternDatabase"],[4,"AnyDiagnostic"],[3,"TypeMismatch"],[3,"UnresolvedModule"],[3,"UnresolvedExternCrate"],[3,"UnresolvedImport"],[3,"UnresolvedMacroCall"],[3,"InactiveCode"],[3,"UnresolvedProcMacro"],[3,"MacroError"],[3,"UnimplementedBuiltinMacro"],[3,"InvalidDeriveTarget"],[3,"MalformedDerive"],[3,"NoSuchField"],[3,"BreakOutsideOfLoop"],[3,"MissingUnsafe"],[3,"MissingFields"],[3,"ReplaceFilterMapNextWithFindMap"],[3,"MismatchedArgCount"],[3,"MissingMatchArms"],[13,"BreakOutsideOfLoop"],[13,"InactiveCode"],[13,"IncorrectCase"],[13,"InvalidDeriveTarget"],[13,"MacroError"],[13,"MalformedDerive"],[13,"MismatchedArgCount"],[13,"MissingFields"],[13,"MissingMatchArms"],[13,"MissingUnsafe"],[13,"NoSuchField"],[13,"ReplaceFilterMapNextWithFindMap"],[13,"TypeMismatch"],[13,"UnimplementedBuiltinMacro"],[13,"UnresolvedExternCrate"],[13,"UnresolvedImport"],[13,"UnresolvedMacroCall"],[13,"UnresolvedModule"],[13,"UnresolvedProcMacro"],[4,"ImportKind"],[4,"SearchMode"],[3,"Query"],[3,"ImportInfo"],[3,"ImportPath"],[3,"ImportMap"],[4,"FileSymbolKind"],[3,"SymbolCollector"],[3,"FileSymbol"],[3,"DeclarationLocation"]]},\
"hir_def":{"doc":"<code>hir_def</code> crate contains everything between macro expansion …","t":[4,13,13,13,8,4,3,4,3,3,13,13,13,13,13,3,13,13,13,13,13,3,13,16,13,4,3,13,6,3,13,13,13,13,3,13,13,3,13,3,13,13,13,13,13,4,4,13,8,3,13,13,13,4,3,3,13,6,6,6,6,6,8,3,13,3,4,4,13,13,3,13,3,4,3,13,13,13,3,13,3,3,13,13,13,6,3,13,13,3,13,13,13,13,6,3,13,13,13,13,3,3,13,3,13,13,6,4,0,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,0,0,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,0,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,12,11,11,0,11,11,12,12,12,12,12,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,10,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,3,13,13,13,13,4,3,4,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,12,12,12,12,3,3,4,3,3,3,3,3,3,18,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,4,3,3,6,6,13,6,6,3,13,3,6,6,3,13,13,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,3,3,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,17,17,11,11,11,11,11,11,5,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,12,18,13,4,4,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,8,11,10,3,3,3,3,3,3,3,3,3,12,11,11,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,3,3,3,3,3,3,3,3,3,3,8,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,8,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,10,12,10,12,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,12,10,10,12,10,12,10,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,12,10,12,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,12,10,12,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,11,11,11,11,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,10,10,12,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,12,10,12,3,16,3,3,8,16,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,13,13,4,13,4,13,13,13,13,4,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,4,13,6,13,13,3,13,13,13,13,13,13,3,6,13,13,13,13,4,13,4,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,4,4,6,13,13,13,13,4,13,3,13,3,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,4,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,13,3,13,13,3,13,3,13,13,13,4,3,13,13,4,13,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,3,4,3,3,13,13,3,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,5,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,11,11,11,11,11,10,11,11,11,11,11,11,11,11,4,3,13,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,4,4,3,13,13,3,13,3,13,3,13,3,13,4,3,3,13,13,13,13,3,13,3,13,4,13,3,3,8,3,13,13,3,13,3,13,3,13,4,13,4,13,13,18,18,18,4,13,13,13,3,13,13,16,3,13,3,13,13,3,13,3,13,3,13,13,13,3,13,13,3,4,13,3,13,12,12,12,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,12,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,17,3,17,17,17,17,17,17,6,17,17,17,17,17,17,17,17,17,17,17,17,17,11,11,11,11,11,11,11,11,11,11,13,13,13,13,4,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,13,13,13,3,13,13,13,3,4,4,13,0,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,12,12,12,12,12,12,12,13,13,4,11,11,11,11,11,11,11,12,3,4,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,3,13,13,13,18,4,3,4,13,3,3,4,3,3,13,13,13,13,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,13,13,13,13,13,13,13,13,13,13,13,8,13,13,13,13,13,13,13,4,3,4,13,13,13,13,13,4,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,8,8,16,16,10,10,13,13,13,4,4,13,13,13,13,13,13,13,13,3,13,13,13,4,13,13,13,13,13,13,13,13,4,13,13,13,13,13,4,3,13,4,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,4,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["AdtId","AdtId","AdtId","AdtId","AsMacroCall","AssocItemId","AssocItemLoc","AttrDefId","BlockId","BlockLoc","BuiltIn","BuiltInAttr","BuiltInDerive","BuiltInEager","BuiltinType","ConstId","ConstId","ConstId","ConstId","ConstId","ConstId","ConstParamId","ConstParamId","Data","Declarative","DefWithBodyId","EnumId","EnumId","EnumLoc","EnumVariantId","EnumVariantId","EnumVariantId","EnumVariantId","EnumVariantId","ExternBlockId","ExternBlockId","ExternBlockId","FieldId","FieldId","FunctionId","FunctionId","FunctionId","FunctionId","FunctionId","FunctionId","GenericDefId","GenericParamId","GenericParamId","HasModule","ImplId","ImplId","ImplId","ImplId","ItemContainerId","ItemLoc","LifetimeParamId","LifetimeParamId","LocalEnumVariantId","LocalFieldId","LocalLifetimeParamId","LocalModuleId","LocalTypeOrConstParamId","Lookup","Macro2Id","Macro2Id","Macro2Loc","MacroExpander","MacroId","MacroId","MacroId","MacroRulesId","MacroRulesId","MacroRulesLoc","ModuleDefId","ModuleId","ModuleId","ModuleId","ModuleId","ProcMacroId","ProcMacroId","ProcMacroLoc","StaticId","StaticId","StaticId","StaticId","StaticLoc","StructId","StructId","StructId","TraitId","TraitId","TraitId","TraitId","TraitId","TraitLoc","TypeAliasId","TypeAliasId","TypeAliasId","TypeAliasId","TypeAliasId","TypeOrConstParamId","TypeParamId","TypeParamId","UnionId","UnionId","UnionId","UnionLoc","VariantId","adt","adt_id","as_call_id","as_call_id_with_errors","as_generic_def_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_mod_item","attr","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builtin_attr","builtin_type","child_by_source","child_by_source_to","child_by_source_to","child_by_source_to","child_by_source_to","child_by_source_to","child_by_source_to","child_by_source_to","child_source","child_source","child_source","child_source","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","container","container","container","container","container","containing_block","containing_module","data","db","def_map","dyn_map","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expander","expander","expander","expr","file_id","find_path","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_unchecked","from_unchecked","generics","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","id","id","id","id","id","import_map","intern","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_attribute","item_scope","item_tree","keys","kind","krate","krate","lang_item","local_id","local_id","local_id","local_id","local_id","local_id","local_id","local_inner","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","macro_id_to_def_id","module","module","module","module","module","module","module","module","module","module","module","nameres","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","parent","parent","parent","parent","parent","parent","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path","per_ns","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","resolver","source","source","source","source","source","src","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ref","variant_data","visibility","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","EnumData","EnumVariantData","FieldData","Other","Packed","Record","Record","ReprKind","StructData","StructKind","Tuple","Tuple","Unit","Unit","VariantData","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","field","fields","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","into","into","kind","name","name","name","name","ne","ne","ne","ne","ne","repr","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ref","variant","variant_data","variant_data","variants","visibility","visibility","visibility","0","0","Attr","AttrId","AttrInput","AttrQuery","AttrSourceMap","Attrs","AttrsWithOwner","DocsRangeMap","Documentation","EMPTY","Literal","TokenTree","as_str","attrs","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","by_key","cfg","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","deref","deref","docs","docs_with_rangemap","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exists","find_string_value_in_tt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get","has_doc_hidden","hash","hash","hash","into","into","into","into","into","into","into","into","into","is_proc_macro","is_proc_macro_attribute","is_proc_macro_derive","lang","map","ne","ne","ne","ne","ne","ne","new","parse_path_comma_token_tree","parse_proc_macro_decl","path","single_ident_value","source_map","source_of","storage","string_value","string_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","token_tree_value","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tt_values","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","1","Body","BodyDiagnostic","BodySourceMap","Expander","ExprPtr","ExprSource","InactiveCode","LabelPtr","LabelSource","LowerCtx","MacroError","Mark","PatPtr","PatSource","SyntheticSyntax","UnresolvedMacroCall","UnresolvedProcMacro","blocks","body_expr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","current_file_id","db","default","default","default","diagnostics","enter_expand","enter_expand_id","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","exit","expr_syntax","exprs","field_syntax","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","ident_patterns_for","index","index","index","into","into","into","into","into","into","into","label_syntax","labels","macro_expansion_expr","ne","ne","ne","new","new","node_expr","node_field","node_label","node_macro_file","node_pat","node_self_param","or_pats","params","pat_syntax","pats","pattern_representative","scope","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_hygiene","cfg","krate","message","node","node","node","node","opts","path","ExprScopes","ScopeData","ScopeEntry","ScopeId","block","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","entries","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","into","into","into","label","name","ne","ne","ne","pat","resolve_name_in_scope","scope_by_expr","scope_chain","scope_for","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","AttributeTemplate","BuiltinAttribute","INERT_ATTRIBUTES","TOOL_MODULES","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","find_builtin_attr_idx","from","from","into","into","list","name","name_value_str","template","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","word","ALL","Bool","BuiltinFloat","BuiltinInt","BuiltinType","BuiltinUint","Char","F32","F64","Float","I128","I16","I32","I64","I8","Int","Isize","Str","U128","U16","U32","U64","U8","Uint","Usize","as_name","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","by_name","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_suffix","from_suffix","from_suffix","hash","hash","hash","hash","into","into","into","into","ne","partial_cmp","partial_cmp","partial_cmp","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","0","0","0","ChildBySource","child_by_source","child_by_source_to","ConstData","FunctionData","ImplData","Macro2Data","MacroRulesData","ProcMacroData","StaticData","TraitData","TypeAliasData","abi","associated_type_by_name","associated_types","async_ret_type","attribute_calls","attribute_calls","attribute_calls","attribute_calls","attrs","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","has_async_kw","has_body","has_const_kw","has_default_kw","has_self_param","has_unsafe_kw","into","into","into","into","into","into","into","into","into","is_auto","is_extern","is_extern","is_negative","is_unsafe","is_varargs","items","items","legacy_const_generics_indices","macro_export","method_by_name","mutable","name","name","name","name","name","name","name","name","ne","ne","ne","ne","ne","ne","ne","ne","ne","params","ret_type","self_ty","skip_array_during_method_dispatch","target_trait","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ref","type_ref","type_ref","visibility","visibility","visibility","visibility","visibility","visibility","AttrsQuery","BlockDefMapQuery","BodyQuery","BodyWithSourceMapQuery","ConstDataQuery","ConstVisibilityQuery","CrateDefMapQueryQuery","CrateLangItemsQuery","CrateLimits","CrateSupportsNoStdQuery","DefDatabase","DefDatabaseGroupStorage__","DefDatabaseStorage","EnableProcAttrMacrosQuery","EnumDataQuery","ExprScopesQuery","FieldVisibilitiesQuery","FieldsAttrsQuery","FieldsAttrsSourceMapQuery","FileItemTreeQuery","FunctionDataQuery","FunctionVisibilityQuery","GenericParamsQuery","ImplDataQuery","ImportMapQuery","InternBlockLookupQuery","InternBlockQuery","InternConstLookupQuery","InternConstQuery","InternDatabase","InternDatabaseGroupStorage__","InternDatabaseStorage","InternEnumLookupQuery","InternEnumQuery","InternExternBlockLookupQuery","InternExternBlockQuery","InternFunctionLookupQuery","InternFunctionQuery","InternImplLookupQuery","InternImplQuery","InternMacro2LookupQuery","InternMacro2Query","InternMacroRulesLookupQuery","InternMacroRulesQuery","InternProcMacroLookupQuery","InternProcMacroQuery","InternStaticLookupQuery","InternStaticQuery","InternStructLookupQuery","InternStructQuery","InternTraitLookupQuery","InternTraitQuery","InternTypeAliasLookupQuery","InternTypeAliasQuery","InternUnionLookupQuery","InternUnionQuery","LangItemQuery","Macro2DataQuery","MacroRulesDataQuery","ProcMacroDataQuery","StaticDataQuery","StructDataQuery","TraitDataQuery","TypeAliasDataQuery","UnionDataQuery","VariantsAttrsQuery","VariantsAttrsSourceMapQuery","attrs","attrs","block_def_map","block_def_map","body","body","body_with_source_map","body_with_source_map","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","const_data","const_data","const_visibility","const_visibility","crate_def_map","crate_def_map_query","crate_def_map_query","crate_lang_items","crate_lang_items","crate_limits","crate_supports_no_std","crate_supports_no_std","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","enable_proc_attr_macros","enable_proc_attr_macros","enum_data","enum_data","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","expr_scopes","expr_scopes","field_visibilities","field_visibilities","fields_attrs","fields_attrs","fields_attrs_source_map","fields_attrs_source_map","file_item_tree","file_item_tree","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_index","fmt_index","for_each_query","for_each_query","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","function_data","function_data","function_visibility","function_visibility","generic_params","generic_params","impl_data","impl_data","import_map","import_map","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","intern_block","intern_block","intern_const","intern_const","intern_enum","intern_enum","intern_extern_block","intern_extern_block","intern_function","intern_function","intern_impl","intern_impl","intern_macro2","intern_macro2","intern_macro_rules","intern_macro_rules","intern_proc_macro","intern_proc_macro","intern_static","intern_static","intern_struct","intern_struct","intern_trait","intern_trait","intern_type_alias","intern_type_alias","intern_union","intern_union","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","lang_item","lang_item","lookup_intern_block","lookup_intern_block","lookup_intern_const","lookup_intern_const","lookup_intern_enum","lookup_intern_enum","lookup_intern_extern_block","lookup_intern_extern_block","lookup_intern_function","lookup_intern_function","lookup_intern_impl","lookup_intern_impl","lookup_intern_macro2","lookup_intern_macro2","lookup_intern_macro_rules","lookup_intern_macro_rules","lookup_intern_proc_macro","lookup_intern_proc_macro","lookup_intern_static","lookup_intern_static","lookup_intern_struct","lookup_intern_struct","lookup_intern_trait","lookup_intern_trait","lookup_intern_type_alias","lookup_intern_type_alias","lookup_intern_union","lookup_intern_union","macro2_data","macro2_data","macro_rules_data","macro_rules_data","maybe_changed_since","maybe_changed_since","new","new","proc_macro_data","proc_macro_data","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","recursion_limit","set_enable_proc_attr_macros","set_enable_proc_attr_macros_with_durability","static_data","static_data","struct_data","struct_data","trait_data","trait_data","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_alias_data","type_alias_data","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union_data","union_data","variants_attrs","variants_attrs","variants_attrs_source_map","variants_attrs_source_map","DynMap","K","Key","KeyMap","Policy","V","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","from","from","from","get","get","index","index_mut","insert","insert","into","into","into","is_empty","is_empty","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Add","And","ArithOp","ArithOp","Array","Array","Assignment","Async","Await","BinaryOp","BinaryOp","Bind","BindingAnnotation","BitAnd","BitOr","BitXor","Block","Bool","Box","Box","Break","ByteString","Call","Cast","Char","Closure","CmpOp","CmpOp","Const","ConstBlock","Continue","Deref","Div","ElementList","Eq","Exclusive","Expr","Expr","ExprId","Field","Float","FloatTypeWrapper","For","Greater","If","Inclusive","Index","Int","Label","LabelId","Less","Let","Let","Lit","Literal","Literal","LogicOp","LogicOp","Loop","MacroStmts","Match","MatchArm","MethodCall","Missing","Missing","Mul","Mutable","Neg","Not","Or","Or","Ord","Ordering","Pat","PatId","Path","Path","Range","Range","RangeOp","Record","RecordFieldPat","RecordLit","RecordLitField","Ref","Ref","Ref","RefMut","Rem","Repeat","Return","Shl","Shr","Slice","Statement","String","Sub","Try","TryBlock","Tuple","Tuple","TupleStruct","Uint","Unannotated","UnaryOp","UnaryOp","Underscore","Unsafe","While","Wild","Yield","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","expr","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","guard","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","name","name","name","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","pat","pat","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","walk_child_exprs","walk_child_pats","elements","initializer","is_assignee_expr","repeat","0","0","0","op","negated","ordering","strict","0","0","0","arg_types","args","args","args","arms","base","body","body","body","body","body","body","body","body","callee","condition","condition","ellipsis","else_branch","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","exprs","fields","generic_args","id","index","is_assignee_expr","is_assignee_expr","is_assignee_expr","iterable","label","label","label","label","label","label","lhs","lhs","method_name","mutability","name","op","op","pat","pat","path","range_type","rawness","receiver","ret_type","rhs","rhs","spread","statements","statements","tail","tail","then_branch","type_ref","0","0","0","0","0","0","0","1","1","1","0","0","0","0","args","args","args","ellipsis","ellipsis","ellipsis","end","inner","mode","mutability","name","pat","path","path","prefix","slice","start","subpat","suffix","else_branch","expr","has_semi","initializer","pat","type_ref","ByCrate","BySelf","Plain","PrefixKind","borrow","borrow_mut","clone","clone_into","eq","equivalent","find_path","find_path_prefixed","fmt","from","into","to_owned","try_from","try_into","type_id","ArgumentImplTrait","ConstParamData","ConstParamData","ForLifetime","GenericParams","Lifetime","LifetimeParamData","TraitSelf","TypeBound","TypeOrConstParam","TypeOrConstParamData","TypeParamData","TypeParamData","TypeParamList","TypeParamProvenance","TypeRef","WherePredicate","WherePredicateTypeTarget","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","const_param","default","default","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","find_const_by_name","find_trait_self_param","find_type_by_name","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","has_default","has_default","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","is_trait_self","iter","lifetimes","name","name","name","name","ne","ne","ne","ne","ne","ne","ne","provenance","storage","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_or_consts","type_param","where_predicates","0","0","bound","bound","bound","lifetimes","target","target","target","0","0","Adt","AssociatedItem","BuiltinType","Const","Contains","EnumVariant","Equals","Function","Fuzzy","ImportInfo","ImportKind","ImportMap","ImportPath","Macro","Module","Query","SearchMode","Static","Trait","TypeAlias","assoc_items_only","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","case_sensitive","clone","clone","clone_into","clone_into","container","default","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","exclude_import_kind","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","import_info_for","import_map_query","into","into","into","into","into","into","is_trait_assoc_item","limit","name_only","ne","ne","new","path","path_of","search_dependencies","search_mode","segments","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","InternStorage","Internable","Interned","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","drop","eq","eq","equivalent","fmt","fmt","from","from","hash","impl_internable","into","into","new","new","new_str","storage","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","ItemInNs","ItemScope","Macros","PerNsGlobImports","Types","Values","as_module_def_id","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","child_by_source_to","clone","clone_into","declarations","default","default","entries","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","hash","impls","into","into","into","krate","legacy_macros","ne","ne","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","types","unnamed_consts","values","0","0","0","AssocItem","AttrOwner","Const","Const","Const","Enum","Enum","ExternBlock","ExternBlock","ExternCrate","ExternCrate","Field","Field","Fields","FileItemTreeId","Function","Function","Function","Glob","Glob","Impl","Impl","Import","Import","ImportKind","Inline","ItemTree","ItemTreeId","ItemTreeNode","MacroCall","MacroCall","MacroCall","MacroDef","MacroDef","MacroRules","MacroRules","Mod","Mod","ModItem","ModItem","ModKind","Normal","Outline","PRIV","PUB","PUB_CRATE","Param","Param","Plain","Prefixed","RawVisibilityId","Record","Single","Source","Static","Static","Struct","Struct","TopLevel","Trait","Trait","TreeId","Tuple","TypeAlias","TypeAlias","TypeAlias","TypeOnly","Union","Union","Unit","UseTree","UseTreeKind","Varargs","Variant","Variant","abi","abi","alias","as_assoc_item","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","ast_id","async_ret_type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","children","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","downcast","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expand","expand_to","explicit_generic_params","fields","fields","fields","file_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","generic_params","generic_params","generic_params","generic_params","generic_params","generic_params","hash","hash","hash","hash","hash","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_from_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","id_to_mod_item","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_auto","is_negative","is_unsafe","item_tree","items","items","kind","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","lookup","mutable","name","name","name","name","name","name","name","name","name","name","name","name","name","name","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","params","path","pretty_print","ret_type","self_ty","target_trait","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","top_level_attrs","top_level_items","tree_id","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ref","type_ref","type_ref","type_ref","use_tree","use_tree_to_ast","value","variants","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","visibility","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","items","0","1","alias","list","path","path","prefix","ATTR_MACRO_CALL","AstPtrPolicy","CONST","CONST_PARAM","DERIVE_MACRO_CALL","ENUM","FUNCTION","IMPL","Key","LIFETIME_PARAM","MACRO2","MACRO_RULES","PROC_MACRO","RECORD_FIELD","STATIC","STRUCT","TRAIT","TUPLE_FIELD","TYPE_ALIAS","TYPE_PARAM","UNION","VARIANT","borrow","borrow_mut","from","get","insert","into","is_empty","try_from","try_into","type_id","EnumId","EnumVariantId","FunctionId","ImplDefId","LangItemTarget","LangItems","StaticId","StructId","TraitId","as_enum","as_enum_variant","as_function","as_impl_def","as_static","as_struct","as_trait","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","eq","eq","equivalent","equivalent","fmt","fmt","from","from","hash","into","into","lang_attr","ne","ne","target","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","0","0","0","0","0","0","0","BlockExpr","BlockExpr","CrateRoot","DefMap","File","Inline","Module","ModuleData","ModuleOrigin","ModuleSource","SourceFile","attr_resolution","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","children","clone","clone","clone_into","clone_into","containing_module","declaration","declaration_source","definition_source","diagnostics","diagnostics","dump","dump_block_scopes","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","file_id","fmt","fmt","fmt","fmt","fn_as_proc_macro","from","from","from","from","hash","index","into","into","into","into","is_inline","module_id","modules","modules_for_file","ne","ne","ne","ne","origin","parent","parent","proc_macro_loading_error","recursion_limit","registered_attrs","registered_tools","root","scope","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","visibility","with_ancestor_maps","block","declaration","declaration_tree_id","definition","definition","definition","definition_tree_id","is_mod_rs","0","0","0","Macro","Other","ResolvedAttr","borrow","borrow_mut","from","into","try_from","try_into","type_id","0","DefDiagnostic","DefDiagnosticKind","InvalidDeriveTarget","MacroError","MalformedDerive","UnconfiguredCode","UnimplementedBuiltinMacro","UnresolvedExternCrate","UnresolvedImport","UnresolvedMacroCall","UnresolvedModule","UnresolvedProcMacro","borrow","borrow","borrow_mut","borrow_mut","eq","eq","equivalent","equivalent","fmt","fmt","from","from","in_module","into","into","kind","ne","ne","try_from","try_from","try_into","try_into","type_id","type_id","ast","ast","ast","ast","ast","ast","ast","ast","ast","candidates","cfg","id","id","id","index","krate","message","opts","path","Abs","Alias","AssociatedTypeBinding","Const","Crate","DollarCrate","EMPTY","GenericArg","GenericArgs","ImportAlias","Lifetime","ModPath","Path","PathKind","PathSegment","PathSegments","Plain","Super","Type","Underscore","args","args_and_bindings","as_ident","bindings","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","desugared_from_fn","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","escaped","first","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_kind","from_known_path","from_segments","from_src","from_src","get","has_self_type","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","is_Self","is_empty","is_ident","is_self","is_self_type","iter","kind","kind","last","len","len","mod_path","name","name","ne","ne","ne","ne","ne","ne","ne","ne","partial_cmp","partial_cmp","path","pop_segment","push_segment","qualifier","segments","segments","skip","storage","storage","take","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_anchor","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_ref","0","0","0","0","0","0","PerNs","borrow","borrow_mut","both","clone","clone_into","default","eq","equivalent","filter_visibility","fmt","from","hash","into","is_none","iter_items","macros","macros","ne","none","or","take_macros","take_types","take_types_vis","take_values","to_owned","try_from","try_into","type_id","types","types","values","values","with_visibility","AdtId","AdtSelfType","AdtSelfType","BuiltinType","ConstId","EnumVariantId","EnumVariantId","FunctionId","GenericParam","GenericParam","GenericParam","HasResolver","ImplSelf","ImplSelfType","Label","Local","LocalBinding","ModuleDef","Partial","ResolveValueResult","Resolver","ScopeDef","SelfType","StaticId","StructId","TraitId","TypeAliasId","TypeNs","Unknown","ValueNs","ValueNs","body_owner","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","generic_def","hash","hash","hash","into","into","into","into","into","krate","module","names_in_scope","ne","ne","ne","ne","resolve_known_enum","resolve_known_struct","resolve_known_trait","resolve_module_path_in_items","resolve_module_path_in_trait_assoc_items","resolve_path_as_macro","resolve_path_in_type_ns","resolve_path_in_type_ns_fully","resolve_path_in_value_ns","resolve_path_in_value_ns_fully","resolve_visibility","resolver","resolver_for_expr","resolver_for_scope","to_owned","to_owned","to_owned","to_owned","to_owned","traits_in_scope","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","where_predicates_in_scope","0","0","1","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","HasChildSource","HasSource","Value","Value","child_source","source","Array","Bool","Char","ConstScalar","ConstScalarOrPath","DynTrait","Error","Error","Fn","ForLifetime","ImplTrait","Int","Lifetime","LifetimeRef","Macro","Maybe","Mut","Mutability","Never","None","Path","Path","Path","Placeholder","RawPtr","RawPtr","Rawness","Ref","Reference","Scalar","Shared","Slice","TraitBoundModifier","TraitRef","Tuple","TypeBound","TypeRef","UInt","Unknown","as_keyword_for_ptr","as_keyword_for_ref","as_path","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builtin_type","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_ast","from_mutable","from_raw","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","is_mut","is_shared","missing","name","ne","ne","ne","ne","ne","ne","path","storage","storage","storage","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","walk","0","0","0","0","0","0","0","0","0","1","1","0","0","0","0","0","0","0","0","0","0","1","1","1","1","2","Module","Module","Public","Public","RawVisibility","Visibility","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","equivalent","equivalent","fmt","fmt","from","from","hash","into","into","is_visible_from","ne","ne","resolve","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","0","0"],"q":["hir_defhir_def::AdtId","","","hir_def::AssocItemId","","","hir_def::AttrDefId","","","","","","","","","","","","","hir_def::DefWithBodyId","","","hir_def::GenericDefId","","","","","","","hir_def::GenericParamId","","","hir_def::ItemContainerId","","","","hir_def::MacroExpander","","","","hir_def::MacroId","","","hir_def::ModuleDefId","","","","","","","","","","hir_def::VariantId","","","hir_def::adt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::adt::VariantData","","hir_def::attr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::attr::AttrInput","","","hir_def::body","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::body::BodyDiagnostic","","","","","","","","","hir_def::body::scope","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::builtin_attr","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::builtin_type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::builtin_type::BuiltinType","","","hir_def::child_by_source","","","hir_def::datahir_def::dbhir_def::dyn_map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::exprhir_def::expr::Array","","","","hir_def::expr::BinaryOp","","","","hir_def::expr::CmpOp","","","hir_def::expr::Expr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::expr::Literal","","","","","","","","","","hir_def::expr::Pat","","","","","","","","","","","","","","","","","","","","","","","hir_def::expr::Statement","","","","","","hir_def::find_path","","","","","","","","","","","","","","","","","","","hir_def::generics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::generics::TypeOrConstParamData","","hir_def::generics::WherePredicate","","","","","","","hir_def::generics::WherePredicateTypeTarget","","hir_def::import_map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::intern","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::item_scope","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::item_scope::ItemInNs","","","hir_def::item_treehir_def::item_tree::AssocItem","","","","hir_def::item_tree::AttrOwner","","","","hir_def::item_tree::Fields","","hir_def::item_tree::ModItem","","","","","","","","","","","","","","","","hir_def::item_tree::ModKind","hir_def::item_tree::Param","","hir_def::item_tree::UseTreeKind","","","","","hir_def::keys","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::lang_item","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::lang_item::LangItemTarget","","","","","","","hir_def::nameres","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::nameres::ModuleOrigin","","","","","","","","hir_def::nameres::ModuleSource","","","hir_def::nameres::attr_resolution","","","","","","","","","","hir_def::nameres::attr_resolution::ResolvedAttr","hir_def::nameres::diagnostics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::nameres::diagnostics::DefDiagnosticKind","","","","","","","","","","","","","","","","","","","hir_def::pathhir_def::path::GenericArg","","","hir_def::path::ImportAlias","hir_def::path::PathKind","","hir_def::per_ns","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::resolver","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::resolver::ResolveValueResult","","","hir_def::resolver::ScopeDef","","","","","","hir_def::resolver::TypeNs","","","","","","","","hir_def::resolver::ValueNs","","","","","","","","hir_def::src","","","","","","hir_def::type_refhir_def::type_ref::ConstScalar","","","","hir_def::type_ref::ConstScalarOrPath","","hir_def::type_ref::TypeBound","","","","","hir_def::type_ref::TypeRef","","","","","","","","","","","","","","","hir_def::visibility","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_def::visibility::RawVisibility","hir_def::visibility::Visibility"],"d":["A Data Type","","","","A helper trait for converting to MacroCallId","","","","","","","","","","","","","","","","","A TypeOrConstParamId with an invariant that it actually …","","","","The defs which have a body.","","","","","","","","","","","","","","","","","","","","","A generic param","","","","","","","","","","","","","","An ID of a module, <strong>local</strong> to a specific crate","","","","","","","A macro","","","","","","The defs which can be visible in the module.","","","","","","","","","","","","","","","","","","","","","","","","","","","","A TypeOrConstParamId with an invariant that it actually …","","","","","","","Defines hir-level representation of structs, enums and …","","","","","","","","","","","","","","","","","","","","A higher level attributes based on TokenTree, with also …","Defines <code>Body</code>: a lowered representation of bodies of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builtin attributes resolved by nameres.","This module defines built-in types.","When <em>constructing</em> <code>hir</code>, we start at some parent syntax node …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains basic data about various HIR declarations.","Defines database &amp; queries for name resolution.","","This module defines a <code>DynMap</code> – a container for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This module describes hir-level representation of …","","An algorithm to find a path to refer to a certain item.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Caller should check if this toc id really belongs to a type","Caller should check if this toc id really belongs to a …","Many kinds of items or constructs can have generic …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A map of all publicly exported items in a crate.","Global <code>Arc</code>-based object interning infrastructure.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Describes items defined or visible (ie, imported) in a …","A simplified AST that only contains items.","keys to be used with <code>DynMap</code>","","","","Collects lang items: items marked with <code>#[lang = &quot;...&quot;]</code> …","","","The module’s ID in its originating <code>DefMap</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the module containing <code>self</code> (or <code>self</code>, if <code>self</code> is …","","","","This module implements import-resolution/macro expansion …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A desugared representation of paths like <code>crate::foo</code> or …","In rust, it is possible to have a value, a type and a …","Name resolution façade.","","","","","","","","","","","","","","","","","","","","","","","","","","Utilities for mapping between hir IDs and the surface …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","HIR for references to types. Paths in these are not yet …","","Defines hir-level representation of visibility (e.g. <code>pub</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A single field of an enum variant or struct","","","","","","Note that we use <code>StructData</code> for unions as well!","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A struct to map text ranges from <code>Documentation</code> back to …","Holds documentation","","<code>#[attr = &quot;string&quot;]</code>","<code>#[attr(subtree)]</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Find string value for a specific key inside token tree","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Maps a <code>TextRange</code> relative to the documentation string back …","","","","","","","","Parses this attribute as a token tree consisting of comma …","","","#[path(ident)]","","Maps the lowered <code>Attr</code> back to its original syntax node.","","#[path = “string”]","","","","","","","","","","#[path TokenTree]","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The body of an item (function, const etc.).","","An item body together with the mapping from syntax nodes …","","","","","","","","","","","","","","","Returns an iterator over all block expressions in this …","The <code>ExprId</code> of the actual body expression.","","","","","","","","","","","","","","","","","","","","","","Get a reference to the body source map’s diagnostics.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Retrieves all ident patterns this pattern shares the ident …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","The patterns for the function’s parameters. While the …","","","","Name resolution for expressions.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If <code>scope</code> refers to a block expression scope, returns the …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","If <code>scope</code> refers to a labeled expression scope, returns the …","","","","","","","","","","","","","","","","","","","A template that the attribute input must match. Only …","","“Inert” built-in attributes that have a special …","Ignored attribute namespaces used by tools.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Different signed int types.","","Different unsigned int types.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bounds restricting the type alias itself (eg. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","True if the first param is <code>self</code>. This is relevant to …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","<code>None</code> for <code>const _: () = ();</code>","","","","","","","","","","","","","","Whether the trait has …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Representative struct for the query group.","","","","","","","","","","","","","","","","","","","Representative struct for the query group.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes the block-level <code>DefMap</code>, returning <code>None</code> when <code>block</code> …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The maximum depth for potentially infinitely-recursive …","Set the value of the <code>enable_proc_attr_macros</code> input.","Set the value of the <code>enable_proc_attr_macros</code> input and …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Explicit binding annotations given in the HIR for a …","","","","","","","","","","","","","","","","","","","<code>*</code>","","","","<code>..</code>","","","","","","","","","","<code>..=</code>","","","","","","","","","","","","","","","","","","This is produced if the syntax tree does not have a …","","","Annotated with <code>mut x</code> – could be either ref or not, …","<code>-</code>","<code>!</code>","","","","","Close relative to rustc’s hir::PatKind","","","","","","","","","","","","Annotated as <code>ref</code>, like <code>ref x</code>","","Annotated as <code>ref mut x</code>.","","","","","","","","","","","","","","","","No binding annotation given: this means that the final …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeauses paths to start with <code>crate</code> where applicable, …","Causes paths to always start with either <code>self</code>, <code>super</code>, <code>crate</code>…","Causes paths to ignore imports in the local module.","","","","","","","","Find a path that can be used to refer to a certain item. …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Data about a generic const parameter (to a function, …","","","Data about the generic parameters of a function, struct, …","","Data about a generic lifetime parameter (to a function, …","","","For desugared where predicates that can directly refer to …","","Data about a generic type parameter (to a function, …","","","","","A single predicate from a where clause, i.e. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Iterator of type_or_consts field","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Import map entry should contain the query string.","","Import map entry should strictly match the query string.","","Import map entry should contain all letters from the query …","Item import details stored in the <code>ImportMap</code>.","","A map from publicly exported items to the path needed to …","","","","","A way to match import map contents against the search …","","","","Matches only the entries that are associated items, …","","","","","","","","","","","","","Respect casing of the query string when matching.","","","","","The module containing this item.","","","","","","","","","","Do not include imports of the specified kind in the search …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Whether the import is a trait associated item or not.","Limits the returned number of items to <code>limit</code>.","Matches entries’ names only, ignoring the rest of the …","","","","A path that can be used to import the item, relative to …","Returns the <code>ModPath</code> needed to import/mention <code>item</code>, …","Searches dependencies of <code>krate</code> for an importable path …","Specifies the way to search for the entries using the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the crate defining this item (or <code>None</code> if <code>self</code> is …","Iterate over all legacy textual scoped macros visible at …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A single field of an enum variant or struct","","","","","","","","This is a glob-import of all names in the <code>ModPath</code>.","","","","","","<code>mod m { ... }</code>","The item tree of a source file.","","Trait implemented by all item nodes in the item tree.","","","","“Macros 2.0” macro definition.","","","","","","","Attributes on an item.","","","<code>mod m;</code>","","","","","","The <code>ModPath</code> is imported normally.","","","","","","","","","","Inner attributes of the source file.","","","Identifies a particular <code>ItemTree</code>.","","","","","This is a <code>some::path::self</code> import, which imports <code>some::path</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bounds on the type alias itself. Only valid in trait …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Expands the <code>UseTree</code> into individually imported <code>ModPath</code>s.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Downcasts a <code>ModItem</code> to a <code>FileItemTreeId</code> specific to this …","","","","","","","","","","","","","","","","","Upcasts a <code>FileItemTreeId</code> to a generic <code>ModItem</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Looks up an instance of <code>Self</code> in an item tree.","","","","","","","","","","","","","","","","","","","","","","","<code>None</code> for <code>const _: () = ();</code>","","","","","The name of the declared macro.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Path to the called macro.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the inner attributes of the source file.","Returns an iterator over all items located at the top …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Maps a <code>UseTree</code> contained in this import back to its AST …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","XXX: AST Nodes and SyntaxNodes have identity equality …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Pseudo-module introduced by a block scope (contains only …","","","Contains the results of (early) name resolution.","Note that non-inline modules, by definition, live inside …","","","","","","","Post-nameres attribute resolution.","","","","","","","","","","","","","","Returns the module containing <code>local_mod</code>, either the parent …","","Returns a node which declares this module, either a …","Returns a node which defines this module. That is, a file …","Diagnostics emitted during DefMap construction.","Get a reference to the def map’s diagnostics.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Where does this module come from?","If this <code>DefMap</code> is for a block expression, returns the …","","","","","","","","","","","","","","","","","","","","","","Declared visibility of this module.","Ascends the <code>DefMap</code> hierarchy and calls <code>f</code> with every <code>DefMap</code> …","","","","","","","","","","","","Attribute resolved to an attribute macro.","Attribute resolved to something else that does not require …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Absolute path (::foo)","Named alias","An associated type binding like in <code>Iterator&lt;Item = T&gt;</code>.","","","<code>$crate</code> from macro expansion","","A single generic argument.","Generic arguments to a path segment (e.g. the <code>i32</code> in …","","","","","","","","","<code>self::</code> is <code>Super(0)</code>","","Unnamed alias, as in <code>use Foo as _;</code>","","","If this path is a single identifier, like <code>foo</code>, return its …","Associated type bindings like in <code>Iterator&lt;Item = T&gt;</code>.","","","","","","","","","","","","","","","","","","","Bounds for the associated type, like in …","","","","","","","","","","","","","","","","","","","Whether these generic args were desugared from …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>ModPath</code> from a <code>PathKind</code>, with no extra path …","Converts a known mod path to <code>Path</code>.","","","Converts an <code>ast::Path</code> to <code>Path</code>. Works with use trees. It …","","This specifies whether the args contain a Self type as the …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns the number of segments in the path (counting …","","The name of the associated type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The type bound to this associated type (in <code>Item = T</code>, this …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns a set of names available in the current scope.","","","","","Resolve known enum from std, like <code>std::result::Result</code>","Resolve known struct from std, like <code>std::boxed::Box</code>","Resolve known trait from std, like <code>std::futures::Future</code>","","","","","","","","","Builds a resolver for type references inside this def.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A concrete constant value","","","","","A fn pointer. Last element of the vector is the return …","","","","","","","","","","","","","","","","","","","","","","","","A modifier on a bound, currently this is only used for …","","","","Compare ty::Ty","","Case of an unknown value that rustc might know but we don…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Converts an <code>ast::TypeRef</code> to a <code>hir::TypeRef</code>.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the mutability is <code>Mut</code>.","Returns <code>true</code> if the mutability is <code>Shared</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>pub(in module)</code>, <code>pub(crate)</code> or <code>pub(super)</code>. Also private, …","Visibility is restricted to a certain module.","<code>pub</code>.","Visibility is unrestricted.","Visibility of an item, not yet resolved.","Visibility of an item, with the path resolved.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","",""],"i":[0,1,2,3,0,0,0,0,0,0,4,4,4,4,1,0,1,5,6,2,3,0,7,8,4,0,0,9,0,0,1,2,3,10,0,11,3,0,3,0,1,5,6,2,3,0,0,3,0,0,11,2,3,0,0,0,7,0,0,0,0,0,0,0,12,0,0,0,1,3,0,12,0,0,0,11,1,3,0,12,0,0,1,5,3,0,0,9,10,0,11,1,2,3,0,0,1,6,2,3,0,0,7,0,9,10,0,0,0,10,13,13,5,14,15,16,17,18,19,20,21,22,23,24,25,26,27,5,0,0,28,29,30,14,15,16,17,31,32,18,19,20,21,22,23,4,24,33,25,34,26,35,27,36,37,38,39,40,11,9,12,7,1,5,6,2,3,10,28,29,30,14,15,16,17,31,32,18,19,20,21,22,23,4,24,33,25,34,26,35,27,36,37,38,39,40,11,9,12,7,1,5,6,2,3,10,0,0,0,28,17,20,22,5,2,10,17,2,2,10,28,29,30,14,15,16,17,31,32,18,19,20,21,22,23,4,24,33,25,34,26,35,27,36,37,38,39,40,11,9,12,7,1,5,6,2,3,10,28,29,30,14,15,16,17,31,32,18,19,20,21,22,23,4,24,33,25,34,26,35,27,36,37,38,39,40,11,9,12,7,1,5,6,2,3,10,15,16,17,22,23,24,25,26,27,9,12,29,30,33,34,35,28,28,0,0,28,0,28,29,30,14,15,16,17,31,32,18,19,20,21,22,23,4,24,33,25,34,26,35,27,36,37,38,39,40,11,9,12,7,1,5,6,2,3,10,28,29,30,14,15,16,17,31,32,18,19,20,21,22,23,4,24,33,25,34,26,35,27,36,37,38,39,40,11,9,12,7,1,5,6,2,3,10,33,34,35,0,10,0,28,29,30,14,15,16,17,31,32,18,19,20,21,22,23,4,24,33,25,34,26,35,27,36,37,38,39,40,11,9,12,7,1,5,6,2,3,10,28,29,30,14,15,16,17,31,32,18,19,20,21,22,23,4,24,33,25,34,26,35,27,36,37,37,37,38,39,40,11,11,9,9,9,9,12,12,12,12,7,7,7,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5,5,6,6,6,6,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,10,10,10,10,14,15,16,17,18,19,20,21,22,23,24,25,26,27,38,39,0,28,29,30,14,15,16,17,31,32,18,19,20,21,22,23,4,24,33,25,34,26,35,27,36,37,38,39,40,11,9,12,7,1,5,6,2,3,10,29,30,33,34,35,0,0,28,29,30,14,15,16,17,31,32,18,19,20,21,22,23,4,24,33,25,34,26,35,27,36,37,38,39,40,11,9,12,7,1,5,6,2,3,10,12,0,0,0,35,28,3,0,38,39,28,31,32,37,40,34,8,14,15,16,17,18,19,20,21,22,23,24,25,26,27,0,41,30,20,21,11,9,12,1,5,2,10,0,28,14,15,16,17,31,32,18,19,20,21,22,23,4,24,33,25,34,26,35,27,36,37,38,39,40,11,9,12,7,1,5,6,2,3,10,38,39,31,32,37,40,15,16,17,22,23,24,25,26,27,9,12,0,0,0,28,14,15,16,17,18,19,20,21,22,23,24,25,26,11,9,12,5,2,10,29,30,33,34,35,0,28,29,30,14,15,16,17,31,32,18,19,20,21,22,23,4,24,33,25,34,26,35,27,36,37,38,39,40,11,9,12,7,1,5,6,2,3,10,28,29,30,14,15,16,17,31,32,18,19,20,21,22,23,4,24,33,25,34,26,35,27,36,37,38,39,40,11,9,12,7,1,5,6,2,3,10,28,29,30,14,15,16,17,31,32,18,19,20,21,22,23,4,24,33,25,34,26,35,27,36,37,38,39,40,11,9,12,7,1,5,6,2,3,10,28,29,30,14,15,16,17,31,32,18,19,20,21,22,23,4,24,33,25,34,26,35,27,36,37,38,39,40,11,9,12,7,1,5,6,2,3,10,0,10,0,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,0,0,0,98,98,99,100,0,0,0,99,100,99,100,0,101,102,103,99,104,98,100,101,102,103,99,104,98,100,101,102,103,99,104,98,100,101,102,103,99,104,98,100,101,102,103,99,104,98,100,101,102,103,99,104,98,100,99,99,101,102,103,99,104,98,100,101,102,103,99,104,98,100,101,102,103,99,104,98,100,99,101,102,103,104,101,102,103,99,104,101,101,102,103,99,104,98,100,101,102,103,99,104,98,100,101,102,103,99,104,98,100,101,102,103,99,104,98,100,104,102,101,103,102,101,102,104,105,106,0,0,0,0,0,0,0,0,0,107,108,108,109,110,109,107,111,112,113,114,115,108,110,109,107,111,112,113,114,115,108,110,107,107,109,107,111,114,115,108,110,109,107,111,114,115,108,110,107,107,111,107,111,109,107,111,114,115,108,109,107,111,114,115,108,110,110,109,107,111,112,113,114,115,108,108,110,109,107,111,112,113,114,115,108,110,107,107,109,114,108,109,107,111,112,113,114,115,108,110,107,107,107,107,113,109,107,111,114,115,108,109,115,107,115,115,111,112,108,115,110,109,107,111,114,115,108,110,108,115,109,107,111,112,113,114,115,108,110,109,107,111,112,113,114,115,108,110,110,109,107,111,112,113,114,115,108,110,116,117,117,0,0,0,0,0,0,118,0,0,0,118,0,0,0,0,118,118,119,119,120,121,122,119,123,124,118,120,121,122,119,123,124,118,124,124,121,120,119,123,124,123,121,121,119,123,124,118,119,123,124,118,121,123,119,123,121,122,119,123,124,118,120,121,122,119,123,124,118,119,119,119,119,120,121,122,119,123,124,118,123,119,123,119,123,118,120,121,123,123,123,123,123,123,119,119,123,119,119,0,124,120,121,122,119,123,124,118,120,121,122,119,123,124,118,120,121,122,119,123,124,118,120,125,126,127,125,127,126,128,125,128,0,0,0,0,129,129,130,131,129,130,131,129,129,130,131,129,130,131,129,130,131,129,130,131,129,130,131,129,130,129,130,131,130,129,129,129,129,129,130,131,129,130,131,129,130,131,0,0,0,0,132,133,132,133,133,133,0,132,133,132,133,133,132,133,132,133,132,133,132,133,132,133,133,134,134,0,0,0,0,134,135,135,134,136,136,136,136,136,134,136,134,137,137,137,137,137,134,137,134,136,137,135,134,136,137,135,134,134,136,137,135,134,136,137,135,134,136,137,135,136,137,135,134,136,137,135,134,136,137,135,134,134,136,137,135,134,136,137,135,136,137,135,134,136,137,135,134,134,136,137,135,136,137,135,134,134,136,137,135,134,136,137,135,134,136,137,135,134,138,139,140,0,141,141,0,0,0,0,0,0,0,0,0,142,143,143,142,143,144,143,144,142,142,145,143,144,146,147,148,149,150,142,145,143,144,146,147,148,149,150,145,142,145,143,144,146,147,148,149,150,142,145,143,144,146,147,148,149,150,142,145,143,144,146,147,148,149,150,142,145,143,144,146,147,148,149,150,142,145,143,144,146,147,148,149,150,142,145,143,144,146,147,148,149,150,142,142,142,142,142,142,142,145,143,144,146,147,148,149,150,143,145,150,144,143,142,143,144,142,147,143,150,142,145,143,146,147,148,149,150,142,145,143,144,146,147,148,149,150,142,142,144,143,144,142,145,143,144,146,147,148,149,150,142,145,143,144,146,147,148,149,150,142,145,143,144,146,147,148,149,150,142,145,143,144,146,147,148,149,150,145,149,150,142,145,143,146,149,150,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,151,152,151,152,151,152,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,152,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,152,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,151,152,151,152,151,151,152,151,152,151,151,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,151,152,151,152,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,151,152,151,152,151,152,151,152,151,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,155,152,155,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,152,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,151,152,151,152,151,152,151,152,151,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,155,217,155,217,155,217,155,217,155,217,155,217,155,217,155,217,155,217,155,217,155,217,155,217,155,217,155,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,152,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,151,152,217,155,217,155,217,155,217,155,217,155,217,155,217,155,217,155,217,155,217,155,217,155,217,155,217,155,217,155,151,152,151,152,155,152,155,152,151,152,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,153,151,151,151,152,151,152,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,152,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,152,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,152,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,151,152,151,152,151,152,0,218,0,0,0,218,219,220,221,219,220,221,219,219,220,219,220,221,218,221,220,220,218,221,219,220,221,218,221,219,219,220,221,219,220,221,219,220,221,222,223,0,224,0,225,224,225,225,0,225,226,0,222,222,222,225,227,225,226,225,227,225,225,227,225,0,224,225,226,225,228,222,229,230,231,0,232,0,225,227,0,225,233,225,231,225,227,0,0,233,225,232,226,0,225,0,224,225,225,225,0,225,225,226,222,234,228,228,223,226,230,0,0,0,225,226,225,226,0,226,0,225,0,225,234,226,234,222,229,225,222,222,226,0,227,222,225,225,225,226,226,227,234,0,225,225,225,225,226,225,231,228,224,223,230,233,222,235,236,227,225,229,237,238,232,234,239,226,231,228,224,223,230,233,222,235,236,227,225,229,237,238,232,234,239,226,231,228,224,223,230,233,222,235,236,227,225,229,237,238,232,234,239,226,231,228,224,223,230,233,222,235,236,227,225,229,237,238,232,234,239,226,236,231,228,224,223,230,233,222,235,236,227,225,229,237,238,232,234,239,226,231,228,224,223,230,233,222,235,236,227,225,229,237,238,232,234,239,226,237,238,231,228,224,224,223,223,230,230,233,222,222,235,236,236,227,225,229,237,238,232,234,239,226,231,228,224,223,230,233,222,235,236,227,227,225,229,237,238,232,234,239,226,237,231,228,224,223,230,233,222,231,228,224,223,230,233,222,235,236,227,225,229,237,238,232,234,239,226,235,238,239,224,230,235,236,227,225,229,237,238,232,239,226,236,234,237,239,231,228,224,223,230,233,222,235,236,227,225,229,237,238,232,234,239,226,224,223,230,222,236,231,228,224,223,230,233,222,235,236,227,225,229,237,238,232,234,239,226,231,228,224,223,230,233,222,235,236,227,225,229,237,238,232,234,239,226,231,228,224,223,230,233,222,235,236,227,225,229,237,238,232,234,239,226,225,226,240,241,240,241,242,243,244,245,246,247,247,248,249,250,251,252,253,251,254,255,256,257,258,259,260,261,251,262,252,263,257,264,263,265,254,266,267,268,269,270,271,272,273,274,275,276,264,253,277,255,252,264,276,258,277,256,257,258,278,266,279,280,253,273,269,275,279,265,258,264,280,273,253,251,279,280,264,277,281,277,281,263,272,282,283,284,285,286,287,288,286,287,288,289,290,291,292,293,294,295,293,294,295,296,297,298,299,298,299,294,295,300,300,296,298,300,301,302,302,301,301,301,303,303,303,0,303,303,303,303,303,303,0,0,303,303,303,303,303,303,303,304,0,305,306,0,306,0,304,306,307,0,0,305,304,0,307,0,0,308,309,310,304,305,311,306,307,308,309,310,304,305,311,306,307,308,309,310,304,305,311,306,307,308,309,310,304,305,311,306,307,305,311,308,308,309,310,304,305,311,306,307,308,309,310,304,305,311,306,307,311,311,311,308,309,310,304,305,311,306,307,308,309,310,304,305,305,305,311,306,307,305,310,308,309,310,304,305,311,306,307,308,309,310,304,305,311,306,307,305,311,311,305,308,309,310,308,309,310,305,311,306,307,308,311,308,309,310,304,305,311,306,307,308,309,310,304,305,311,306,307,308,309,310,304,305,311,306,307,310,308,309,310,304,305,311,306,307,311,305,311,312,313,314,315,316,316,314,315,316,317,318,319,319,319,319,320,319,320,319,320,0,0,0,0,319,319,0,0,319,319,319,321,322,323,324,319,320,321,322,323,324,319,320,321,321,322,323,322,323,322,324,322,323,324,319,322,323,324,319,321,322,323,323,324,319,320,321,322,323,324,319,320,321,319,324,324,322,323,324,319,320,321,322,321,321,322,323,321,322,324,0,321,323,322,323,323,322,323,324,319,320,321,322,323,324,319,320,321,322,323,324,319,320,321,0,0,0,325,325,326,325,326,325,325,325,325,325,325,325,325,325,325,326,325,0,325,326,325,326,325,327,325,325,325,326,325,326,325,326,0,0,328,0,328,328,328,329,330,328,329,330,328,330,328,328,330,329,330,330,330,328,330,328,329,330,328,329,330,328,328,330,329,330,328,328,330,330,328,328,329,330,328,329,330,328,329,330,328,330,330,330,331,332,333,0,0,0,334,335,0,334,0,334,0,334,0,336,0,0,0,334,335,337,338,0,334,0,334,0,339,0,0,0,0,334,335,0,334,0,334,0,334,0,336,0,340,339,341,341,341,0,336,338,337,0,342,337,343,0,334,0,334,336,0,334,0,342,0,334,335,338,0,334,342,0,0,340,0,336,344,345,346,334,343,334,347,346,344,345,348,349,350,351,352,353,354,355,356,357,358,359,335,347,346,344,345,348,349,350,351,352,353,354,355,356,357,358,359,345,360,341,361,336,362,363,334,347,364,337,346,344,345,340,348,349,350,351,352,353,354,355,356,339,357,358,359,338,335,365,342,366,360,341,361,336,362,363,334,347,364,337,346,344,345,340,348,349,350,351,352,353,354,355,356,339,357,358,359,338,335,365,342,366,355,344,360,341,362,363,334,347,364,337,346,344,345,340,348,349,350,351,352,353,354,355,356,339,357,358,359,338,335,342,366,360,341,362,363,334,347,364,337,346,344,345,340,348,349,350,351,352,353,354,355,356,339,357,358,359,338,335,342,366,361,334,360,341,361,336,362,363,334,347,364,337,346,344,345,340,348,349,350,351,352,353,354,355,356,339,357,358,359,338,335,365,342,366,360,341,361,336,362,363,334,347,364,337,346,344,345,340,348,349,350,351,352,353,354,355,356,339,357,358,359,338,335,365,342,366,364,357,345,348,349,365,363,360,341,361,336,362,363,334,347,364,337,346,344,345,340,348,349,350,351,352,353,354,355,356,339,357,358,359,338,335,365,342,366,360,341,361,336,336,336,336,336,362,363,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,334,347,364,337,346,344,345,340,348,349,350,351,352,353,354,355,356,339,357,358,359,338,335,335,335,335,335,365,342,366,348,349,350,353,354,355,360,336,362,363,334,343,347,346,344,345,348,349,350,351,352,353,354,355,356,357,358,359,343,347,346,344,345,348,349,350,351,352,353,354,355,356,357,358,359,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,361,364,360,341,361,336,362,363,334,347,364,337,346,344,345,340,348,349,350,351,352,353,354,355,356,339,357,358,359,338,335,365,342,366,353,354,353,363,353,354,356,343,347,346,344,345,348,349,350,351,352,353,354,355,356,357,358,359,352,346,345,348,349,350,351,352,353,355,356,358,359,365,366,341,361,336,362,334,347,364,337,346,344,345,340,348,349,350,351,352,353,354,355,356,339,357,358,359,335,365,342,366,363,345,357,361,345,354,354,360,341,362,363,334,347,364,337,346,344,345,340,348,349,350,351,352,353,354,355,356,339,357,358,359,338,335,342,366,361,361,363,360,341,361,336,362,363,334,347,364,337,346,344,345,340,348,349,350,351,352,353,354,355,356,339,357,358,359,338,335,365,342,366,360,341,361,336,362,363,334,347,364,337,346,344,345,340,348,349,350,351,352,353,354,355,356,339,357,358,359,338,335,365,342,366,360,341,361,336,362,363,334,347,364,337,346,344,345,340,348,349,350,351,352,353,354,355,356,339,357,358,359,338,335,365,342,366,351,352,355,366,347,347,363,350,347,346,345,348,349,350,351,352,353,355,356,359,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,394,395,396,395,397,396,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,398,398,398,398,398,398,398,398,398,398,399,399,399,399,0,0,399,399,399,399,399,399,399,399,399,399,399,400,399,400,399,400,399,400,400,399,400,399,400,399,400,399,400,399,399,400,0,399,400,400,399,400,399,400,399,400,399,400,401,402,403,404,405,406,407,408,409,408,0,408,408,409,0,0,0,409,0,410,408,411,409,410,408,411,409,411,408,409,408,409,410,408,411,411,0,410,410,410,410,408,411,409,410,408,411,409,408,410,408,411,409,410,410,408,411,409,408,410,410,408,411,409,408,410,410,410,410,408,411,409,411,410,411,410,410,410,410,410,411,408,409,410,408,411,409,410,408,411,409,410,408,411,409,411,410,412,413,413,414,413,415,415,413,416,417,418,419,419,0,419,419,419,419,419,419,419,420,0,0,421,421,421,421,421,421,421,421,421,421,421,422,421,422,421,422,421,422,421,422,421,422,422,421,422,422,421,422,421,422,421,422,421,422,423,424,425,426,427,428,429,430,431,423,425,432,430,431,432,426,428,425,427,433,434,0,435,433,433,436,0,0,0,435,0,0,0,0,0,433,433,435,434,437,438,439,437,436,439,433,434,440,437,441,435,438,436,439,433,434,440,437,441,435,438,441,439,433,434,440,437,441,435,438,439,433,434,440,437,441,435,438,439,433,437,439,433,434,440,437,441,435,438,439,433,434,440,437,441,435,438,439,436,439,439,433,434,434,440,437,441,435,438,436,439,439,433,434,440,440,437,441,435,438,439,440,439,439,440,436,437,439,433,440,437,441,435,438,436,439,433,434,440,437,441,435,438,439,436,439,439,440,436,440,439,436,436,439,440,441,438,439,433,434,440,437,441,435,438,439,433,0,439,439,440,439,440,436,439,437,436,439,433,434,440,437,441,435,438,439,434,436,439,433,434,440,437,441,435,438,436,439,433,434,440,437,441,435,438,440,436,439,433,434,440,437,441,435,438,441,442,443,444,445,446,447,0,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,448,449,449,450,449,451,449,451,451,449,451,450,0,451,450,450,450,451,450,452,0,0,0,449,451,451,449,449,0,450,0,452,453,453,449,452,451,450,453,449,452,451,450,453,449,452,451,450,453,449,452,451,450,449,452,451,450,449,452,451,450,453,449,452,451,450,453,449,452,451,450,453,449,452,451,453,449,452,451,450,453,453,453,449,452,451,450,453,453,453,453,453,453,453,453,453,453,453,454,0,0,453,449,452,451,450,453,453,449,452,451,450,453,449,452,451,450,453,449,452,451,450,453,455,456,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,0,0,479,480,480,479,481,482,482,0,0,481,481,483,481,483,481,482,483,0,481,484,485,0,481,484,481,483,486,481,487,481,0,487,481,486,485,481,0,0,481,0,0,482,482,485,485,483,485,487,488,481,489,483,484,486,482,485,487,488,481,489,483,484,486,482,482,485,487,488,481,489,483,484,486,482,485,487,488,481,489,483,484,486,482,485,487,488,481,489,483,484,486,482,485,487,488,481,489,483,484,486,482,485,487,488,481,489,483,484,486,486,482,482,485,487,488,481,489,483,484,486,482,482,481,485,487,485,487,488,481,489,483,484,486,482,485,487,488,481,489,483,484,486,482,485,485,489,489,488,481,489,483,486,482,488,488,481,483,485,487,488,481,489,483,484,486,482,486,482,485,487,488,481,489,483,484,486,482,485,487,488,481,489,483,484,486,482,485,487,488,481,489,483,484,486,482,481,490,491,492,493,494,495,496,497,498,496,497,499,500,501,502,503,504,505,506,507,508,501,502,503,505,502,509,510,509,510,0,0,509,510,509,510,509,510,509,510,509,510,509,510,509,510,509,510,510,509,510,510,509,510,509,509,510,509,510,509,510,509,510,511,512],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["adtid",4]],[[["",0],["defdatabase",8],["crateid",3]],["option",4,[["macrocallid",3]]]],[[["",0],["defdatabase",8],["crateid",3],["fnmut",8]],["result",4,[["result",4,[["macrocallid",3],["erroremitted",3]]],["unresolvedmacro",3]]]],[[],["option",4,[["genericdefid",4]]]],[[["",0]],["internid",3]],[[["",0]],["internid",3]],[[["",0]],["internid",3]],[[["",0]],["internid",3]],[[["",0]],["internid",3]],[[["",0]],["internid",3]],[[["",0]],["internid",3]],[[["",0]],["internid",3]],[[["",0]],["internid",3]],[[["",0]],["internid",3]],[[["",0]],["internid",3]],[[["",0]],["internid",3]],[[["",0]],["internid",3]],[[["",0]],["internid",3]],[[["defdatabase",8]],["moditem",4]],null,nullnull,null,null,[[["",0],["defdatabase",8],["dynmap",3],["hirfileid",3]]],[[["",0],["defdatabase",8],["dynmap",3],["hirfileid",3]]],[[["",0],["defdatabase",8],["dynmap",3],["hirfileid",3]]],[[["",0],["defdatabase",8],["dynmap",3],["hirfileid",3]]],[[["",0],["defdatabase",8],["dynmap",3],["hirfileid",3]]],[[["",0],["defdatabase",8],["dynmap",3],["hirfileid",3]]],[[["",0],["defdatabase",8],["dynmap",3],["hirfileid",3]]],[[["",0],["defdatabase",8]],["infile",3,[["arenamap",3,[["localenumvariantid",6]]]]]],[[["",0],["defdatabase",8]],["infile",3,[["arenamap",3,[["localtypeorconstparamid",6]]]]]],[[["",0],["defdatabase",8]],["infile",3,[["arenamap",3,[["locallifetimeparamid",6]]]]]],[[["",0],["defdatabase",8]],["infile",3,[["arenamap",3,[["localfieldid",6]]]]]],[[["",0]],["moduleid",3]],[[["",0]]],[[["",0]]],[[["",0]],["functionid",3]],[[["",0]],["structid",3]],[[["",0]],["unionid",3]],[[["",0]],["enumid",3]],[[["",0]],["enumvariantid",3]],[[["",0]],["fieldid",3]],[[["",0]],["constid",3]],[[["",0]],["staticid",3]],[[["",0]],["traitid",3]],[[["",0]],["typealiasid",3]],[[["",0]],["implid",3]],[[["",0]],["externblockid",3]],[[["",0]],["macroexpander",4]],[[["",0]],["macro2id",3]],[[["",0]],["macro2loc",3]],[[["",0]],["macrorulesid",3]],[[["",0]],["macrorulesloc",3]],[[["",0]],["procmacroid",3]],[[["",0]],["procmacroloc",3]],[[["",0]],["blockid",3]],[[["",0]],["blockloc",3]],[[["",0]],["typeorconstparamid",3]],[[["",0]],["typeparamid",3]],[[["",0]],["constparamid",3]],[[["",0]],["lifetimeparamid",3]],[[["",0]],["itemcontainerid",4]],[[["",0]],["adtid",4]],[[["",0]],["macroid",4]],[[["",0]],["genericparamid",4]],[[["",0]],["moduledefid",4]],[[["",0]],["defwithbodyid",4]],[[["",0]],["associtemid",4]],[[["",0]],["genericdefid",4]],[[["",0]],["attrdefid",4]],[[["",0]],["variantidstructid",3]],["ordering",4]],[[["",0],["unionid",3]],["ordering",4]],[[["",0],["enumid",3]],["ordering",4]],[[["",0],["implid",3]],["ordering",4]],[[["",0],["externblockid",3]],["ordering",4]],[[["",0],["macro2id",3]],["ordering",4]],[[["",0],["macrorulesid",3]],["ordering",4]],[[["",0],["procmacroid",3]],["ordering",4]],[[["",0],["blockid",3]],["ordering",4]],[[["",0],["adtid",4]],["ordering",4]],[[["",0],["macroid",4]],["ordering",4]],null,null,null,null,null,[[["",0]],["option",4,[["blockid",3]]]],[[["",0],["defdatabase",8]],["option",4,[["moduleid",3]]]],null,null,[[["",0],["defdatabase",8]],["arc",3,[["defmap",3]]]],null,[[["",0],["moduleid",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["functionid",3]],["bool",0]],[[["",0],["structid",3]],["bool",0]],[[["",0],["unionid",3]],["bool",0]],[[["",0],["enumid",3]],["bool",0]],[[["",0],["enumvariantid",3]],["bool",0]],[[["",0],["fieldid",3]],["bool",0]],[[["",0],["constid",3]],["bool",0]],[[["",0],["staticid",3]],["bool",0]],[[["",0],["traitid",3]],["bool",0]],[[["",0],["typealiasid",3]],["bool",0]],[[["",0],["implid",3]],["bool",0]],[[["",0],["externblockid",3]],["bool",0]],[[["",0],["macroexpander",4]],["bool",0]],[[["",0],["macro2id",3]],["bool",0]],[[["",0],["macro2loc",3]],["bool",0]],[[["",0],["macrorulesid",3]],["bool",0]],[[["",0],["macrorulesloc",3]],["bool",0]],[[["",0],["procmacroid",3]],["bool",0]],[[["",0],["procmacroloc",3]],["bool",0]],[[["",0],["blockid",3]],["bool",0]],[[["",0],["blockloc",3]],["bool",0]],[[["",0],["typeorconstparamid",3]],["bool",0]],[[["",0],["typeparamid",3]],["bool",0]],[[["",0],["constparamid",3]],["bool",0]],[[["",0],["lifetimeparamid",3]],["bool",0]],[[["",0],["itemcontainerid",4]],["bool",0]],[[["",0],["adtid",4]],["bool",0]],[[["",0],["macroid",4]],["bool",0]],[[["",0],["genericparamid",4]],["bool",0]],[[["",0],["moduledefid",4]],["bool",0]],[[["",0],["defwithbodyid",4]],["bool",0]],[[["",0],["associtemid",4]],["bool",0]],[[["",0],["genericdefid",4]],["bool",0]],[[["",0],["attrdefid",4]],["bool",0]],[[["",0],["variantid",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],null,null,null,null,[[["defdatabase",8]],["hirfileid",3]],null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["typeparamid",3]]],[[["constparamid",3]]],[[]],[[]],[[]],[[["moduleid",3]],["itemcontainerid",4]],[[]],[[]],[[["structid",3]],["adtid",4]],[[["unionid",3]],["adtid",4]],[[["enumid",3]],["adtid",4]],[[["procmacroid",3]],["macroid",4]],[[["macrorulesid",3]],["macroid",4]],[[["macro2id",3]],["macroid",4]],[[]],[[]],[[["lifetimeparamid",3]],["genericparamid",4]],[[["constparamid",3]],["genericparamid",4]],[[["typeparamid",3]],["genericparamid",4]],[[["enumvariantid",3]],["moduledefid",4]],[[["enumid",3]],["moduledefid",4]],[[["constid",3]],["moduledefid",4]],[[["macroid",4]],["moduledefid",4]],[[["macro2id",3]],["moduledefid",4]],[[["macrorulesid",3]],["moduledefid",4]],[[["procmacroid",3]],["moduledefid",4]],[[["moduleid",3]],["moduledefid",4]],[[["builtintype",4]],["moduledefid",4]],[[]],[[["functionid",3]],["moduledefid",4]],[[["adtid",4]],["moduledefid",4]],[[["structid",3]],["moduledefid",4]],[[["staticid",3]],["moduledefid",4]],[[["unionid",3]],["moduledefid",4]],[[["typealiasid",3]],["moduledefid",4]],[[["traitid",3]],["moduledefid",4]],[[]],[[["functionid",3]],["defwithbodyid",4]],[[["constid",3]],["defwithbodyid",4]],[[["staticid",3]],["defwithbodyid",4]],[[["functionid",3]],["associtemid",4]],[[["constid",3]],["associtemid",4]],[[["typealiasid",3]],["associtemid",4]],[[]],[[["enumvariantid",3]],["genericdefid",4]],[[["associtemid",4]]],[[["typealiasid",3]],["genericdefid",4]],[[["functionid",3]],["genericdefid",4]],[[["constid",3]],["genericdefid",4]],[[["implid",3]],["genericdefid",4]],[[["adtid",4]],["genericdefid",4]],[[["structid",3]],["genericdefid",4]],[[["enumid",3]],["genericdefid",4]],[[["unionid",3]],["genericdefid",4]],[[]],[[["traitid",3]],["genericdefid",4]],[[["fieldid",3]],["attrdefid",4]],[[["constid",3]],["attrdefid",4]],[[["genericparamid",4]],["attrdefid",4]],[[["macroid",4]],["attrdefid",4]],[[["itemcontainerid",4]]],[[["macrorulesid",3]],["attrdefid",4]],[[["typealiasid",3]],["attrdefid",4]],[[["implid",3]],["attrdefid",4]],[[["traitid",3]],["attrdefid",4]],[[["functionid",3]],["attrdefid",4]],[[["procmacroid",3]],["attrdefid",4]],[[["moduleid",3]],["attrdefid",4]],[[["staticid",3]],["attrdefid",4]],[[]],[[["macro2id",3]],["attrdefid",4]],[[["enumvariantid",3]],["attrdefid",4]],[[["unionid",3]],["attrdefid",4]],[[["enumid",3]],["attrdefid",4]],[[["structid",3]],["attrdefid",4]],[[["adtid",4]],["attrdefid",4]],[[["unionid",3]],["variantid",4]],[[]],[[["enumvariantid",3]],["variantid",4]],[[["structid",3]],["variantid",4]],[[["internid",3]]],[[["internid",3]]],[[["internid",3]]],[[["internid",3]]],[[["internid",3]]],[[["internid",3]]],[[["internid",3]]],[[["internid",3]]],[[["internid",3]]],[[["internid",3]]],[[["internid",3]]],[[["internid",3]]],[[["internid",3]]],[[["internid",3]]],[[["typeorconstparamid",3]]],[[["typeorconstparamid",3]]],nullnull,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["defdatabase",8]],["bool",0]],null,null,null,null,[[["",0]],["crateid",3]],[[["",0],["defdatabase",8]],["crateid",3]],null,[[["",0]],["localtypeorconstparamid",6]],[[["",0]],["localtypeorconstparamid",6]],null,null,null,null,null,null,[[["",0],["defdatabase",8]]],[[["",0],["defdatabase",8]],["associtemloc",3,[["function",3]]]],[[["",0],["defdatabase",8]],["itemloc",3,[["struct",3]]]],[[["",0],["defdatabase",8]],["unionloc",6]],[[["",0],["defdatabase",8]],["enumloc",6]],[[["",0],["defdatabase",8]],["associtemloc",3,[["const",3]]]],[[["",0],["defdatabase",8]],["staticloc",6]],[[["",0],["defdatabase",8]],["traitloc",6]],[[["",0],["defdatabase",8]],["associtemloc",3,[["typealias",3]]]],[[["",0],["defdatabase",8]],["itemloc",3,[["impl",3]]]],[[["",0],["defdatabase",8]],["itemloc",3,[["externblock",3]]]],[[["",0],["defdatabase",8]],["macro2loc",3]],[[["",0],["defdatabase",8]],["macrorulesloc",3]],[[["",0],["defdatabase",8]],["procmacroloc",3]],[[["",0],["defdatabase",8]],["blockloc",3]],[[["defdatabase",8],["macroid",4]],["macrodefid",3]],[[["",0],["defdatabase",8]],["moduleid",3]],[[["",0],["defdatabase",8]],["moduleid",3]],[[["",0],["defdatabase",8]],["moduleid",3]],[[["",0],["defdatabase",8]],["moduleid",3]],[[["",0],["defdatabase",8]],["moduleid",3]],[[["",0],["defdatabase",8]],["moduleid",3]],[[["",0],["defdatabase",8]],["moduleid",3]],[[["",0],["defdatabase",8]],["option",4,[["moduleid",3]]]],[[["",0],["defdatabase",8]],["moduleid",3]],[[["",0],["defdatabase",8]],["moduleid",3]],[[["",0],["defdatabase",8]],["moduleid",3]],null,[[["",0],["moduleid",3]],["bool",0]],[[["",0],["functionid",3]],["bool",0]],[[["",0],["structid",3]],["bool",0]],[[["",0],["unionid",3]],["bool",0]],[[["",0],["enumid",3]],["bool",0]],[[["",0],["enumvariantid",3]],["bool",0]],[[["",0],["fieldid",3]],["bool",0]],[[["",0],["constid",3]],["bool",0]],[[["",0],["staticid",3]],["bool",0]],[[["",0],["traitid",3]],["bool",0]],[[["",0],["typealiasid",3]],["bool",0]],[[["",0],["implid",3]],["bool",0]],[[["",0],["externblockid",3]],["bool",0]],[[["",0],["macroexpander",4]],["bool",0]],[[["",0],["macro2id",3]],["bool",0]],[[["",0],["macro2loc",3]],["bool",0]],[[["",0],["macrorulesid",3]],["bool",0]],[[["",0],["macrorulesloc",3]],["bool",0]],[[["",0],["procmacroid",3]],["bool",0]],[[["",0],["procmacroloc",3]],["bool",0]],[[["",0],["blockid",3]],["bool",0]],[[["",0],["blockloc",3]],["bool",0]],[[["",0],["typeorconstparamid",3]],["bool",0]],[[["",0],["typeparamid",3]],["bool",0]],[[["",0],["constparamid",3]],["bool",0]],[[["",0],["lifetimeparamid",3]],["bool",0]],[[["",0],["itemcontainerid",4]],["bool",0]],[[["",0],["adtid",4]],["bool",0]],[[["",0],["macroid",4]],["bool",0]],[[["",0],["genericparamid",4]],["bool",0]],[[["",0],["moduledefid",4]],["bool",0]],[[["",0],["defwithbodyid",4]],["bool",0]],[[["",0],["associtemid",4]],["bool",0]],[[["",0],["genericdefid",4]],["bool",0]],[[["",0],["attrdefid",4]],["bool",0]],[[["",0],["variantid",4]],["bool",0]],[[["",0]],["genericdefid",4]],[[["",0]],["genericdefid",4]],null,null,null,null,[[["",0],["structid",3]],["option",4,[["ordering",4]]]],[[["",0],["unionid",3]],["option",4,[["ordering",4]]]],[[["",0],["enumid",3]],["option",4,[["ordering",4]]]],[[["",0],["implid",3]],["option",4,[["ordering",4]]]],[[["",0],["externblockid",3]],["option",4,[["ordering",4]]]],[[["",0],["macro2id",3]],["option",4,[["ordering",4]]]],[[["",0],["macrorulesid",3]],["option",4,[["ordering",4]]]],[[["",0],["procmacroid",3]],["option",4,[["ordering",4]]]],[[["",0],["blockid",3]],["option",4,[["ordering",4]]]],[[["",0],["adtid",4]],["option",4,[["ordering",4]]]],[[["",0],["macroid",4]],["option",4,[["ordering",4]]]],null,null,null,[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8]],["resolver",3]],[[["",0],["defdatabase",8]],["infile",3]],[[["",0],["defdatabase",8]],["infile",3]],[[["",0],["defdatabase",8]],["infile",3]],[[["",0],["defdatabase",8]],["infile",3]],[[["",0],["defdatabase",8]],["infile",3]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["defdatabase",8]],["arc",3,[["variantdata",4]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["structdata",3]],[[["",0]],["enumdata",3]],[[["",0]],["enumvariantdata",3]],[[["",0]],["variantdata",4]],[[["",0]],["fielddata",3]],[[["",0]],["reprkind",4]],[[["",0]],["structkind",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["structdata",3]],["bool",0]],[[["",0],["enumdata",3]],["bool",0]],[[["",0],["enumvariantdata",3]],["bool",0]],[[["",0],["variantdata",4]],["bool",0]],[[["",0],["fielddata",3]],["bool",0]],[[["",0],["reprkind",4]],["bool",0]],[[["",0],["structkind",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["name",3]],["option",4,[["localfieldid",6]]]],[[["",0]],["arena",3]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["structkind",4]],null,null,null,null,[[["",0],["structdata",3]],["bool",0]],[[["",0],["enumdata",3]],["bool",0]],[[["",0],["enumvariantdata",3]],["bool",0]],[[["",0],["variantdata",4]],["bool",0]],[[["",0],["fielddata",3]],["bool",0]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0],["name",3]],["option",4,[["localenumvariantid",6]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["str",0]],[[]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["str",0]],["attrquery",3]],[[["",0]],["option",4,[["cfgexpr",4]]]],[[["",0]],["documentation",3]],[[["",0]],["attrs",3]],[[["",0]],["attrswithowner",3]],[[["",0]],["attrid",3]],[[["",0]],["attr",3]],[[["",0]],["attrinput",4]],[[["",0]],["attrquery",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["attrs",3]],[[["",0]]],[[["",0]],["attrs",3]],[[["",0]],["option",4,[["documentation",3]]]],[[["",0],["defdatabase",8]],["option",4]],[[["",0],["documentation",3]],["bool",0]],[[["",0],["attrs",3]],["bool",0]],[[["",0],["attrswithowner",3]],["bool",0]],[[["",0],["attrid",3]],["bool",0]],[[["",0],["attr",3]],["bool",0]],[[["",0],["attrinput",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[],["bool",0]],[[["str",0]],["option",4,[["smolstr",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["attrid",3]],["option",4,[["attr",3]]]],[[["",0]],["bool",0]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["option",4,[["smolstr",3]]]],[[["",0],["textrange",3]],["option",4,[["infile",3,[["textrange",3]]]]]],[[["",0],["documentation",3]],["bool",0]],[[["",0],["attrs",3]],["bool",0]],[[["",0],["attrswithowner",3]],["bool",0]],[[["",0],["attrid",3]],["bool",0]],[[["",0],["attr",3]],["bool",0]],[[["",0],["attrinput",4]],["bool",0]],[[["string",3]]],[[["",0]],["option",4]],[[["",0],["name",3]],["option",4,[["procmacrodef",3]]]],[[["",0]],["modpath",3]],[[["",0]],["option",4,[["ident",3]]]],[[["",0],["defdatabase",8]],["attrsourcemap",3]],[[["",0],["attr",3]],["infile",3,[["either",4]]]],[[],["internstorage",3]],[[["",0]],["option",4,[["smolstr",3]]]],[[],["option",4,[["smolstr",3]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["option",4,[["subtree",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["defdatabase",8]]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["syntheticsyntax",3]],[[["",0],["",0]]],[[["",0]],["hirfileid",3]],null,[[]],[[],["bodysourcemap",3]],[[],["syntheticsyntax",3]],[[["",0]]],[[["",0],["defdatabase",8],["macrocall",3]],["result",4,[["expandresult",6,[["option",4]]],["unresolvedmacro",3]]]],[[["",0],["defdatabase",8],["macrocallid",3]],["expandresult",6,[["option",4]]]],[[["",0],["body",3]],["bool",0]],[[["",0],["bodysourcemap",3]],["bool",0]],[[["",0],["syntheticsyntax",3]],["bool",0]],[[["",0],["bodydiagnostic",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["defdatabase",8],["mark",3]]],[[["",0],["exprid",6]],["result",4,[["exprsource",6],["syntheticsyntax",3]]]],null,[[["",0],["exprid",6]],["infile",3,[["astptr",3,[["recordexprfield",3]]]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["patid",6]]],[[["",0],["exprid",6]],["expr",4]],[[["",0],["patid",6]],["pat",4]],[[["",0],["labelid",6]],["label",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["labelid",6]],["labelsource",6]],null,[[["",0],["infile",3,[["macroexpr",3]]]],["option",4,[["exprid",6]]]],[[["",0],["body",3]],["bool",0]],[[["",0],["bodysourcemap",3]],["bool",0]],[[["",0],["bodydiagnostic",4]],["bool",0]],[[["defdatabase",8],["hirfileid",3]]],[[["defdatabase",8],["hirfileid",3],["moduleid",3]],["expander",3]],[[["",0],["infile",3,[["expr",4]]]],["option",4,[["exprid",6]]]],[[["",0],["infile",3,[["recordexprfield",3]]]],["option",4,[["exprid",6]]]],[[["",0],["infile",3,[["label",3]]]],["option",4,[["labelid",6]]]],[[["",0],["infile",3,[["macrocall",3]]]],["option",4,[["hirfileid",3]]]],[[["",0],["infile",3,[["pat",4]]]],["option",4,[["patid",6]]]],[[["",0],["infile",3,[["selfparam",3]]]],["option",4,[["patid",6]]]],null,null,[[["",0],["patid",6]],["result",4,[["patsource",6],["syntheticsyntax",3]]]],null,[[["",0],["patid",6]],["patid",6]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["defdatabase",8],["hygiene",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["scopeid",6]],["option",4,[["blockid",3]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["scopeid",6]]],[[["",0],["exprscopes",3]],["bool",0]],[[["",0],["scopeentry",3]],["bool",0]],[[["",0],["scopedata",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["scopeid",6]],["option",4]],[[["",0]],["name",3]],[[["",0],["exprscopes",3]],["bool",0]],[[["",0],["scopeentry",3]],["bool",0]],[[["",0],["scopedata",3]],["bool",0]],[[["",0]],["patid",6]],[[["",0],["scopeid",6],["name",3]],["option",4,[["scopeentry",3]]]],[[["",0]],["fxhashmap",6]],[[["",0],["option",4,[["scopeid",6]]]]],[[["",0],["exprid",6]],["option",4,[["scopeid",6]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["attributetemplate",3]],[[["",0],["",0]]],[[["str",0]],["option",4,[["usize",0]]]],[[]],[[]],[[]],[[]],null,null,null,null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["name",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["name",3]],["option",4]],[[["",0]],["builtinint",4]],[[["",0]],["builtinuint",4]],[[["",0]],["builtinfloat",4]],[[["",0]],["builtintype",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["builtinint",4]],["ordering",4]],[[["",0],["builtinuint",4]],["ordering",4]],[[["",0],["builtinfloat",4]],["ordering",4]],[[["",0],["builtinint",4]],["bool",0]],[[["",0],["builtinuint",4]],["bool",0]],[[["",0],["builtinfloat",4]],["bool",0]],[[["",0],["builtintype",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["str",0]],["option",4,[["builtinint",4]]]],[[["str",0]],["option",4,[["builtinuint",4]]]],[[["str",0]],["option",4,[["builtinfloat",4]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[]],[[]],[[]],[[]],[[["",0],["builtintype",4]],["bool",0]],[[["",0],["builtinint",4]],["option",4,[["ordering",4]]]],[[["",0],["builtinuint",4]],["option",4,[["ordering",4]]]],[[["",0],["builtinfloat",4]],["option",4,[["ordering",4]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,[[["",0],["defdatabase",8],["hirfileid",3]],["dynmap",3]],[[["",0],["defdatabase",8],["dynmap",3],["hirfileid",3]]],null,null,null,null,null,null,null,null,null,null,[[["",0],["name",3]],["option",4,[["typealiasid",3]]]],[[["",0]]],null,[[["",0]]],[[["",0]]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0]],["functiondata",3]],[[["",0]],["typealiasdata",3]],[[["",0]],["traitdata",3]],[[["",0]],["impldata",3]],[[["",0]],["macro2data",3]],[[["",0]],["macrorulesdata",3]],[[["",0]],["procmacrodata",3]],[[["",0]],["constdata",3]],[[["",0]],["staticdata",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["functiondata",3]],["bool",0]],[[["",0],["typealiasdata",3]],["bool",0]],[[["",0],["traitdata",3]],["bool",0]],[[["",0],["impldata",3]],["bool",0]],[[["",0],["macro2data",3]],["bool",0]],[[["",0],["macrorulesdata",3]],["bool",0]],[[["",0],["procmacrodata",3]],["bool",0]],[[["",0],["constdata",3]],["bool",0]],[[["",0],["staticdata",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[["",0]],["bool",0]],null,null,null,null,[[["",0],["name",3]],["option",4,[["functionid",3]]]],null,null,null,null,null,null,null,null,null,[[["",0],["functiondata",3]],["bool",0]],[[["",0],["typealiasdata",3]],["bool",0]],[[["",0],["traitdata",3]],["bool",0]],[[["",0],["impldata",3]],["bool",0]],[[["",0],["macro2data",3]],["bool",0]],[[["",0],["macrorulesdata",3]],["bool",0]],[[["",0],["procmacrodata",3]],["bool",0]],[[["",0],["constdata",3]],["bool",0]],[[["",0],["staticdata",3]],["bool",0]],null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["attrdefid",4]],["attrswithowner",3]],null,[[["",0],["blockid",3]],["option",4,[["arc",3,[["defmap",3]]]]]],null,[[["",0],["defwithbodyid",4]],["arc",3,[["body",3]]]],null,[[["",0],["defwithbodyid",4]]],nullconstid",3]],["arc",3,[["constdata",3]]]],null,[[["",0],["constid",3]],["visibility",4]],null,[[["",0],["crateid",3]],["arc",3,[["defmap",3]]]],[[["",0],["crateid",3]],["arc",3,[["defmap",3]]]],null,[[["",0],["crateid",3]],["arc",3,[["langitems",3]]]],null,[[["",0],["crateid",3]],["cratelimits",3]],[[["",0],["crateid",3]],["bool",0]],null,[[],["internfunctionquery",3]],[[],["internfunctionlookupquery",3]],[[],["internstructquery",3]],[[],["internstructlookupquery",3]],[[],["internunionquery",3]],[[],["internunionlookupquery",3]],[[],["internenumquery",3]],[[],["internenumlookupquery",3]],[[],["internconstquery",3]],[[],["internconstlookupquery",3]],[[],["internstaticquery",3]],[[],["internstaticlookupquery",3]],[[],["interntraitquery",3]],[[],["interntraitlookupquery",3]],[[],["interntypealiasquery",3]],[[],["interntypealiaslookupquery",3]],[[],["internimplquery",3]],[[],["internimpllookupquery",3]],[[],["internexternblockquery",3]],[[],["internexternblocklookupquery",3]],[[],["internblockquery",3]],[[],["internblocklookupquery",3]],[[],["internmacro2query",3]],[[],["internmacro2lookupquery",3]],[[],["internprocmacroquery",3]],[[],["internprocmacrolookupquery",3]],[[],["internmacrorulesquery",3]],[[],["internmacroruleslookupquery",3]],[[],["enableprocattrmacrosquery",3]],[[],["fileitemtreequery",3]],[[],["cratedefmapqueryquery",3]],[[],["blockdefmapquery",3]],[[],["structdataquery",3]],[[],["uniondataquery",3]],[[],["enumdataquery",3]],[[],["impldataquery",3]],[[],["traitdataquery",3]],[[],["typealiasdataquery",3]],[[],["functiondataquery",3]],[[],["constdataquery",3]],[[],["staticdataquery",3]],[[],["macro2dataquery",3]],[[],["macrorulesdataquery",3]],[[],["procmacrodataquery",3]],[[],["bodywithsourcemapquery",3]],[[],["bodyquery",3]],[[],["exprscopesquery",3]],[[],["genericparamsquery",3]],[[],["variantsattrsquery",3]],[[],["fieldsattrsquery",3]],[[],["variantsattrssourcemapquery",3]],[[],["fieldsattrssourcemapquery",3]],[[],["attrsquery",3]],[[],["cratelangitemsquery",3]],[[],["langitemquery",3]],[[],["importmapquery",3]],[[],["fieldvisibilitiesquery",3]],[[],["functionvisibilityquery",3]],[[],["constvisibilityquery",3]],[[],["cratesupportsnostdquery",3]],[[["",0]],["bool",0]],null,[[["",0],["enumid",3]],["arc",3,[["enumdata",3]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["defwithbodyid",4]],["arc",3,[["exprscopes",3]]]],null,[[["",0],["variantid",4]],["arc",3,[["arenamap",3,[["localfieldid",6],["visibility",4]]]]]],null,[[["",0],["variantid",4]],["arc",3,[["arenamap",3,[["localfieldid",6],["attrs",3]]]]]],null,[[["",0],["variantid",4]],["arc",3,[["arenamap",3,[["localfieldid",6],["either",4,[["astptr",3,[["tuplefield",3]]],["astptr",3,[["recordfield",3]]]]]]]]]],null,[[["",0],["hirfileid",3]],["arc",3,[["itemtree",3]]]],null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["interndatabase",8],["databasekeyindex",3],["formatter",3]],["result",6]],[[["",0],["defdatabase",8],["databasekeyindex",3],["formatter",3]],["result",6]],[[["",0],["runtime",3],["fnmut",8]]],[[["",0],["runtime",3],["fnmut",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["functionid",3]],["arc",3,[["functiondata",3]]]],null,[[["",0],["functionid",3]],["visibility",4]],null,[[["",0],["genericdefid",4]],["interned",3,[["genericparams",3]]]],null,[[["",0],["implid",3]],["arc",3,[["impldata",3]]]],null,[[["",0],["crateid",3]],["arc",3,[["importmap",3]]]],null,[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["defdatabase",8]],["querytable",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["interndatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["defdatabase",8]],["querytablemut",3]],[[["",0],["blockloc",3]],["blockid",3]],null,[[["",0],["associtemloc",3,[["const",3]]]],["constid",3]],null,[[["",0],["enumloc",6]],["enumid",3]],null,[[["",0],["itemloc",3,[["externblock",3]]]],["externblockid",3]],null,[[["",0],["associtemloc",3,[["function",3]]]],["functionid",3]],null,[[["",0],["itemloc",3,[["impl",3]]]],["implid",3]],null,[[["",0],["macro2loc",3]],["macro2id",3]],null,[[["",0],["macrorulesloc",3]],["macrorulesid",3]],null,[[["",0],["procmacroloc",3]],["procmacroid",3]],null,[[["",0],["staticloc",6]],["staticid",3]],null,[[["",0],["itemloc",3,[["struct",3]]]],["structid",3]],null,[[["",0],["traitloc",6]],["traitid",3]],null,[[["",0],["associtemloc",3,[["typealias",3]]]],["typealiasid",3]],null,[[["",0],["unionloc",6]],["unionid",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["crateid",3],["smolstr",3]],["option",4,[["langitemtarget",4]]]],null,[[["",0],["blockid",3]],["blockloc",3]],null,[[["",0],["constid",3]],["associtemloc",3,[["const",3]]]],null,[[["",0],["enumid",3]],["enumloc",6]],null,[[["",0],["externblockid",3]],["itemloc",3,[["externblock",3]]]],null,[[["",0],["functionid",3]],["associtemloc",3,[["function",3]]]],null,[[["",0],["implid",3]],["itemloc",3,[["impl",3]]]],null,[[["",0],["macro2id",3]],["macro2loc",3]],null,[[["",0],["macrorulesid",3]],["macrorulesloc",3]],null,[[["",0],["procmacroid",3]],["procmacroloc",3]],null,[[["",0],["staticid",3]],["staticloc",6]],null,[[["",0],["structid",3]],["itemloc",3,[["struct",3]]]],null,[[["",0],["traitid",3]],["traitloc",6]],null,[[["",0],["typealiasid",3]],["associtemloc",3,[["typealias",3]]]],null,[[["",0],["unionid",3]],["unionloc",6]],null,[[["",0],["macro2id",3]],["arc",3,[["macro2data",3]]]],null,[[["",0],["macrorulesid",3]],["arc",3,[["macrorulesdata",3]]]],null,[[["",0],["interndatabase",8],["databasekeyindex",3],["revision",3]],["bool",0]],[[["",0],["defdatabase",8],["databasekeyindex",3],["revision",3]],["bool",0]],[[["u16",0]]],[[["u16",0]]],[[["",0],["procmacroid",3]],["arc",3,[["procmacrodata",3]]]],null,[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],null,[[["",0],["bool",0]]],[[["",0],["bool",0],["durability",3]]],[[["",0],["staticid",3]],["arc",3,[["staticdata",3]]]],null,[[["",0],["structid",3]],["arc",3,[["structdata",3]]]],null,[[["",0],["traitid",3]],["arc",3,[["traitdata",3]]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0],["typealiasid",3]],["arc",3,[["typealiasdata",3]]]],null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["unionid",3]],["arc",3,[["structdata",3]]]],null,[[["",0],["enumid",3]],["arc",3,[["arenamap",3,[["localenumvariantid",6],["attrs",3]]]]]],null,[[["",0],["enumid",3]],["arc",3,[["arenamap",3,[["localenumvariantid",6],["astptr",3,[["variant",3]]]]]]]],null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["key",3]],[[["",0],["",0]]],[[]],[[]],[[]],[[]],[[["dynmap",3]],["option",4]],[[["",0]],["option",4]],[[["",0],["key",3]]],[[["",0],["key",3]]],[[["dynmap",3]]],[[["",0]]],[[]],[[]],[[]],[[["dynmap",3]],["bool",0]],[[["",0]],["bool",0]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullrangeop",4]],[[["",0]],["unaryop",4]],[[["",0]],["binaryop",4]],[[["",0]],["logicop",4]],[[["",0]],["cmpop",4]],[[["",0]],["ordering",4]],[[["",0]],["arithop",4]],[[["",0]],["label",3]],[[["",0]],["floattypewrapper",3]],[[["",0]],["literal",4]],[[["",0]],["expr",4]],[[["",0]],["array",4]],[[["",0]],["matcharm",3]],[[["",0]],["recordlitfield",3]],[[["",0]],["statement",4]],[[["",0]],["bindingannotation",4]],[[["",0]],["recordfieldpat",3]],[[["",0]],["pat",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["floattypewrapper",3]],[[["",0],["rangeop",4]],["bool",0]],[[["",0],["unaryop",4]],["bool",0]],[[["",0],["binaryop",4]],["bool",0]],[[["",0],["logicop",4]],["bool",0]],[[["",0],["cmpop",4]],["bool",0]],[[["",0],["ordering",4]],["bool",0]],[[["",0],["arithop",4]],["bool",0]],[[["",0],["label",3]],["bool",0]],[[["",0],["floattypewrapper",3]],["bool",0]],[[["",0],["literal",4]],["bool",0]],[[["",0],["expr",4]],["bool",0]],[[["",0],["array",4]],["bool",0]],[[["",0],["matcharm",3]],["bool",0]],[[["",0],["recordlitfield",3]],["bool",0]],[[["",0],["statement",4]],["bool",0]],[[["",0],["bindingannotation",4]],["bool",0]],[[["",0],["recordfieldpat",3]],["bool",0]],[[["",0],["pat",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],null,null,[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["literalkind",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["",0],["binaryop",4]],["bool",0]],[[["",0],["cmpop",4]],["bool",0]],[[["",0],["label",3]],["bool",0]],[[["",0],["floattypewrapper",3]],["bool",0]],[[["",0],["literal",4]],["bool",0]],[[["",0],["expr",4]],["bool",0]],[[["",0],["array",4]],["bool",0]],[[["",0],["matcharm",3]],["bool",0]],[[["",0],["recordlitfield",3]],["bool",0]],[[["",0],["statement",4]],["bool",0]],[[["",0],["recordfieldpat",3]],["bool",0]],[[["",0],["pat",4]],["bool",0]],[[["f64",0]]],[[["bool",0],["bool",0]]],null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]]],[[["",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["prefixkind",4]],[[["",0],["",0]]],[[["",0],["prefixkind",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["defdatabase",8],["iteminns",4],["moduleid",3]],["option",4,[["modpath",3]]]],[[["defdatabase",8],["iteminns",4],["moduleid",3],["prefixkind",4]],["option",4,[["modpath",3]]]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["typeparamdata",3]],[[["",0]],["lifetimeparamdata",3]],[[["",0]],["constparamdata",3]],[[["",0]],["typeparamprovenance",4]],[[["",0]],["typeorconstparamdata",4]],[[["",0]],["genericparams",3]],[[["",0]],["wherepredicate",4]],[[["",0]],["wherepredicatetypetarget",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0]],["option",4,[["constparamdata",3]]]],[[],["genericparams",3]],null,[[["",0],["typeparamdata",3]],["bool",0]],[[["",0],["lifetimeparamdata",3]],["bool",0]],[[["",0],["constparamdata",3]],["bool",0]],[[["",0],["typeparamprovenance",4]],["bool",0]],[[["",0],["typeorconstparamdata",4]],["bool",0]],[[["",0],["genericparams",3]],["bool",0]],[[["",0],["wherepredicate",4]],["bool",0]],[[["",0],["wherepredicatetypetarget",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["name",3],["genericdefid",4]],["option",4,[["constparamid",3]]]],[[["",0]],["option",4,[["localtypeorconstparamid",6]]]],[[["",0],["name",3],["genericdefid",4]],["option",4,[["typeparamid",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["typeparamdata",3]],["typeorconstparamdata",4]],[[]],[[["constparamdata",3]],["typeorconstparamdata",4]],[[]],[[]],[[]],[[["",0]],["bool",0]],null,[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]]],null,[[["",0]],["option",4,[["name",3]]]],null,null,null,[[["",0],["typeparamdata",3]],["bool",0]],[[["",0],["lifetimeparamdata",3]],["bool",0]],[[["",0],["constparamdata",3]],["bool",0]],[[["",0],["typeorconstparamdata",4]],["bool",0]],[[["",0],["genericparams",3]],["bool",0]],[[["",0],["wherepredicate",4]],["bool",0]],[[["",0],["wherepredicatetypetarget",4]],["bool",0]],null,[[],["internstorage",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0]],["option",4,[["typeparamdata",3]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["",0]],["importinfo",3]],[[["",0]],["importpath",3]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[],["importmap",3]],[[["",0],["importinfo",3]],["bool",0]],[[["",0],["importpath",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["importkind",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["importkind",4]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["",0]]],[[["",0],["iteminns",4]],["option",4,[["importinfo",3]]]],[[["defdatabase",8],["crateid",3]],["arc",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["usize",0]]],[[]],[[["",0],["importinfo",3]],["bool",0]],[[["",0],["importpath",3]],["bool",0]],[[["string",3]]],null,[[["",0],["iteminns",4]],["option",4,[["importpath",3]]]],[[["defdatabase",8],["crateid",3],["query",3]],["fxhashset",6,[["iteminns",4]]]],[[["searchmode",4]]],null,[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0],["",0]]],[[["",0]]],[[["",0]]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0],["",0]]],null,[[]],[[]],[[]],[[]],[[["str",0]]],[[],["internstorage",3]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,[[],["option",4,[["moduledefid",4]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["defdatabase",8],["dynmap",3],["hirfileid",3]]],[[["",0]],["iteminns",4]],[[["",0],["",0]]],[[["",0]]],[[],["pernsglobimports",3]],[[],["itemscope",3]],[[["",0]]],[[["",0],["itemscope",3]],["bool",0]],[[["",0],["iteminns",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["",0],["",0]]],[[["",0]]],[[]],[[]],[[]],[[["",0],["defdatabase",8]],["option",4,[["crateid",3]]]],[[["",0]]],[[["",0],["itemscope",3]],["bool",0]],[[["",0],["iteminns",4]],["bool",0]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]]],[[["",0]]],[[["",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["option",4,[["associtem",4]]]],[[["",0]],["fileastid",3]],[[["",0],["itemtree",3]],["fileastid",3,[["item",4]]]],[[["",0]],["fileastid",3]],[[["",0]],["fileastid",3]],[[["",0]],["fileastid",3]],[[["",0]],["fileastid",3]],[[["",0]],["fileastid",3]],[[["",0]],["fileastid",3]],[[["",0]],["fileastid",3]],[[["",0]],["fileastid",3]],[[["",0]],["fileastid",3]],[[["",0]],["fileastid",3]],[[["",0]],["fileastid",3]],[[["",0]],["fileastid",3]],[[["",0]],["fileastid",3]],[[["",0]],["fileastid",3]],[[["",0]],["fileastid",3]],[[["",0]],["fileastid",3]],[[["itemtree",3]],["fileastid",3,[["associtem",4]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,null,[[["",0]]],[[["",0]],["rawvisibilityid",3]],[[["",0]],["treeid",3]],[[["",0]]],[[["",0]],["moditem",4]],[[["",0]],["import",3]],[[["",0]],["usetree",3]],[[["",0]],["usetreekind",4]],[[["",0]],["externcrate",3]],[[["",0]],["externblock",3]],[[["",0]],["function",3]],[[["",0]],["param",4]],[[["",0]],["struct",3]],[[["",0]],["union",3]],[[["",0]],["enum",3]],[[["",0]],["const",3]],[[["",0]],["static",3]],[[["",0]],["trait",3]],[[["",0]],["impl",3]],[[["",0]],["typealias",3]],[[["",0]],["mod",3]],[[["",0]],["modkind",4]],[[["",0]],["macrocall",3]],[[["",0]],["macrorules",3]],[[["",0]],["macrodef",3]],[[["",0]],["importkind",4]],[[["",0]],["associtem",4]],[[["",0]],["fields",4]],[[["",0]],["fielditemtree",3]],[[],["option",4,[["fileitemtreeid",3,[["itemtreenode",8]]]]]],[[["",0],["fileitemtreeid",3]],["bool",0]],[[["",0],["rawvisibilityid",3]],["bool",0]],[[["",0],["itemtree",3]],["bool",0]],[[["",0],["attrowner",4]],["bool",0]],[[["",0],["treeid",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["moditem",4]],["bool",0]],[[["",0],["import",3]],["bool",0]],[[["",0],["usetree",3]],["bool",0]],[[["",0],["usetreekind",4]],["bool",0]],[[["",0],["externcrate",3]],["bool",0]],[[["",0],["externblock",3]],["bool",0]],[[["",0],["function",3]],["bool",0]],[[["",0],["param",4]],["bool",0]],[[["",0],["struct",3]],["bool",0]],[[["",0],["union",3]],["bool",0]],[[["",0],["enum",3]],["bool",0]],[[["",0],["const",3]],["bool",0]],[[["",0],["static",3]],["bool",0]],[[["",0],["trait",3]],["bool",0]],[[["",0],["impl",3]],["bool",0]],[[["",0],["typealias",3]],["bool",0]],[[["",0],["mod",3]],["bool",0]],[[["",0],["modkind",4]],["bool",0]],[[["",0],["macrocall",3]],["bool",0]],[[["",0],["macrorules",3]],["bool",0]],[[["",0],["macrodef",3]],["bool",0]],[[["",0],["importkind",4]],["bool",0]],[[["",0],["associtem",4]],["bool",0]],[[["",0],["variant",3]],["bool",0]],[[["",0],["fields",4]],["bool",0]],[[["",0],["field",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0]]],null,null,null,null,null,[[],["hirfileid",3]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["moditem",4]],["attrowner",4]],[[["idx",3,[["param",4]]]],["attrowner",4]],[[["idx",3,[["field",3]]]],["attrowner",4]],[[]],[[["idx",3,[["variant",3]]]],["attrowner",4]],[[]],[[]],[[["fileitemtreeid",3,[["externcrate",3]]]],["moditem",4]],[[["fileitemtreeid",3,[["trait",3]]]],["moditem",4]],[[["fileitemtreeid",3,[["const",3]]]],["moditem",4]],[[["fileitemtreeid",3,[["import",3]]]],["moditem",4]],[[]],[[["fileitemtreeid",3,[["externblock",3]]]],["moditem",4]],[[["fileitemtreeid",3,[["function",3]]]],["moditem",4]],[[["fileitemtreeid",3,[["struct",3]]]],["moditem",4]],[[["fileitemtreeid",3,[["union",3]]]],["moditem",4]],[[["fileitemtreeid",3,[["macrocall",3]]]],["moditem",4]],[[["fileitemtreeid",3,[["macrodef",3]]]],["moditem",4]],[[["fileitemtreeid",3,[["macrorules",3]]]],["moditem",4]],[[["fileitemtreeid",3,[["enum",3]]]],["moditem",4]],[[["fileitemtreeid",3,[["mod",3]]]],["moditem",4]],[[["fileitemtreeid",3,[["typealias",3]]]],["moditem",4]],[[["fileitemtreeid",3,[["static",3]]]],["moditem",4]],[[["associtem",4]]],[[["fileitemtreeid",3,[["impl",3]]]],["moditem",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["fileitemtreeid",3,[["function",3]]]],["associtem",4]],[[["fileitemtreeid",3,[["typealias",3]]]],["associtem",4]],[[["fileitemtreeid",3,[["const",3]]]],["associtem",4]],[[["fileitemtreeid",3,[["macrocall",3]]]],["associtem",4]],[[]],[[]],[[]],null,null,null,null,null,null,[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["moditem",4]],["option",4,[["fileitemtreeid",3]]]],[[["moditem",4]],["option",4,[["fileitemtreeid",3]]]],[[["moditem",4]],["option",4,[["fileitemtreeid",3]]]],[[["moditem",4]],["option",4,[["fileitemtreeid",3]]]],[[["moditem",4]],["option",4,[["fileitemtreeid",3]]]],[[["moditem",4]],["option",4,[["fileitemtreeid",3]]]],[[["moditem",4]],["option",4,[["fileitemtreeid",3]]]],[[["moditem",4]],["option",4,[["fileitemtreeid",3]]]],[[["moditem",4]],["option",4,[["fileitemtreeid",3]]]],[[["moditem",4]],["option",4,[["fileitemtreeid",3]]]],[[["moditem",4]],["option",4,[["fileitemtreeid",3]]]],[[["moditem",4]],["option",4,[["fileitemtreeid",3]]]],[[["moditem",4]],["option",4,[["fileitemtreeid",3]]]],[[["moditem",4]],["option",4,[["fileitemtreeid",3]]]],[[["moditem",4]],["option",4,[["fileitemtreeid",3]]]],[[["moditem",4]],["option",4,[["fileitemtreeid",3]]]],[[["moditem",4]],["option",4,[["fileitemtreeid",3]]]],[[["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3]],["moditem",4]],[[["fileitemtreeid",3]],["moditem",4]],[[["",0],["idx",3,[["mod",3]]]]],[[["",0],["idx",3,[["externcrate",3]]]]],[[["",0],["idx",3,[["const",3]]]]],[[["",0],["idx",3,[["enum",3]]]]],[[["",0],["fileitemtreeid",3]],["",0]],[[["",0],["idx",3,[["impl",3]]]]],[[["",0],["idx",3,[["union",3]]]]],[[["",0],["idx",3,[["struct",3]]]]],[[["",0],["idx",3,[["macrocall",3]]]]],[[["",0],["idx",3,[["typealias",3]]]]],[[["",0],["idx",3,[["function",3]]]]],[[["",0],["rawvisibilityid",3]]],[[["",0],["idx",3,[["import",3]]]]],[[["",0],["idx",3,[["externblock",3]]]]],[[["",0],["idx",3,[["param",4]]]]],[[["",0],["idx",3,[["trait",3]]]]],[[["",0],["idx",3,[["static",3]]]]],[[["",0],["idx",3,[["variant",3]]]]],[[["",0],["idx",3,[["field",3]]]]],[[["",0],["idx",3,[["macrodef",3]]]]],[[["",0],["idx",3,[["macrorules",3]]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["defdatabase",8]],["arc",3,[["itemtree",3]]]],null,null,null,[[["itemtree",3],["idx",3]],["",0]],[[["itemtree",3],["idx",3]],["",0]],[[["itemtree",3],["idx",3]],["",0]],[[["itemtree",3],["idx",3]],["",0]],[[["itemtree",3],["idx",3]],["",0]],[[["itemtree",3],["idx",3]],["",0]],[[["itemtree",3],["idx",3]],["",0]],[[["itemtree",3],["idx",3]],["",0]],[[["itemtree",3],["idx",3]],["",0]],[[["itemtree",3],["idx",3]],["",0]],[[["itemtree",3],["idx",3]],["",0]],[[["itemtree",3],["idx",3]],["",0]],[[["itemtree",3],["idx",3]],["",0]],[[["itemtree",3],["idx",3]],["",0]],[[["itemtree",3],["idx",3]],["",0]],[[["itemtree",3],["idx",3]],["",0]],[[["itemtree",3],["idx",3]],["",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["rawvisibilityid",3]],["bool",0]],[[["",0],["itemtree",3]],["bool",0]],[[["",0],["attrowner",4]],["bool",0]],[[["",0],["treeid",3]],["bool",0]],[[["",0],["moditem",4]],["bool",0]],[[["",0],["import",3]],["bool",0]],[[["",0],["usetree",3]],["bool",0]],[[["",0],["usetreekind",4]],["bool",0]],[[["",0],["externcrate",3]],["bool",0]],[[["",0],["externblock",3]],["bool",0]],[[["",0],["function",3]],["bool",0]],[[["",0],["param",4]],["bool",0]],[[["",0],["struct",3]],["bool",0]],[[["",0],["union",3]],["bool",0]],[[["",0],["enum",3]],["bool",0]],[[["",0],["const",3]],["bool",0]],[[["",0],["static",3]],["bool",0]],[[["",0],["trait",3]],["bool",0]],[[["",0],["impl",3]],["bool",0]],[[["",0],["typealias",3]],["bool",0]],[[["",0],["mod",3]],["bool",0]],[[["",0],["modkind",4]],["bool",0]],[[["",0],["macrocall",3]],["bool",0]],[[["",0],["macrorules",3]],["bool",0]],[[["",0],["macrodef",3]],["bool",0]],[[["",0],["associtem",4]],["bool",0]],[[["",0],["variant",3]],["bool",0]],[[["",0],["fields",4]],["bool",0]],[[["",0],["field",3]],["bool",0]],[[["treeid",3],["fileitemtreeid",3]]],null,null,[[["",0]],["string",3]],null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0],["defdatabase",8],["crateid",3]],["attrs",3]],[[["",0]]],[[],["treeid",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,[[["",0],["defdatabase",8],["hirfileid",3],["idx",3,[["usetree",3]]]],["usetree",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[["dynmap",3],["",0]],["option",4]],[[["dynmap",3]]],[[]],[[["dynmap",3]],["bool",0]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,[[],["option",4,[["enumid",3]]]],[[],["option",4,[["enumvariantid",3]]]],[[],["option",4,[["functionid",3]]]],[[],["option",4,[["implid",3]]]],[[],["option",4,[["staticid",3]]]],[[],["option",4,[["structid",3]]]],[[],["option",4,[["traitid",3]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["langitemtarget",4]],[[["",0]],["langitems",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["langitems",3]],[[["",0],["langitemtarget",4]],["bool",0]],[[["",0],["langitems",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0],["",0]]],[[]],[[]],[[["defdatabase",8]],["option",4,[["smolstr",3]]]],[[["",0],["langitemtarget",4]],["bool",0]],[[["",0],["langitems",3]],["bool",0]],[[["",0],["str",0]],["option",4,[["langitemtarget",4]]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0]],["moduleorigin",4]],[[["",0]],["modulesource",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["localmoduleid",6]],["option",4,[["moduleid",3]]]],[[["",0]],["option",4,[["astid",6,[["module",3]]]]]],[[["",0],["defdatabase",8]],["option",4,[["infile",3,[["module",3]]]]]],[[["",0],["defdatabase",8]],["infile",3,[["modulesource",4]]]],null,[[["",0]]],[[["",0],["defdatabase",8]],["string",3]],[[["",0],["defdatabase",8]],["string",3]],[[["",0],["defmap",3]],["bool",0]],[[["",0],["moduleorigin",4]],["bool",0]],[[["",0],["moduledata",3]],["bool",0]],[[["",0],["modulesource",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0]],["option",4,[["fileid",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["functionid",3]],["option",4,[["procmacroid",3]]]],[[]],[[]],[[]],[[]],[[["",0],["",0]]],[[["",0],["localmoduleid",6]],["moduledata",3]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0],["localmoduleid",6]],["moduleid",3]],[[["",0]]],[[["",0],["fileid",3]]],[[["",0],["defmap",3]],["bool",0]],[[["",0],["moduleorigin",4]],["bool",0]],[[["",0],["moduledata",3]],["bool",0]],[[["",0],["modulesource",4]],["bool",0]],null,[[["",0]],["option",4,[["moduleid",3]]]],null,[[["",0]],["option",4,[["str",0]]]],[[["",0]],["option",4,[["u32",0]]]],[[["",0]]],[[["",0]]],[[["",0]],["localmoduleid",6]],null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0],["defdatabase",8],["localmoduleid",6],["fnmut",8]],["option",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["defdiagnostickind",4]],["bool",0]],[[["",0],["defdiagnostic",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],null,[[]],[[]],null,[[["",0],["defdiagnostickind",4]],["bool",0]],[[["",0],["defdiagnostic",3]],["bool",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["option",4,[["name",3]]]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0]],["modpath",3]],[[["",0]],["pathkind",4]],[[["",0]],["importalias",4]],[[["",0]],["path",3]],[[["",0]],["genericargs",3]],[[["",0]],["associatedtypebinding",3]],[[["",0]],["genericarg",4]],[[["",0]],["pathsegment",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["modpath",3]],["ordering",4]],[[["",0],["pathkind",4]],["ordering",4]],null,[[["",0],["modpath",3]],["bool",0]],[[["",0],["pathkind",4]],["bool",0]],[[["",0],["importalias",4]],["bool",0]],[[["",0],["path",3]],["bool",0]],[[["",0],["genericargs",3]],["bool",0]],[[["",0],["associatedtypebinding",3]],["bool",0]],[[["",0],["genericarg",4]],["bool",0]],[[["",0],["pathsegment",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0]],["escapedmodpath",3]],[[["",0]],["option",4,[["pathsegment",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[["name",3]],["modpath",3]],[[]],[[]],[[]],[[["name",3]],["path",3]],[[]],[[]],[[]],[[]],[[]],[[["pathkind",4]],["modpath",3]],[[["modpath",3]],["path",3]],[[["pathkind",4]],["modpath",3]],[[["astdatabase",8],["path",3],["hygiene",3]],["option",4,[["modpath",3]]]],[[["path",3],["lowerctx",3]],["option",4,[["path",3]]]],[[["",0],["usize",0]],["option",4,[["pathsegment",3]]]],null,[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]]],[[["",0]],["pathkind",4]],null,[[["",0]],["option",4,[["pathsegment",3]]]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["modpath",3]],null,null,[[["",0],["modpath",3]],["bool",0]],[[["",0],["pathkind",4]],["bool",0]],[[["",0],["importalias",4]],["bool",0]],[[["",0],["path",3]],["bool",0]],[[["",0],["genericargs",3]],["bool",0]],[[["",0],["associatedtypebinding",3]],["bool",0]],[[["",0],["genericarg",4]],["bool",0]],[[["",0],["pathsegment",3]],["bool",0]],[[["",0],["modpath",3]],["option",4,[["ordering",4]]]],[[["",0],["pathkind",4]],["option",4,[["ordering",4]]]],null,[[["",0]],["option",4,[["name",3]]]],[[["",0],["name",3]]],[[["",0]],["option",4,[["path",3]]]],[[["",0]]],[[["",0]],["pathsegments",3]],[[["",0],["usize",0]],["pathsegments",3]],[[],["internstorage",3]],[[],["internstorage",3]],[[["",0],["usize",0]],["pathsegments",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["option",4,[["typeref",4]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["moduledefid",4],["moduledefid",4],["visibility",4]],["perns",3]],[[["",0]],["perns",3]],[[["",0],["",0]]],[[]],[[["",0],["perns",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[],["perns",3]],[[["",0],["formatter",3]],["result",6]],[[]],[[["",0],["",0]]],[[]],[[["",0]],["bool",0]],[[]],[[["macroid",4],["visibility",4]],["perns",3]],null,[[["",0],["perns",3]],["bool",0]],[[],["perns",3]],[[["perns",3]],["perns",3]],[[],["option",4,[["macroid",4]]]],[[],["option",4,[["moduledefid",4]]]],[[],["option",4]],[[],["option",4,[["moduledefid",4]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["moduledefid",4],["visibility",4]],["perns",3]],null,[[["moduledefid",4],["visibility",4]],["perns",3]],null,[[["visibility",4]],["perns",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["option",4,[["defwithbodyid",4]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["resolver",3]],[[["",0]],["typens",4]],[[["",0]],["resolvevalueresult",4]],[[["",0]],["valuens",4]],[[["",0]],["scopedef",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["typens",4]],["bool",0]],[[["",0],["resolvevalueresult",4]],["bool",0]],[[["",0],["valuens",4]],["bool",0]],[[["",0],["scopedef",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["option",4,[["genericdefid",4]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["crateid",3]],[[["",0]],["moduleid",3]],[[["",0],["defdatabase",8]],["indexmap",3,[["name",3],["smallvec",3],["buildhasherdefault",3,[["fxhasher",3]]]]]],[[["",0],["typens",4]],["bool",0]],[[["",0],["resolvevalueresult",4]],["bool",0]],[[["",0],["valuens",4]],["bool",0]],[[["",0],["scopedef",4]],["bool",0]],[[["",0],["defdatabase",8],["modpath",3]],["option",4,[["enumid",3]]]],[[["",0],["defdatabase",8],["modpath",3]],["option",4,[["structid",3]]]],[[["",0],["defdatabase",8],["modpath",3]],["option",4,[["traitid",3]]]],[[["",0],["defdatabase",8],["modpath",3]],["perns",3]],[[["",0],["defdatabase",8],["modpath",3]],["option",4,[["perns",3]]]],[[["",0],["defdatabase",8],["modpath",3]],["option",4,[["macroid",4]]]],[[["",0],["defdatabase",8],["modpath",3]],["option",4]],[[["",0],["defdatabase",8],["modpath",3]],["option",4,[["typens",4]]]],[[["",0],["defdatabase",8],["modpath",3]],["option",4,[["resolvevalueresult",4]]]],[[["",0],["defdatabase",8],["modpath",3]],["option",4,[["valuens",4]]]],[[["",0],["defdatabase",8],["rawvisibility",4]],["option",4,[["visibility",4]]]],[[["defdatabase",8]],["resolver",3]],[[["defdatabase",8],["defwithbodyid",4],["exprid",6]],["resolver",3]],[[["defdatabase",8],["defwithbodyid",4],["option",4,[["scopeid",6]]]],["resolver",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0],["defdatabase",8]],["fxhashset",6,[["traitid",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["defdatabase",8]],["infile",3,[["arenamap",3]]]],[[["",0],["defdatabase",8]],["infile",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["str",0]],[[],["str",0]],[[["",0]],["option",4]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["builtintype",4]],[[["",0]],["mutability",4]],[[["",0]],["rawness",4]],[[["",0]],["traitref",3]],[[["",0]],["typeref",4]],[[["",0]],["lifetimeref",3]],[[["",0]],["typebound",4]],[[["",0]],["traitboundmodifier",4]],[[["",0]],["constscalarorpath",4]],[[["",0]],["constscalar",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["mutability",4]],["bool",0]],[[["",0],["rawness",4]],["bool",0]],[[["",0],["traitref",3]],["bool",0]],[[["",0],["typeref",4]],["bool",0]],[[["",0],["lifetimeref",3]],["bool",0]],[[["",0],["typebound",4]],["bool",0]],[[["",0],["traitboundmodifier",4]],["bool",0]],[[["",0],["constscalarorpath",4]],["bool",0]],[[["",0],["constscalar",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["literal",4]]],[[]],[[["lowerctx",3],["type",4]]],[[["bool",0]],["mutability",4]],[[["bool",0]],["rawness",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[],["lifetimeref",3]],null,[[["",0],["traitref",3]],["bool",0]],[[["",0],["typeref",4]],["bool",0]],[[["",0],["lifetimeref",3]],["bool",0]],[[["",0],["typebound",4]],["bool",0]],[[["",0],["constscalarorpath",4]],["bool",0]],[[["",0],["constscalar",4]],["bool",0]],null,[[],["internstorage",3]],[[],["internstorage",3]],[[],["internstorage",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["rawvisibility",4]],[[["",0]],["visibility",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["rawvisibility",4]],["bool",0]],[[["",0],["visibility",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0],["",0]]],[[]],[[]],[[["defdatabase",8],["moduleid",3]],["bool",0]],[[["",0],["rawvisibility",4]],["bool",0]],[[["",0],["visibility",4]],["bool",0]],[[["",0],["defdatabase",8],["resolver",3]],["visibility",4]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null],"p":[[4,"ModuleDefId"],[4,"GenericDefId"],[4,"AttrDefId"],[4,"MacroExpander"],[4,"DefWithBodyId"],[4,"AssocItemId"],[4,"GenericParamId"],[8,"Lookup"],[4,"AdtId"],[4,"VariantId"],[4,"ItemContainerId"],[4,"MacroId"],[8,"AsMacroCall"],[3,"FunctionId"],[3,"StructId"],[3,"UnionId"],[3,"EnumId"],[3,"ConstId"],[3,"StaticId"],[3,"TraitId"],[3,"TypeAliasId"],[3,"ImplId"],[3,"ExternBlockId"],[3,"Macro2Id"],[3,"MacroRulesId"],[3,"ProcMacroId"],[3,"BlockId"],[3,"ModuleId"],[3,"ItemLoc"],[3,"AssocItemLoc"],[3,"EnumVariantId"],[3,"FieldId"],[3,"Macro2Loc"],[3,"MacroRulesLoc"],[3,"ProcMacroLoc"],[3,"BlockLoc"],[3,"TypeOrConstParamId"],[3,"TypeParamId"],[3,"ConstParamId"],[3,"LifetimeParamId"],[8,"HasModule"],[13,"StructId"],[13,"UnionId"],[13,"EnumId"],[13,"FunctionId"],[13,"ConstId"],[13,"TypeAliasId"],[13,"ModuleId"],[13,"FieldId"],[13,"AdtId"],[13,"FunctionId"],[13,"EnumVariantId"],[13,"StaticId"],[13,"ConstId"],[13,"TraitId"],[13,"TypeAliasId"],[13,"MacroId"],[13,"ImplId"],[13,"GenericParamId"],[13,"ExternBlockId"],[13,"FunctionId"],[13,"StaticId"],[13,"ConstId"],[13,"FunctionId"],[13,"AdtId"],[13,"TraitId"],[13,"TypeAliasId"],[13,"ImplId"],[13,"EnumVariantId"],[13,"ConstId"],[13,"TypeParamId"],[13,"ConstParamId"],[13,"LifetimeParamId"],[13,"ExternBlockId"],[13,"ModuleId"],[13,"ImplId"],[13,"TraitId"],[13,"BuiltIn"],[13,"BuiltInAttr"],[13,"BuiltInDerive"],[13,"BuiltInEager"],[13,"Macro2Id"],[13,"MacroRulesId"],[13,"ProcMacroId"],[13,"ModuleId"],[13,"FunctionId"],[13,"AdtId"],[13,"EnumVariantId"],[13,"ConstId"],[13,"StaticId"],[13,"TraitId"],[13,"TypeAliasId"],[13,"BuiltinType"],[13,"MacroId"],[13,"EnumVariantId"],[13,"StructId"],[13,"UnionId"],[4,"ReprKind"],[4,"VariantData"],[4,"StructKind"],[3,"StructData"],[3,"EnumData"],[3,"EnumVariantData"],[3,"FieldData"],[13,"Record"],[13,"Tuple"],[3,"Attrs"],[4,"AttrInput"],[3,"Documentation"],[3,"AttrQuery"],[3,"AttrsWithOwner"],[3,"AttrSourceMap"],[3,"DocsRangeMap"],[3,"AttrId"],[3,"Attr"],[13,"Literal"],[13,"TokenTree"],[4,"BodyDiagnostic"],[3,"Body"],[3,"LowerCtx"],[3,"Expander"],[3,"Mark"],[3,"BodySourceMap"],[3,"SyntheticSyntax"],[13,"InactiveCode"],[13,"UnresolvedProcMacro"],[13,"MacroError"],[13,"UnresolvedMacroCall"],[3,"ExprScopes"],[3,"ScopeEntry"],[3,"ScopeData"],[3,"BuiltinAttribute"],[3,"AttributeTemplate"],[4,"BuiltinType"],[4,"BuiltinFloat"],[4,"BuiltinInt"],[4,"BuiltinUint"],[13,"Int"],[13,"Uint"],[13,"Float"],[8,"ChildBySource"],[3,"FunctionData"],[3,"TraitData"],[3,"ImplData"],[3,"TypeAliasData"],[3,"Macro2Data"],[3,"MacroRulesData"],[3,"ProcMacroData"],[3,"ConstData"],[3,"StaticData"],[8,"DefDatabase"],[3,"DefDatabaseGroupStorage__"],[3,"CrateLimits"],[3,"InternDatabaseStorage"],[3,"InternDatabaseGroupStorage__"],[3,"InternFunctionQuery"],[3,"InternFunctionLookupQuery"],[3,"InternStructQuery"],[3,"InternStructLookupQuery"],[3,"InternUnionQuery"],[3,"InternUnionLookupQuery"],[3,"InternEnumQuery"],[3,"InternEnumLookupQuery"],[3,"InternConstQuery"],[3,"InternConstLookupQuery"],[3,"InternStaticQuery"],[3,"InternStaticLookupQuery"],[3,"InternTraitQuery"],[3,"InternTraitLookupQuery"],[3,"InternTypeAliasQuery"],[3,"InternTypeAliasLookupQuery"],[3,"InternImplQuery"],[3,"InternImplLookupQuery"],[3,"InternExternBlockQuery"],[3,"InternExternBlockLookupQuery"],[3,"InternBlockQuery"],[3,"InternBlockLookupQuery"],[3,"InternMacro2Query"],[3,"InternMacro2LookupQuery"],[3,"InternProcMacroQuery"],[3,"InternProcMacroLookupQuery"],[3,"InternMacroRulesQuery"],[3,"InternMacroRulesLookupQuery"],[3,"DefDatabaseStorage"],[3,"EnableProcAttrMacrosQuery"],[3,"FileItemTreeQuery"],[3,"CrateDefMapQueryQuery"],[3,"BlockDefMapQuery"],[3,"StructDataQuery"],[3,"UnionDataQuery"],[3,"EnumDataQuery"],[3,"ImplDataQuery"],[3,"TraitDataQuery"],[3,"TypeAliasDataQuery"],[3,"FunctionDataQuery"],[3,"ConstDataQuery"],[3,"StaticDataQuery"],[3,"Macro2DataQuery"],[3,"MacroRulesDataQuery"],[3,"ProcMacroDataQuery"],[3,"BodyWithSourceMapQuery"],[3,"BodyQuery"],[3,"ExprScopesQuery"],[3,"GenericParamsQuery"],[3,"VariantsAttrsQuery"],[3,"FieldsAttrsQuery"],[3,"VariantsAttrsSourceMapQuery"],[3,"FieldsAttrsSourceMapQuery"],[3,"AttrsQuery"],[3,"CrateLangItemsQuery"],[3,"LangItemQuery"],[3,"ImportMapQuery"],[3,"FieldVisibilitiesQuery"],[3,"FunctionVisibilityQuery"],[3,"ConstVisibilityQuery"],[3,"CrateSupportsNoStdQuery"],[8,"InternDatabase"],[8,"Policy"],[3,"Key"],[3,"DynMap"],[3,"KeyMap"],[4,"ArithOp"],[4,"LogicOp"],[4,"BinaryOp"],[4,"Expr"],[4,"Pat"],[4,"Literal"],[4,"UnaryOp"],[4,"Array"],[4,"CmpOp"],[4,"RangeOp"],[4,"Statement"],[4,"Ordering"],[4,"BindingAnnotation"],[3,"Label"],[3,"FloatTypeWrapper"],[3,"MatchArm"],[3,"RecordLitField"],[3,"RecordFieldPat"],[13,"ElementList"],[13,"Repeat"],[13,"LogicOp"],[13,"ArithOp"],[13,"CmpOp"],[13,"Assignment"],[13,"Eq"],[13,"Ord"],[13,"Path"],[13,"Array"],[13,"Literal"],[13,"Closure"],[13,"Call"],[13,"MethodCall"],[13,"Match"],[13,"Index"],[13,"Loop"],[13,"While"],[13,"For"],[13,"TryBlock"],[13,"Async"],[13,"Const"],[13,"Unsafe"],[13,"If"],[13,"RecordLit"],[13,"Let"],[13,"Break"],[13,"Return"],[13,"Yield"],[13,"Field"],[13,"Await"],[13,"Try"],[13,"Cast"],[13,"Ref"],[13,"Box"],[13,"UnaryOp"],[13,"Tuple"],[13,"Block"],[13,"Continue"],[13,"BinaryOp"],[13,"Range"],[13,"MacroStmts"],[13,"String"],[13,"ByteString"],[13,"Char"],[13,"Bool"],[13,"Int"],[13,"Uint"],[13,"Float"],[13,"Or"],[13,"Path"],[13,"Lit"],[13,"ConstBlock"],[13,"Tuple"],[13,"Record"],[13,"TupleStruct"],[13,"Range"],[13,"Box"],[13,"Bind"],[13,"Ref"],[13,"Slice"],[13,"Let"],[13,"Expr"],[4,"PrefixKind"],[4,"TypeParamProvenance"],[4,"TypeOrConstParamData"],[4,"WherePredicate"],[4,"WherePredicateTypeTarget"],[3,"TypeParamData"],[3,"LifetimeParamData"],[3,"ConstParamData"],[3,"GenericParams"],[13,"TypeParamData"],[13,"ConstParamData"],[13,"TypeBound"],[13,"Lifetime"],[13,"ForLifetime"],[13,"TypeRef"],[13,"TypeOrConstParam"],[4,"ImportKind"],[4,"SearchMode"],[3,"Query"],[3,"ImportInfo"],[3,"ImportPath"],[3,"ImportMap"],[3,"Interned"],[3,"InternStorage"],[8,"Internable"],[4,"ItemInNs"],[3,"PerNsGlobImports"],[3,"ItemScope"],[13,"Types"],[13,"Values"],[13,"Macros"],[4,"ModItem"],[4,"AssocItem"],[4,"AttrOwner"],[4,"UseTreeKind"],[4,"ImportKind"],[4,"ModKind"],[4,"Param"],[3,"RawVisibilityId"],[4,"Fields"],[8,"ItemTreeNode"],[3,"ExternBlock"],[3,"Function"],[3,"ExternCrate"],[3,"Import"],[3,"Struct"],[3,"Union"],[3,"Enum"],[3,"Const"],[3,"Static"],[3,"Trait"],[3,"Impl"],[3,"TypeAlias"],[3,"Mod"],[3,"MacroCall"],[3,"MacroRules"],[3,"MacroDef"],[3,"FileItemTreeId"],[3,"ItemTree"],[3,"TreeId"],[3,"ItemTreeId"],[3,"UseTree"],[3,"Variant"],[3,"Field"],[13,"Function"],[13,"TypeAlias"],[13,"Const"],[13,"MacroCall"],[13,"ModItem"],[13,"Variant"],[13,"Field"],[13,"Param"],[13,"Record"],[13,"Tuple"],[13,"Import"],[13,"ExternCrate"],[13,"ExternBlock"],[13,"Function"],[13,"Struct"],[13,"Union"],[13,"Enum"],[13,"Const"],[13,"Static"],[13,"Trait"],[13,"Impl"],[13,"TypeAlias"],[13,"Mod"],[13,"MacroCall"],[13,"MacroRules"],[13,"MacroDef"],[13,"Inline"],[13,"Normal"],[13,"Single"],[13,"Prefixed"],[13,"Glob"],[3,"AstPtrPolicy"],[4,"LangItemTarget"],[3,"LangItems"],[13,"EnumId"],[13,"FunctionId"],[13,"ImplDefId"],[13,"StaticId"],[13,"StructId"],[13,"TraitId"],[13,"EnumVariantId"],[4,"ModuleOrigin"],[4,"ModuleSource"],[3,"DefMap"],[3,"ModuleData"],[13,"BlockExpr"],[13,"File"],[13,"CrateRoot"],[13,"Inline"],[13,"SourceFile"],[13,"Module"],[13,"BlockExpr"],[4,"ResolvedAttr"],[13,"Macro"],[4,"DefDiagnosticKind"],[3,"DefDiagnostic"],[13,"UnresolvedModule"],[13,"UnresolvedExternCrate"],[13,"UnconfiguredCode"],[13,"UnresolvedProcMacro"],[13,"UnresolvedMacroCall"],[13,"MacroError"],[13,"UnimplementedBuiltinMacro"],[13,"InvalidDeriveTarget"],[13,"MalformedDerive"],[13,"UnresolvedImport"],[4,"PathKind"],[4,"ImportAlias"],[4,"GenericArg"],[3,"PathSegments"],[3,"GenericArgs"],[3,"PathSegment"],[3,"ModPath"],[3,"Path"],[3,"AssociatedTypeBinding"],[13,"Type"],[13,"Lifetime"],[13,"Const"],[13,"Alias"],[13,"Super"],[13,"DollarCrate"],[3,"PerNs"],[4,"TypeNs"],[4,"ScopeDef"],[4,"ValueNs"],[4,"ResolveValueResult"],[3,"Resolver"],[8,"HasResolver"],[13,"ValueNs"],[13,"Partial"],[13,"ModuleDef"],[13,"ImplSelfType"],[13,"AdtSelfType"],[13,"GenericParam"],[13,"Local"],[13,"Label"],[13,"SelfType"],[13,"GenericParam"],[13,"AdtId"],[13,"AdtSelfType"],[13,"EnumVariantId"],[13,"TypeAliasId"],[13,"BuiltinType"],[13,"TraitId"],[13,"ImplSelf"],[13,"LocalBinding"],[13,"FunctionId"],[13,"ConstId"],[13,"StaticId"],[13,"StructId"],[13,"EnumVariantId"],[13,"GenericParam"],[8,"HasSource"],[8,"HasChildSource"],[4,"TypeRef"],[4,"ConstScalar"],[4,"TypeBound"],[4,"TraitBoundModifier"],[4,"Mutability"],[4,"ConstScalarOrPath"],[4,"Rawness"],[3,"TraitRef"],[3,"LifetimeRef"],[13,"Int"],[13,"UInt"],[13,"Bool"],[13,"Char"],[13,"Scalar"],[13,"Path"],[13,"Path"],[13,"ForLifetime"],[13,"Lifetime"],[13,"Tuple"],[13,"Path"],[13,"RawPtr"],[13,"Reference"],[13,"Array"],[13,"Slice"],[13,"Fn"],[13,"ImplTrait"],[13,"DynTrait"],[13,"Macro"],[4,"RawVisibility"],[4,"Visibility"],[13,"Module"],[13,"Module"]]},\
"hir_expand":{"doc":"<code>hir_expand</code> deals with macro expansion.","t":[6,13,13,13,13,13,13,13,13,13,4,6,4,3,13,13,3,3,13,3,4,3,3,4,3,13,4,13,13,13,13,13,3,13,3,14,14,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,0,0,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,0,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,13,13,13,13,13,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,5,11,11,11,11,4,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,13,13,4,13,13,13,13,13,13,13,13,4,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,3,3,13,13,13,13,3,3,3,3,3,3,3,3,3,13,4,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,10,12,10,12,10,12,10,12,11,11,11,10,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,8,11,11,10,5,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,3,3,4,13,13,2,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,8,3,3,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,2,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AstId","Attr","BuiltIn","BuiltInAttr","BuiltInDerive","BuiltInEager","Call","Declarative","Def","Derive","ExpandError","ExpandResult","ExpandTo","ExpansionInfo","Expr","FnLike","HirFileId","InFile","Items","MacroCallId","MacroCallKind","MacroCallLoc","MacroDefId","MacroDefKind","MacroFile","Mbe","Origin","Other","Pattern","ProcMacro","Statements","Type","UnresolvedMacro","UnresolvedProcMacro","ValueResult","__known_path","__path","ancestors_with_macros","ancestors_with_macros","ancestors_with_macros_skip_attr_item","as_file","as_intern_id","as_lazy_macro","as_ref","ast_id","ast_id_map","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builtin_attr_macro","builtin_derive_macro","builtin_fn_macro","call_node","call_node","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cloned","db","def","descendants","eager","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","err","expanded","expansion_info","expansion_level","file_id","file_syntax","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_call_site","from_intern_id","hash","hash","hash","hash","hash","hash","hash","hash","hash","hygiene","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_attr_macro","is_attribute","is_builtin_derive","is_custom_derive","is_derive_attr_pseudo_expansion","is_include_macro","is_macro","is_proc_macro","kind","kind","krate","local_inner","macro_call_id","macro_file","map","map","map_err","map_token_down","map_token_up","mod_path","name","name","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","ok","only_err","original_ast_node","original_call_node","original_call_range","original_call_range_with_body","original_file","original_file_range","original_file_range","original_file_range_opt","original_file_range_opt","path","proc_macro","quote","quote","result","syntax","to_node","to_node","to_node","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transpose","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upmap","value","value","with_value","0","0","0","ast_id","ast_id","ast_id","attr_args","derive_attr_index","derive_index","expand_to","invoc_attr_index","is_derive","0","0","0","0","0","0","1","1","1","1","1","2","AstIdMap","FileAstId","ast_id","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","eq","eq","equivalent","equivalent","fmt","fmt","from","from","get","hash","into","into","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upcast","Bench","BuiltinAttrExpander","CfgAccessible","CfgEval","Derive","GlobalAllocator","Test","TestCase","borrow","borrow_mut","clone","clone_into","eq","equivalent","expand","find_builtin_attr","fmt","from","hash","into","is_bench","is_derive","is_test","pseudo_derive_attr_expansion","to_owned","try_from","try_into","type_id","BuiltinDeriveExpander","Clone","Copy","Debug","Default","Eq","Hash","Ord","PartialEq","PartialOrd","borrow","borrow_mut","clone","clone_into","eq","equivalent","expand","find_builtin_derive","fmt","from","hash","into","to_owned","try_from","try_into","type_id","Asm","Assert","BuiltinFnLikeExpander","Cfg","Column","CompileError","Concat","ConcatBytes","ConcatIdents","ConstFormatArgs","CorePanic","EagerExpander","Env","ExpandedEager","File","FormatArgs","FormatArgsNl","GlobalAsm","Include","IncludeBytes","IncludeStr","Line","LlvmAsm","LogSyntax","ModulePath","OptionEnv","StdPanic","Stringify","TraceMacros","Unreachable","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","eq","eq","equivalent","equivalent","expand","expand","find_builtin_macro","fmt","fmt","fmt","from","from","from","hash","hash","into","into","into","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","AstDatabase","AstDatabaseGroupStorage__","AstDatabaseStorage","AstIdMapQuery","Builtin","BuiltinAttr","BuiltinDerive","DeclarativeMacro","ExpandProcMacroQuery","HygieneFrameQuery","InternMacroCallLookupQuery","InternMacroCallQuery","MacroArgTextQuery","MacroDefQuery","MacroExpandErrorQuery","MacroExpandQuery","ParseMacroExpansionQuery","ProcMacro","TokenExpander","ast_id_map","ast_id_map","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","default","default","default","default","default","default","default","default","default","eq","equivalent","execute","execute","execute","execute","execute","execute","execute","execute","expand_proc_macro","expand_proc_macro","expand_speculative","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_index","for_each_query","from","from","from","from","from","from","from","from","from","from","from","from","from","hygiene_frame","hygiene_frame","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","intern_macro_call","intern_macro_call","into","into","into","into","into","into","into","into","into","into","into","into","into","lookup_intern_macro_call","lookup_intern_macro_call","macro_arg","macro_arg_text","macro_arg_text","macro_def","macro_def","macro_expand","macro_expand","macro_expand_error","macro_expand_error","maybe_changed_since","ne","new","parse_macro_expansion","parse_macro_expansion","parse_or_expand","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","def_site_token_map","mac","ErrorEmitted","ErrorSink","borrow","borrow_mut","emit","expand_eager_macro","expand_result_option","fmt","from","into","option","option_with","result","try_from","try_into","type_id","Hygiene","HygieneFrame","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","equivalent","fmt","fmt","from","from","into","into","local_inner_macros","name_ref_to_name","ne","new","new_unhygienic","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Abs","Crate","DollarCrate","EscapedModPath","ModPath","PathKind","Plain","Super","__name","__name","as_ident","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","eq","eq","eq","equivalent","equivalent","equivalent","escaped","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_kind","from_segments","from_src","hash","hash","hash","into","into","into","is_Self","is_ident","is_self","kind","len","ne","ne","ne","partial_cmp","partial_cmp","partial_cmp","path","pop_segment","push_segment","segments","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","0","AsName","EscapedName","Name","as_name","as_text","as_tuple_index","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","eq","eq","equivalent","equivalent","escaped","fmt","fmt","fmt","fmt","from","from","hash","hash","into","into","is_escaped","known","missing","name","name","ne","ne","new_lifetime","new_tuple_field","partial_cmp","partial_cmp","to_owned","to_owned","to_smol_str","to_smol_str","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","Box","Clone","Copy","Debug","Default","Eq","Future","Hash","Index","IntoIterator","Item","Iterator","Neg","None","Not","Ok","Option","Ord","Output","PartialEq","PartialOrd","Range","RangeFrom","RangeFull","RangeInclusive","RangeTo","RangeToInclusive","Result","SELF_PARAM","SELF_TYPE","STATIC_LIFETIME","Target","Try","abort","add","add_assign","add_with_overflow","alloc","asm","assert","bench","bitand","bitand_assign","bitor","bitor_assign","bitreverse","bitxor","bitxor_assign","black_box","bool","boxed","bswap","caller_location","cfg","cfg_accessible","cfg_attr","cfg_eval","char","column","compile_error","concat","concat_bytes","concat_idents","const_format_args","core","core_panic","crate_type","ctlz","ctpop","cttz","deref","deref_mut","derive","discriminant_value","div","div_assign","doc","env","eq","f32","f64","file","filter_map","fn","fn_mut","fn_once","forget","format_args","format_args_nl","future","future_trait","ge","global_allocator","global_asm","gt","i128","i16","i32","i64","i8","include","include_bytes","include_str","index","index_mut","is_empty","isize","iter","iter_mut","le","len","likely","line","llvm_asm","log_syntax","lt","macro_rules","maxnumf32","maxnumf64","min_align_of","min_align_of_val","minnumf32","minnumf64","module_path","mul","mul_assign","mul_with_overflow","ne","needs_drop","neg","new","next","not","ops","option","option_env","owned_box","partial_ord","prelude","ptr_guaranteed_eq","ptr_guaranteed_ne","recursion_limit","register_attr","register_tool","rem","rem_assign","result","rotate_left","rotate_right","rust_2015","rust_2018","rust_2021","rustc_peek","saturating_add","saturating_sub","shl","shl_assign","shr","shr_assign","size_of","size_of_val","std","std_panic","str","stringify","sub","sub_assign","sub_with_overflow","test","test_case","trace_macros","type_id","type_name","u128","u16","u32","u64","u8","unlikely","unreachable","usize","v1","variant_count","wrapping_add","wrapping_mul","wrapping_sub","ProcMacroExpander","borrow","borrow_mut","clone","clone_into","dummy","eq","equivalent","expand","fmt","from","hash","into","is_dummy","ne","new","to_owned","try_from","try_into","type_id"],"q":["hir_expandhir_expand::ExpandError","","","hir_expand::MacroCallKind","","","","","","","","","hir_expand::MacroDefKind","","","","","","","","","","","","hir_expand::ast_id_map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_expand::builtin_attr_macro","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_expand::builtin_derive_macro","","","","","","","","","","","","","","","","","","","","","","","","","","hir_expand::builtin_fn_macro","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_expand::dbhir_expand::db::TokenExpander","","","","","","hir_expand::eager","","","","","","","","","","","","","","","","hir_expand::hygiene","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_expand::mod_path","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_expand::mod_path::PathKind","","hir_expand::name","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_expand::name::knownhir_expand::proc_macro","","","","","","","","","","","","","","","","","","",""],"d":["<code>AstId</code> points to an AST node in any file.","","","","","","","","","","","","In Rust, macros expand token trees to token trees. When we …","ExpansionInfo mainly describes how to map text range …","","","Input to the analyzer is a set of files, where each file …","<code>InFile&lt;T&gt;</code> stores a value of <code>T</code> inside a particular …","","<code>MacroCallId</code> identifies a particular macro invocation, like …","","","","","","","","","","","","","","","","","","","","Skips the attributed item that caused the macro invocation …","","","","","","<code>AstIdMap</code> allows to create stable IDs for “large” …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builtin attributes.","Builtin derives.","Builtin macro","If this is a macro call, returns the syntax node of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","Defines database &amp; queries for macro expansion.","","","Eager expansion related utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return expansion information if it is a macro-expansion …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","This modules handles hygiene information.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return whether this file is an attr macro","","Indicate it is macro file generated for builtin derive","","Return whether this file is the pseudo expansion of the …","Return whether this file is an include macro","","","","","","","","","","","","Map a token down from macro input into the macro expansion.","Map a token up out of the expansion it resides in into the …","A lowering for <code>use</code>-paths (more generally, paths without …","See <code>Name</code>.","","","","","","","","","","","","","","","","","If this is a macro call, returns the syntax node of the …","Returns the original file range that best describes the …","Returns the original file range that best describes the …","For macro-expansion files, returns the file original …","Falls back to the macro call range if the node cannot be …","Falls back to the macro call range if the node cannot be …","Attempts to map the syntax node back up its macro calls.","Attempts to map the syntax node back up its macro calls.","","Proc Macro Expander stub","A simplified version of quote-crate like quasi quote macro","FIXME: It probably should implement in proc-macro","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Syntactical index of the invoking <code>#[derive]</code> attribute.","Index of the derive macro in the derive attribute","","Syntactical index of the invoking <code>#[attribute]</code>.","Whether this attribute is the <code>#[derive]</code> attribute.","","","","","","","","","","","","","Maps items’ <code>SyntaxNode</code>s to <code>ErasedFileAstId</code>s and back.","<code>AstId</code> points to an AST node in a specific file.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Representative struct for the query group.","","Stuff like <code>line!</code> and <code>file!</code>.","<code>global_allocator</code> and such.","<code>derive(Copy)</code> and such.","Old-style <code>macro_rules</code> or the new macros 2.0","","","","","","","","","","The thing we love the most here in rust-analyzer – …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Special case of the previous query for procedural macros. …","","This expands the given macro call, but with different …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Macro ids. That’s probably the tricksiest bit in …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Lowers syntactic macro call to a token tree representation.","Extracts syntax node, corresponding to a macro call. That…","","Gets the expander for this macro. This compiles …","","Expand macro call to a token tree. This query is LRUed (we …","","Firewall query that returns the error from the <code>macro_expand</code>…","","","","","Implementation for the macro case.","","Main public API – parses a hir file, not caring whether …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Absolute path (::foo)","","<code>$crate</code> from macro expansion","","","","","<code>self::</code> is <code>Super(0)</code>","","","If this path is a single identifier, like <code>foo</code>, return its …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>ModPath</code> from a <code>PathKind</code>, with no extra path …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Returns the number of segments in the path (counting …","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>EscapedName</code> will add a prefix “r#” to the wrapped <code>Name</code> …","<code>Name</code> is a wrapper around string, which is used in hir for …","","Returns the text this name represents if it isn’t a …","Returns the tuple index this name represents if it is a …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","A fake name for things missing in the source code.","","","","","","","","","","","Returns the textual representation of this name as a …","Returns the textual representation of this name as a …eturns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[0,1,2,2,2,2,3,2,3,1,0,0,0,0,4,1,0,0,4,0,0,0,0,0,0,5,0,5,4,2,4,4,0,5,0,0,0,6,6,6,7,7,8,6,8,0,3,9,5,10,11,7,12,8,2,1,13,6,4,14,3,9,5,10,11,7,12,8,2,1,13,6,4,14,0,0,0,10,13,9,5,10,11,7,12,8,2,1,13,6,4,9,5,10,11,7,12,8,2,1,13,6,4,6,0,12,6,0,3,9,5,10,11,7,12,8,2,1,13,6,4,3,9,5,10,11,7,12,8,2,1,13,6,4,9,13,10,10,6,6,3,9,5,5,10,11,7,12,8,2,1,13,6,4,14,3,9,9,5,5,10,10,10,11,7,12,8,2,1,13,6,4,14,4,7,10,11,7,12,8,2,1,6,4,0,3,9,5,10,11,7,12,8,2,1,13,6,4,14,10,8,10,10,10,10,10,8,12,8,8,8,11,10,9,6,9,13,13,0,0,0,9,5,10,11,7,12,8,2,1,13,6,6,9,9,6,10,1,1,10,6,6,6,6,14,0,0,0,9,6,15,1,6,9,5,10,11,7,12,8,2,1,13,6,4,5,6,3,9,5,10,11,7,12,8,2,1,13,6,4,14,3,9,5,10,11,7,12,8,2,1,13,6,4,14,3,9,5,10,11,7,12,8,2,1,13,6,4,14,6,9,6,6,16,17,18,19,20,21,21,20,20,19,21,21,22,23,24,25,26,27,23,24,25,26,27,27,0,0,28,29,28,29,28,29,29,28,29,28,29,28,29,28,29,28,28,29,29,28,29,29,28,29,28,29,28,29,30,0,30,30,30,30,30,30,30,30,30,30,30,30,30,0,30,30,30,30,30,30,30,0,30,30,30,30,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0,31,31,31,31,31,31,31,31,32,32,0,32,32,33,33,33,33,32,32,0,33,0,32,32,32,32,33,33,33,32,32,32,32,33,32,32,32,32,34,32,33,34,32,33,32,33,32,33,34,32,33,32,33,32,33,0,34,32,33,34,32,33,32,33,34,32,33,32,33,34,32,33,34,32,33,34,32,33,0,0,0,0,35,35,35,35,0,0,0,0,0,0,0,0,0,35,0,36,37,35,38,37,39,40,41,42,43,44,45,46,47,48,35,38,37,39,40,41,42,43,44,45,46,47,48,35,35,39,40,41,42,43,44,45,46,47,48,35,35,39,40,43,44,45,46,47,48,36,37,0,35,39,40,41,42,43,44,45,46,47,48,37,37,35,38,37,39,40,41,42,43,44,45,46,47,48,36,37,39,40,41,42,43,44,45,46,47,48,39,40,41,42,43,44,45,46,47,48,36,37,35,38,37,39,40,41,42,43,44,45,46,47,48,36,37,36,36,37,36,37,36,37,36,37,37,35,37,36,37,36,39,40,41,42,43,44,45,46,47,48,35,35,38,37,39,40,41,42,43,44,45,46,47,48,35,38,37,39,40,41,42,43,44,45,46,47,48,35,38,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,53,0,0,54,54,55,0,55,54,54,54,55,55,55,54,54,54,0,0,56,57,56,57,56,57,56,57,57,57,56,57,56,57,56,57,56,56,57,56,56,56,57,56,57,56,57,56,57,58,58,58,0,0,0,58,58,0,0,59,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,60,58,59,59,59,60,60,58,59,59,60,58,59,59,59,59,60,58,59,60,58,59,59,59,59,59,59,60,58,59,60,58,0,59,59,59,59,60,58,59,60,59,60,58,59,60,58,59,60,58,61,62,0,0,0,63,64,64,64,65,64,65,64,65,64,65,64,65,64,65,64,65,64,64,64,65,65,64,65,64,65,64,65,65,0,64,0,0,64,65,64,64,64,65,64,65,64,65,64,65,64,65,64,65,64,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["astdatabase",8]]],[[["astdatabase",8]]],[[["astdatabase",8]]],[[],["hirfileid",3]],[[["",0]],["internid",3]],[[["astdatabase",8],["crateid",3],["macrocallkind",4]],["macrocallid",3]],[[["",0]],["infile",3]],[[["",0]],["either",4,[["astid",6,[["macro",4]]],["astid",6,[["fn",3]]]]]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,null,[[["astdatabase",8]],["option",4,[["infile",3,[["syntaxnode",6]]]]]],[[["",0]],["option",4,[["infile",3,[["syntaxnode",6]]]]]],[[["",0]],["valueresult",3]],[[["",0]],["expanderror",4]],[[["",0]],["hirfileid",3]],[[["",0]],["macrofile",3]],[[["",0]],["macrocallid",3]],[[["",0]],["macrocallloc",3]],[[["",0]],["macrodefid",3]],[[["",0]],["macrodefkind",4]],[[["",0]],["macrocallkind",4]],[[["",0]],["expansioninfo",3]],[[["",0]],["infile",3]],[[["",0]],["expandto",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0]],["infile",3]],null,null,[[]],null,[[["",0],["origin",4]],["bool",0]],[[["",0],["valueresult",3]],["bool",0]],[[["",0],["expanderror",4]],["bool",0]],[[["",0],["hirfileid",3]],["bool",0]],[[["",0],["macrofile",3]],["bool",0]],[[["",0],["macrocallid",3]],["bool",0]],[[["",0],["macrocallloc",3]],["bool",0]],[[["",0],["macrodefid",3]],["bool",0]],[[["",0],["macrodefkind",4]],["bool",0]],[[["",0],["macrocallkind",4]],["bool",0]],[[["",0],["expansioninfo",3]],["bool",0]],[[["",0],["infile",3]],["bool",0]],[[["",0],["expandto",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],null,[[["",0]],["infile",3,[["syntaxnode",6]]]],[[["astdatabase",8]],["option",4,[["expansioninfo",3]]]],[[["astdatabase",8]],["u32",0]],null,[[["",0],["astdatabase",8]],["syntaxnode",6]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["result",4]],["valueresult",3]],[[["expanderror",4]]],[[]],[[["fileid",3]]],[[["macrofile",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["macrocall",3]],["expandto",4]],[[["internid",3]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["astdatabase",8]],["bool",0]],[[["",0]],["bool",0]],[[["",0],["astdatabase",8]],["option",4,[["infile",3,[["attr",3]]]]]],[[["",0],["astdatabase",8]],["bool",0]],[[["",0],["astdatabase",8]],["bool",0]],[[["",0],["astdatabase",8]],["bool",0]],[[],["bool",0]],[[["",0]],["bool",0]],null,null,null,null,null,[[],["option",4,[["macrofile",3]]]],[[],["valueresult",3]],[[["fnonce",8]],["infile",3]],[[],["valueresult",3]],[[["",0],["astdatabase",8],["option",4,[["item",4]]],["infile",3,[["syntaxtoken",6]]]],["option",4]],[[["",0],["astdatabase",8],["infile",3,[["syntaxtoken",6]]]],["option",4]],null,null,null,[[["",0],["valueresult",3]],["bool",0]],[[["",0],["expanderror",4]],["bool",0]],[[["",0],["hirfileid",3]],["bool",0]],[[["",0],["macrofile",3]],["bool",0]],[[["",0],["macrocallid",3]],["bool",0]],[[["",0],["macrocallloc",3]],["bool",0]],[[["",0],["macrodefid",3]],["bool",0]],[[["",0],["macrodefkind",4]],["bool",0]],[[["",0],["macrocallkind",4]],["bool",0]],[[["",0],["expansioninfo",3]],["bool",0]],[[["",0],["infile",3]],["bool",0]],[[["hirfileid",3]],["infile",3]],[[],["valueresult",3]],[[],["valueresult",3]],[[["astdatabase",8]],["option",4,[["infile",3]]]],[[["astdatabase",8]],["option",4]],[[["astdatabase",8]],["filerange",3]],[[["astdatabase",8]],["filerange",3]],[[["astdatabase",8]],["fileid",3]],[[["astdatabase",8]],["filerange",3]],[[["astdatabase",8]],["filerange",3]],[[["astdatabase",8]],["option",4,[["filerange",3]]]],[[["astdatabase",8]],["option",4,[["filerange",3]]]],null,null,null,null,[[],["result",4]],[[["",0]],["infile",3,[["syntaxnode",6]]]],[[["",0],["astdatabase",8]]],[[["",0],["astdatabase",8]],["infile",3,[["syntaxnode",6]]]],[[["",0],["astdatabase",8]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["option",4,[["infile",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["astdatabase",8]],["option",4,[["infile",3,[["syntaxtoken",6]]]]]],null,null,[[["",0]],["infile",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["",0]],["fileastid",3,[["astnode",8]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["fileastid",3]],[[["",0],["",0]]],[[],["astidmap",3]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0],["fileastid",3,[["astnode",8]]]],["astptr",3,[["astnode",8]]]],[[["",0],["",0]]],[[]],[[]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["fileastid",3,[["astnode",8]]]],null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["builtinattrexpander",4]],[[["",0],["",0]]],[[["",0],["builtinattrexpander",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["astdatabase",8],["macrocallid",3],["subtree",3]],["expandresult",6,[["subtree",3]]]],[[["name",3]],["option",4,[["builtinattrexpander",4]]]],[[["",0],["formatter",3]],["result",6]],[[]],[[["",0],["",0]]],[[]],[[],["bool",0]],[[],["bool",0]],[[],["bool",0]],[[["subtree",3],["subtree",3]],["expandresult",6,[["subtree",3]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["builtinderiveexpander",4]],[[["",0],["",0]]],[[["",0],["builtinderiveexpander",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["astdatabase",8],["macrocallid",3],["subtree",3]],["expandresult",6,[["subtree",3]]]],[[["name",3]],["option",4,[["builtinderiveexpander",4]]]],[[["",0],["formatter",3]],["result",6]],[[]],[[["",0],["",0]]],[[]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["builtinfnlikeexpander",4]],[[["",0]],["eagerexpander",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["expandedeager",3]],[[["",0],["builtinfnlikeexpander",4]],["bool",0]],[[["",0],["eagerexpander",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["astdatabase",8],["macrocallid",3],["subtree",3]],["expandresult",6,[["subtree",3]]]],[[["",0],["astdatabase",8],["macrocallid",3],["subtree",3]],["expandresult",6,[["expandedeager",3]]]],[[["name",3]],["option",4,[["either",4,[["builtinfnlikeexpander",4],["eagerexpander",4]]]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["",0],["",0]]],[[["",0],["",0]]],[[]],[[]],[[]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["hirfileid",3]],["arc",3,[["astidmap",3]]]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["tokenexpander",4]],[[["",0],["",0]]],[[],["astidmapquery",3]],[[],["parsemacroexpansionquery",3]],[[],["internmacrocallquery",3]],[[],["internmacrocalllookupquery",3]],[[],["macroargtextquery",3]],[[],["macrodefquery",3]],[[],["macroexpandquery",3]],[[],["expandprocmacroquery",3]],[[],["macroexpanderrorquery",3]],[[],["hygieneframequery",3]],[[["",0],["tokenexpander",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["macrocallid",3]],["expandresult",6,[["subtree",3]]]],null,[[["astdatabase",8],["macrocallid",3],["syntaxnode",6],["syntaxtoken",6]],["option",4]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["astdatabase",8],["databasekeyindex",3],["formatter",3]],["result",6]],[[["",0],["runtime",3],["fnmut",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["hirfileid",3]],["arc",3,[["hygieneframe",3]]]],null,[[["astdatabase",8]],["querytable",3]],[[["astdatabase",8]],["querytable",3]],[[["astdatabase",8]],["querytable",3]],[[["astdatabase",8]],["querytable",3]],[[["astdatabase",8]],["querytable",3]],[[["astdatabase",8]],["querytable",3]],[[["astdatabase",8]],["querytable",3]],[[["astdatabase",8]],["querytable",3]],[[["astdatabase",8]],["querytable",3]],[[["astdatabase",8]],["querytable",3]],[[["astdatabase",8]],["querytablemut",3]],[[["astdatabase",8]],["querytablemut",3]],[[["astdatabase",8]],["querytablemut",3]],[[["astdatabase",8]],["querytablemut",3]],[[["astdatabase",8]],["querytablemut",3]],[[["astdatabase",8]],["querytablemut",3]],[[["astdatabase",8]],["querytablemut",3]],[[["astdatabase",8]],["querytablemut",3]],[[["astdatabase",8]],["querytablemut",3]],[[["astdatabase",8]],["querytablemut",3]],[[["",0],["macrocallloc",3]],["macrocallid",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["macrocallid",3]],["macrocallloc",3]],null,[[["",0],["macrocallid",3]],["option",4,[["arc",3]]]],[[["",0],["macrocallid",3]],["option",4,[["greennode",3]]]],null,[[["",0],["macrodefid",3]],["result",4,[["arc",3,[["tokenexpander",4]]],["parseerror",4]]]],null,[[["",0],["macrocallid",3]],["expandresult",6,[["option",4,[["arc",3,[["subtree",3]]]]]]]],null,[[["",0],["macrocallid",3]],["option",4,[["expanderror",4]]]],null,[[["",0],["astdatabase",8],["databasekeyindex",3],["revision",3]],["bool",0]],[[["",0],["tokenexpander",4]],["bool",0]],[[["u16",0]]],[[["",0],["macrofile",3]],["expandresult",6,[["option",4]]]],null,[[["",0],["hirfileid",3]],["option",4,[["syntaxnode",6]]]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["expanderror",4]]],[[["astdatabase",8],["crateid",3],["infile",3,[["macrocall",3]]],["macrodefid",3],["fn",8],["fnmut",8]],["result",4,[["result",4,[["macrocallid",3],["erroremitted",3]]],["unresolvedmacro",3]]]],[[["",0],["expandresult",6,[["option",4]]]],["result",4,[["erroremitted",3]]]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0],["option",4]],["result",4,[["erroremitted",3]]]],[[["",0]],["result",4,[["erroremitted",3]]]],[[["",0],["result",4,[["expanderror",4]]]],["result",4,[["erroremitted",3]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["hygiene",3]],[[["",0]],["hygieneframe",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["hygieneframe",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["",0],["astdatabase",8],["path",3]],["option",4,[["crateid",3]]]],[[["",0],["astdatabase",8],["nameref",3]],["either",4,[["name",3],["crateid",3]]]],[[["",0],["hygieneframe",3]],["bool",0]],[[["astdatabase",8],["hirfileid",3]],["hygiene",3]],[[],["hygiene",3]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[["",0]],["option",4,[["name",3]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["modpath",3]],[[["",0]],["escapedmodpath",3]],[[["",0]],["pathkind",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["modpath",3]],["ordering",4]],[[["",0],["escapedmodpath",3]],["ordering",4]],[[["",0],["pathkind",4]],["ordering",4]],[[["",0],["modpath",3]],["bool",0]],[[["",0],["escapedmodpath",3]],["bool",0]],[[["",0],["pathkind",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0]],["escapedmodpath",3]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["name",3]],["modpath",3]],[[]],[[]],[[]],[[["pathkind",4]],["modpath",3]],[[["pathkind",4]],["modpath",3]],[[["astdatabase",8],["path",3],["hygiene",3]],["option",4,[["modpath",3]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],null,[[["",0]],["usize",0]],[[["",0],["modpath",3]],["bool",0]],[[["",0],["escapedmodpath",3]],["bool",0]],[[["",0],["pathkind",4]],["bool",0]],[[["",0],["modpath",3]],["option",4,[["ordering",4]]]],[[["",0],["escapedmodpath",3]],["option",4,[["ordering",4]]]],[[["",0],["pathkind",4]],["option",4,[["ordering",4]]]],null,[[["",0]],["option",4,[["name",3]]]],[[["",0],["name",3]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,[[["",0]],["name",3]],[[["",0]],["option",4,[["smolstr",3]]]],[[["",0]],["option",4,[["usize",0]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["name",3]],[[["",0]],["escapedname",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["name",3]],["ordering",4]],[[["",0],["escapedname",3]],["ordering",4]],[[["",0],["name",3]],["bool",0]],[[["",0],["escapedname",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0]],["escapedname",3]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0],["",0]]],[[["",0],["",0]]],[[]],[[]],[[["",0]],["bool",0]],null,[[],["name",3]],null,null,[[["",0],["name",3]],["bool",0]],[[["",0],["escapedname",3]],["bool",0]],[[["lifetime",3]],["name",3]],[[["usize",0]],["name",3]],[[["",0],["name",3]],["option",4,[["ordering",4]]]],[[["",0],["escapedname",3]],["option",4,[["ordering",4]]]],[[["",0]]],[[["",0]]],[[["",0]],["smolstr",3]],[[["",0]],["smolstr",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["procmacroexpander",3]],[[["",0],["",0]]],[[["crateid",3]]],[[["",0],["procmacroexpander",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["astdatabase",8],["crateid",3],["subtree",3],["option",4,[["subtree",3]]]],["expandresult",6,[["subtree",3]]]],[[["",0],["formatter",3]],["result",6]],[[]],[[["",0],["",0]]],[[]],[[["",0]],["bool",0]],[[["",0],["procmacroexpander",3]],["bool",0]],[[["crateid",3],["procmacroid",3]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]]],"p":[[4,"MacroCallKind"],[4,"MacroDefKind"],[4,"Origin"],[4,"ExpandTo"],[4,"ExpandError"],[3,"InFile"],[3,"MacroCallId"],[3,"MacroDefId"],[3,"ValueResult"],[3,"HirFileId"],[3,"MacroFile"],[3,"MacroCallLoc"],[3,"ExpansionInfo"],[3,"UnresolvedMacro"],[6,"AstId"],[13,"UnresolvedProcMacro"],[13,"Mbe"],[13,"Other"],[13,"FnLike"],[13,"Derive"],[13,"Attr"],[13,"Declarative"],[13,"BuiltIn"],[13,"BuiltInAttr"],[13,"BuiltInDerive"],[13,"BuiltInEager"],[13,"ProcMacro"],[3,"AstIdMap"],[3,"FileAstId"],[4,"BuiltinAttrExpander"],[4,"BuiltinDeriveExpander"],[4,"BuiltinFnLikeExpander"],[4,"EagerExpander"],[3,"ExpandedEager"],[4,"TokenExpander"],[8,"AstDatabase"],[3,"AstDatabaseGroupStorage__"],[3,"AstDatabaseStorage"],[3,"AstIdMapQuery"],[3,"ParseMacroExpansionQuery"],[3,"InternMacroCallQuery"],[3,"InternMacroCallLookupQuery"],[3,"MacroArgTextQuery"],[3,"MacroDefQuery"],[3,"MacroExpandQuery"],[3,"ExpandProcMacroQuery"],[3,"MacroExpandErrorQuery"],[3,"HygieneFrameQuery"],[13,"Builtin"],[13,"BuiltinAttr"],[13,"BuiltinDerive"],[13,"ProcMacro"],[13,"DeclarativeMacro"],[3,"ErrorEmitted"],[8,"ErrorSink"],[3,"Hygiene"],[3,"HygieneFrame"],[4,"PathKind"],[3,"ModPath"],[3,"EscapedModPath"],[13,"Super"],[13,"DollarCrate"],[8,"AsName"],[3,"Name"],[3,"EscapedName"],[3,"ProcMacroExpander"]]},\
"hir_ty":{"doc":"The type system. We currently use this to infer types for …","t":[12,12,4,3,3,13,6,6,6,13,4,6,4,13,13,3,13,13,4,3,6,6,8,6,13,6,6,6,13,6,13,6,6,3,13,13,6,6,13,13,6,13,13,6,6,6,3,6,13,13,13,6,6,6,6,18,4,4,6,4,3,6,13,13,3,6,6,6,13,13,13,4,13,13,13,18,13,6,6,13,4,6,13,6,6,8,6,6,13,13,13,13,3,13,4,4,6,13,13,13,6,2,6,8,6,3,4,8,6,3,4,13,13,8,13,13,13,4,13,6,6,6,11,5,10,11,10,11,10,11,10,11,10,11,10,11,10,11,11,11,11,10,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,5,11,5,0,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,0,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,5,11,5,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,10,11,10,11,10,11,10,11,11,12,11,11,11,11,5,5,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,12,12,11,11,0,11,11,11,11,11,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,10,11,11,5,11,12,5,5,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,10,11,10,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,4,3,4,8,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,5,12,11,11,11,11,11,11,5,11,11,11,10,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,12,12,12,12,12,3,3,3,3,3,3,3,3,3,3,3,3,8,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,10,11,12,11,11,11,11,11,11,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,12,10,12,11,11,11,11,11,11,10,12,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,12,10,12,10,12,10,12,11,11,11,11,11,11,11,11,11,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,12,11,11,11,11,11,11,10,12,10,12,10,12,10,12,10,12,10,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,4,3,13,13,13,3,11,11,11,11,11,11,11,12,12,12,11,11,11,11,12,12,12,5,12,11,11,11,5,5,5,12,11,11,11,11,11,11,11,11,11,5,12,12,12,12,12,12,13,13,4,13,4,13,8,4,3,3,13,13,13,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,5,12,12,12,13,13,13,13,13,13,13,3,4,13,13,13,13,13,3,13,13,13,3,4,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,5,5,5,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,4,4,4,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,13,13,13,4,3,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11],"n":["0","0","Adjust","Adjustment","AdtId","AdtId","AliasEq","AliasTy","AssocTypeId","AsyncBlockTypeImplTrait","AutoBorrow","Binders","BindingMode","Bool","Borrow","BoundVar","BreakOutsideOfLoop","BuiltinType","CallableDefId","CallableSig","Canonical","CanonicalVarKinds","Cast","ChalkTraitId","Char","ClosureId","ConcreteConst","Const","Const","ConstData","ConstId","ConstValue","ConstrainedSubst","DebruijnIndex","Deref","Disallowed","DomainGoal","DynTy","EnumVariantId","EnumVariantId","Environment","Float","Float","FnDefId","FnPointer","FnSig","FnSubst","ForeignDefId","FunctionId","FunctionId","General","GenericArg","GenericArgData","Goal","Guidance","INNERMOST","ImplTraitId","ImplTraitLoweringMode","InEnvironment","InferenceDiagnostic","InferenceResult","InferenceVar","Int","Integer","Interner","Lifetime","LifetimeData","LifetimeOutlives","MismatchedArgCount","Move","Mut","Mutability","NeverToAny","NoSuchField","Not","ONE","Opaque","OpaqueTy","OpaqueTyId","Param","ParamKind","PlaceholderIndex","Pointer","PolyFnSig","ProjectionTy","ProjectionTyExt","QuantifiedWhereClause","QuantifiedWhereClauses","RawPtr","Ref","Ref","ReturnTypeImplTrait","ReturnTypeImplTraits","Safe","Safety","Scalar","Solution","StaticId","StructId","StructId","Substitution","TraitEnvironment","TraitRef","TraitRefExt","Ty","TyBuilder","TyDefId","TyExt","TyKind","TyLoweringContext","TyVariableKind","Type","TypeAliasId","TypeWalk","Uint","UnionId","Unsafe","ValueTyDefId","Variable","VariableKind","VariableKinds","WhereClause","adt","all_super_traits","as_adt","as_adt","as_builtin","as_builtin","as_fn_def","as_fn_def","as_generic_def","as_generic_def","as_reference","as_reference","as_reference_or_ptr","as_reference_or_ptr","as_tuple","as_tuple","assoc_resolutions_for_expr","assoc_resolutions_for_pat","assoc_type_projection","associated_type_parent_trait","associated_type_parent_trait","associated_type_shorthand_candidates","autoderef","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bound_within","build","build","build","build","build","build","builtin","callable_def","callable_def","callable_sig","callable_sig","canonical_var_kinds_data","cast","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","const_data","const_eq","consteval","constraints_data","could_coerce","could_match","could_unify","db","db","debruijn","debug_adt_id","debug_alias","debug_assoc_type_id","debug_canonical_var_kinds","debug_closure_id","debug_const","debug_constraints","debug_fn_def_id","debug_generic_arg","debug_goal","debug_goals","debug_lifetime","debug_opaque_ty","debug_opaque_ty_id","debug_program_clause","debug_program_clause_implication","debug_program_clauses","debug_projection_ty","debug_quantified_where_clauses","debug_separator_trait_ref","debug_substitution","debug_trait_id","debug_ty","debug_variable_kinds","debug_variable_kinds_with_angles","def_ty","default","default","depth","diagnostics","diagnostics","display","dyn_trait","dyn_trait","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equals_ctor","equals_ctor","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr_adjustments","expr_type_mismatches","field_resolution","fill","fill_with_bound_vars","fill_with_defaults","fill_with_unknown","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_ptr","fold_with","fold_with","fold_with","fold_with","fold_with","fold_with","fold_with","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_assoc_type_id","from_chalk_trait_id","from_fn_ptr","from_foreign_def_id","from_params_and_return","from_placeholder_idx","generic_arg_data","goal_data","goals_data","has_interner","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_fmt","hir_trait_id","hir_trait_id","impl_self_ty","impl_trait_bounds","impl_trait_bounds","impl_trait_mode","index","index","index","index_if_bound_at","index_if_innermost","intern_canonical_var_kinds","intern_const","intern_constraints","intern_generic_arg","intern_generic_arg_kinds","intern_goal","intern_goals","intern_lifetime","intern_program_clause","intern_program_clauses","intern_quantified_where_clauses","intern_substitution","intern_ty","intern_variances","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_fn_unsafe_to_call","is_never","is_never","is_ty_var","is_ty_var","is_unit","is_unit","is_unknown","is_unknown","is_unknown","kind","krate","lifetime_data","lower_ty","lower_ty_ext","lt_from_placeholder_idx","make_canonical","method_resolution","method_resolution","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","param_idx","params","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pat_adjustments","pat_binding_modes","pat_type_mismatches","placeholder_subst","primitive","program_clause_data","program_clauses_data","push","quantified_where_clauses_data","remaining","replace_errors_with_variables","resolver","ret","shift_in","shift_out","shifted_in","shifted_in","shifted_in","shifted_in","shifted_in","shifted_in","shifted_in","shifted_in","shifted_in","shifted_in_from","shifted_in_from","shifted_in_from","shifted_in_from","shifted_in_from","shifted_in_from","shifted_in_from","shifted_in_from","shifted_in_from","shifted_out","shifted_out","shifted_out","shifted_out","shifted_out","shifted_out","shifted_out","shifted_out","shifted_out","shifted_out_to","shifted_out_to","shifted_out_to","shifted_out_to","shifted_out_to","shifted_out_to","shifted_out_to","shifted_out_to","shifted_out_to","slice","static_lifetime","strip_references","strip_references","subst_for_def","subst_prefix","substitution_data","target","to_assoc_type_id","to_chalk_trait_id","to_const","to_fn_ptr","to_foreign_def_id","to_lifetime","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_placeholder_idx","to_ty","trait_","trait_","trait_ref","trait_ref","trait_ref","traits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tuple","ty_data","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_mismatch_for_expr","type_mismatch_for_pat","type_of_expr","type_of_pat","type_param_mode","unit","use_parent_substs","usize","value_ty","variable_kinds_data","variances_data","variant_resolution_for_expr","variant_resolution_for_pat","visit_with","visit_with","visit_with","visit_with","visit_with","visit_with","walk","walk","walk","walk","walk","walk","walk","walk","walk","walk","walk","walk","walk","with_debruijn","with_impl_trait_mode","with_shifted_in","with_type_param_mode","within","zip_with","zip_with","zip_with","zip_with","0","0","0","0","0","0","0","0","0","0","0","1","1","call_expr","expected","expr","expr","found","0","0","0","0","0","0","0","0","0","0","0","0","0","ComputedExpr","ConstEvalCtx","ConstEvalError","ConstExt","IncompleteExpr","Literal","Loop","NotSupported","Panic","SemanticError","Tuple","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","db","eq","eq","equivalent","equivalent","eval_const","exprs","fmt","fmt","fmt","from","from","from","intern_const_scalar","into","into","into","is_unknown","local_data","ne","ne","owner","pats","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unknown_const","unknown_const_as_generic","usize_const","0","0","0","0","0","AdtVarianceQuery","AssociatedTyDataQuery","AssociatedTyValueQuery","CallableItemSignatureQuery","ConstEvalQuery","ConstParamTyQuery","FieldTypesQuery","FnDefDatumQuery","FnDefVarianceQuery","GenericDefaultsQuery","GenericPredicatesForParamQuery","GenericPredicatesQuery","HirDatabase","HirDatabaseGroupStorage__","HirDatabaseStorage","ImplDatumQuery","ImplSelfTyQuery","ImplTraitQuery","InferQueryQuery","InherentImplCratesQuery","InherentImplsInBlockQuery","InherentImplsInCrateQuery","InternCallableDefLookupQuery","InternCallableDefQuery","InternClosureLookupQuery","InternClosureQuery","InternImplTraitIdLookupQuery","InternImplTraitIdQuery","InternLifetimeParamIdLookupQuery","InternLifetimeParamIdQuery","InternTypeOrConstParamIdLookupQuery","InternTypeOrConstParamIdQuery","InternedCallableDefId","InternedClosureId","InternedConstParamId","InternedLifetimeParamId","InternedOpaqueTyId","InternedTypeOrConstParamId","ProgramClausesForChalkEnvQuery","ReturnTypeImplTraitsQuery","StructDatumQuery","TraitDatumQuery","TraitEnvironmentQuery","TraitImplsInBlockQuery","TraitImplsInCrateQuery","TraitImplsInDepsQuery","TraitSolveQueryQuery","TyQuery","ValueTyQuery","adt_variance","adt_variance","adt_variance","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","as_intern_id","associated_ty_data","associated_ty_data","associated_ty_value","associated_ty_value","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callable_item_signature","callable_item_signature","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","const_eval","const_eval","const_param_ty","const_param_ty","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","field_types","field_types","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_index","fn_def_datum","fn_def_datum","fn_def_variance","fn_def_variance","fn_def_variance","for_each_query","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","from_intern_id","generic_defaults","generic_defaults","generic_predicates","generic_predicates","generic_predicates_for_param","generic_predicates_for_param","hash","hash","hash","hash","hash","hash","impl_datum","impl_datum","impl_self_ty","impl_self_ty","impl_trait","impl_trait","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","in_db_mut","infer","infer_query","infer_query","inherent_impl_crates","inherent_impl_crates","inherent_impls_in_block","inherent_impls_in_block","inherent_impls_in_crate","inherent_impls_in_crate","intern_callable_def","intern_callable_def","intern_closure","intern_closure","intern_impl_trait_id","intern_impl_trait_id","intern_lifetime_param_id","intern_lifetime_param_id","intern_type_or_const_param_id","intern_type_or_const_param_id","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","lookup_intern_callable_def","lookup_intern_callable_def","lookup_intern_closure","lookup_intern_closure","lookup_intern_impl_trait_id","lookup_intern_impl_trait_id","lookup_intern_lifetime_param_id","lookup_intern_lifetime_param_id","lookup_intern_type_or_const_param_id","lookup_intern_type_or_const_param_id","maybe_changed_since","ne","ne","ne","ne","ne","ne","new","partial_cmp","program_clauses_for_chalk_env","program_clauses_for_chalk_env","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","query_storage","recover","recover","recover","recover","recover","return_type_impl_traits","return_type_impl_traits","struct_datum","struct_datum","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","trait_datum","trait_datum","trait_environment","trait_environment","trait_impls_in_block","trait_impls_in_block","trait_impls_in_crate","trait_impls_in_crate","trait_impls_in_deps","trait_impls_in_deps","trait_solve","trait_solve_query","trait_solve_query","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value_ty","value_ty","BodyValidationDiagnostic","IncorrectCase","MissingMatchArms","RecordMissingFields","ReplaceFilterMapNextWithFindMap","UnsafeExpr","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","collect","expected_case","expr","file","fmt","from","from","from","ident","ident_text","ident_type","incorrect_case","inside_unsafe_block","into","into","into","missing_unsafe","record_literal_missing_fields","record_pattern_missing_fields","suggested_text","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unsafe_expressions","match_expr","method_call_expr","missed_fields","record","uncovered_patterns","variant","Closure","Diagnostics","DisplaySourceCodeError","DisplaySourceCodeError","DisplayTarget","FmtError","HirDisplay","HirDisplayError","HirDisplayWrapper","HirFormatter","NotSized","PathNotFound","Sized","SizedByDefault","SourceCode","Test","UnknownType","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","db","display","display_source_code","display_test","display_truncated","eq","equivalent","fmt","fmt","from","from","from","from","from","from","from","hir_fmt","into","into","into","into","into","into","into_displayable","ne","omit_verbose_types","should_truncate","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","write_bounds_like_dyn_trait_with_prefix","write_char","write_fmt","write_joined","write_str","write_visibility","module_id","0","anchor","Adt","Array","Dyn","Filter","ForeignType","Function","IncludeBlock","InherentImpls","LookupMode","MethodCall","Never","None","Path","RawPtr","ReceiverAdjustments","Scalar","Slice","Str","TraitImpls","TyFingerprint","Unit","Unnameable","VisibleFromModule","all_impls","all_impls","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","def_crates","default","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","for_inherent_impl","for_self_ty","for_self_ty_without_blanket_impls","for_trait","for_trait_and_self_ty","for_trait_impl","from","from","from","from","from","from","from","from","hash","implements_trait","implements_trait_unique","inherent_impl_crates_query","into","into","into","into","into","into","iterate_method_candidates_dyn","iterate_path_candidates","lookup_impl_method","ne","ne","ne","resolve_indexing_op","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","BuiltinFloat","BuiltinInt","BuiltinUint","F32","F32","F64","F64","FloatTy","I128","I128","I16","I16","I32","I32","I64","I64","I8","I8","IntTy","Isize","Isize","U128","U128","U16","U16","U32","U32","U64","U64","U8","U8","UintTy","Usize","Usize","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","float_ty_to_string","fmt","fmt","fmt","fmt","fmt","fmt","fold_with","fold_with","fold_with","from","from","from","from","from","from","from_suffix","from_suffix","from_suffix","hash","hash","hash","hash","hash","hash","int_ty_to_string","into","into","into","into","into","into","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","shifted_in","shifted_in","shifted_in","shifted_in_from","shifted_in_from","shifted_in_from","shifted_out","shifted_out","shifted_out","shifted_out_to","shifted_out_to","shifted_out_to","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","uint_ty_to_string","visit_with","visit_with","visit_with","Fn","FnMut","FnOnce","FnTrait","TraitEnvironment","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","empty","env","eq","eq","equivalent","equivalent","fmt","fmt","from","from","get_id","hash","hash","into","into","krate","ne","to_owned","to_owned","traits_in_scope_from_clauses","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["hir_tyhir_ty::Adjust","","","hir_ty::AutoBorrow","","hir_ty::BindingMode","hir_ty::CallableDefId","","","hir_ty::ImplTraitId","","","","hir_ty::InferenceDiagnostic","","","","","hir_ty::ParamKind","hir_ty::Scalar","","","hir_ty::TyDefId","","","hir_ty::ValueTyDefId","","","","","","hir_ty::consteval","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_ty::consteval::ComputedExpr","","hir_ty::consteval::ConstEvalError","","","hir_ty::db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_ty::diagnostics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_ty::diagnostics::BodyValidationDiagnostic","","","","","","hir_ty::display","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_ty::display::DisplayTarget","hir_ty::display::HirDisplayError","hir_ty::display::SizedByDefault","hir_ty::method_resolution","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_ty::method_resolution::TyFingerprint","","","","","","hir_ty::method_resolution::VisibleFromModule","","hir_ty::primitive","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hir_ty::traits","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","Represents coercing a value to a different type of value.","The id for an Abstract Data Type (i.e. structs, unions and …","","","","","","","","Binding modes inferred for patterns. …","","Take the address and produce either a <code>&amp;</code> or <code>*</code> pointer.","Identifies a particular bound variable within a binder. …","","","","A function signature as seen by type inference: Several …","","","The <code>Cast</code> trait is used to make annoying upcasts between …","","","","","","","","","","","References the binder at the given depth. The index is a de","Dereference once, producing a place.","<code>impl Trait</code> is disallowed and will be an error.","","","","","","","","","","","A wrapper for the substs on a Fn.","","","","","","","","","Innermost index.","","","","","The result of type inference: A mapping from expressions …","","","","","","","","","","Mutable","Whether a type is mutable or not.","Go from ! to any type.","","Immutable","One level higher than the innermost index.","<code>impl Trait</code> gets lowered into an opaque type that doesn’t …","","","<code>impl Trait</code> gets lowered into a type variable. Used for …","","","","A polymorphic function signature.","","","","","Converts from T to *T.","","Converts from T to &amp;T.","","","Safe","Whether a function is safe or not.","Types of scalar values.","","","","","","","","","","This is a builder for <code>Ty</code> or anything that needs a …","","","","","Represents some extra knowledge we may have about the type …","","","This allows walking structures that contain types to do …","","","Unsafe","","<code>impl Trait</code> gets lowered into a variable that can unify …","","","","","Returns an iterator over the whole super trait hierarchy …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","True if this variable is bound within the <code>amount</code> innermost …","","","","","","","","","","","","","Cast a value to type <code>U</code> using <code>CastTo</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constant evaluation details","","","","","The home of <code>HirDatabase</code>, which is the Salsa database …","","Debruijn index, which identifies the binder.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Depth of the De Bruijn index, counting from 0 starting with","Type inference-based diagnostics.","","The <code>HirDisplay</code> trait, which serves two purposes: Turning …","If this is a <code>dyn Trait</code>, returns that trait.","","","","","","","","","","","","","","","","","","","","","","","","","FIXME: Get rid of this, it’s not a good abstraction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Index within the binder.","Return the index of the bound variable, but only if it is …","Return the index of the bound variable, but only if it is …","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","This module is concerned with finding methods that a given …","","","","","","","","","","","","","","","","","","","","Creates a new bound variable.","Creates a new de Bruijn index with a given depth.","","Return an index of a parameter in the generic type …","","","","","","","","","Stores the types which were implicitly dereferenced in …","","","","A few helper functions for dealing with primitives.","","","","","","‘Canonicalizes’ the <code>t</code> by replacing any errors with new …","","","Update this index in place by shifting it “in” through …","Update in place by shifting out from <code>amount</code> binders.","","","","","Adjusts the debruijn index (see <code>DebruijnIndex::shifted_in</code>).","Returns the resulting index when this value is moved into …","","","","","","","","Adjusts the debruijn index (see <code>DebruijnIndex::shifted_in</code>).","Adds <code>outer_binder</code> levels to the <code>self</code> index. Intuitively, …","","","","","","","","Adjusts the debruijn index (see <code>DebruijnIndex::shifted_in</code>).","Returns the resulting index when this value is moved out …","","","","","","","","Adjusts the debruijn index (see <code>DebruijnIndex::shifted_in</code>).","","Subtracts <code>outer_binder</code> levels from the <code>self</code> index. …","","","","","","","","","","","","","Wraps the bound variable in a constant.","","","Wrap the bound variable in a lifetime.","","","","","","","","","","","","","","","","","","","","","","","","","Casts the bound variable to a type.","","","","","","Trait solving using Chalk.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","For each pattern record the type it resolves to.","Note: Conceptually, it’s thinkable that we could be in a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","True if the binder identified by this index is within the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extension trait for <code>Const</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Interns a constant scalar with the given type","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is a <code>Const</code> unknown?","","","","","","","","","","","","","","","","","","","","Interns a possibly-unknown target usize","","","","","","","","","","","","","","","","","","","","Representative struct for the query group.","","","","","","","","","","","","","","","","","","This exists just for Chalk, because Chalk just has a …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","","","","Collects all crates in the dependency graph that have …","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Display types for inlays, doc popups, autocompletion, etc…","","Errors that can occur when generating source code","","<code>FmtError</code> is required to be compatible with …","","","","","","","","","Display types for inserting them in source files. The …","Only for test purpose to keep real types","","","","","","","","","","","","","","","","","","","Returns a <code>Display</code>able type that is human-readable. Use …","Returns a String representation of <code>self</code> that can be …","Returns a String representation of <code>self</code> for test purposes","Returns a <code>Display</code>able type that is human-readable and …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns a <code>Display</code>able type that is human-readable.","","","","","","","","","","","","","","","","","","","","","","","","","","","This allows using the <code>write!</code> macro directly with a …","","","","","","","","","","Filter for results that are visible from the given module","","","Include impls from the given block.","Inherent impls defined in some crate.","Whether we’re looking up a dotted method call (like …","Looking up a method call like <code>v.len()</code>: We only consider …","","Do nothing special in regards visibility","Looking up a path like <code>Vec::new</code> or <code>Vec::default</code>: We …","","","","","","Trait impls defined or available in some crate.","This is used as a key for indexing impls.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a TyFingerprint for looking up an inherent impl. …","","Queries all trait impls for the given type.","Queries all impls of the given trait.","Queries all impls of <code>trait_</code> that may apply to <code>self_ty</code>.","Creates a TyFingerprint for looking up a trait impl.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Returns the receiver type for the index trait call.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Different signed int types.","Different unsigned int types.","","","","","Different kinds of float types.","","","","","","","","","","","Different signed int types.","","","","","","","","","","","","","Different unsigned int types.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A set of clauses that we assume to be true. E.g. if we are …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","",""],"i":[1,2,0,0,0,3,0,0,0,4,0,0,0,5,6,0,7,3,0,0,0,0,0,0,5,0,0,0,8,0,9,0,0,0,6,10,0,0,11,9,0,5,12,0,0,0,0,0,11,9,12,0,0,0,0,13,0,0,0,0,0,0,5,12,0,0,0,0,7,14,15,0,6,7,15,13,10,0,0,10,0,0,6,0,0,0,0,0,16,14,16,4,0,17,0,0,0,9,11,9,0,0,0,0,0,0,0,0,0,0,0,8,3,0,5,9,17,0,10,0,0,0,18,0,19,20,19,20,19,20,19,20,19,20,19,20,19,20,21,21,18,19,20,0,0,18,5,17,15,1,22,13,2,12,8,14,7,23,6,16,21,24,25,10,11,3,9,26,4,27,18,5,17,15,1,22,13,2,12,8,14,7,23,6,16,21,24,25,10,11,3,9,26,4,27,22,18,18,18,18,18,18,18,19,20,19,20,24,28,5,17,15,1,22,13,2,12,8,14,7,23,6,16,21,24,10,11,3,9,26,4,27,5,17,15,1,22,13,2,12,8,14,7,23,6,16,21,24,10,11,3,9,26,4,27,5,17,15,1,22,13,24,24,24,0,24,0,2,0,0,25,22,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,18,14,21,13,0,21,0,19,20,5,17,15,1,22,13,2,12,8,14,7,23,6,16,21,24,10,11,3,9,26,4,27,19,20,5,17,15,1,22,13,2,12,8,14,7,23,6,16,21,24,10,11,3,9,26,4,27,21,21,21,18,18,18,18,5,17,15,1,22,13,2,12,8,14,7,23,6,16,21,24,25,10,11,3,9,26,4,27,18,5,17,15,1,13,2,26,18,5,17,15,1,22,13,2,12,29,30,8,14,7,23,6,16,21,24,25,10,11,11,11,11,3,3,3,3,3,3,3,9,9,9,9,9,9,9,26,4,27,0,0,26,0,26,0,24,24,24,0,5,17,15,1,22,13,2,12,23,6,16,24,11,3,9,4,27,22,31,20,32,33,34,35,36,37,38,39,40,26,41,38,18,19,20,25,21,21,22,22,22,24,24,24,24,24,24,24,24,24,24,24,24,24,24,18,5,17,15,1,22,13,2,12,8,14,7,23,6,16,21,24,25,10,11,3,9,26,4,27,0,19,20,19,20,19,20,19,20,37,23,11,24,25,25,0,0,0,21,5,1,22,13,2,8,14,7,23,6,16,21,11,3,9,26,4,27,22,13,25,0,26,5,17,15,1,22,13,24,21,21,21,18,0,24,24,18,24,18,0,25,26,13,13,5,17,15,1,22,13,13,2,26,5,17,15,1,22,13,13,2,26,5,17,15,1,22,13,13,2,26,5,17,15,1,22,13,13,2,26,18,0,19,20,18,0,24,23,0,0,22,26,0,22,5,17,15,1,22,13,2,12,8,14,7,23,6,16,21,24,10,11,3,9,26,4,27,0,22,42,32,42,18,32,0,18,5,17,15,1,22,13,2,12,8,14,7,23,6,16,21,24,25,10,11,3,9,26,4,27,18,5,17,15,1,22,13,2,12,8,14,7,23,6,16,21,24,25,10,11,3,9,26,4,27,18,24,18,5,17,15,1,22,13,2,12,8,14,7,23,6,16,21,24,25,10,11,3,9,26,4,27,21,21,21,21,25,18,18,18,18,24,24,21,21,5,17,15,1,13,2,43,2,44,45,31,20,32,46,33,38,47,40,26,25,25,25,25,13,5,15,1,2,48,49,50,51,52,53,54,55,56,57,58,57,58,59,59,60,61,59,62,63,64,65,66,67,68,69,70,71,72,73,74,0,0,0,0,75,76,75,75,75,75,76,77,75,76,77,75,76,75,76,75,76,77,75,76,75,76,0,77,75,76,76,77,75,76,0,77,75,76,78,77,75,76,77,77,75,76,76,77,75,76,77,75,76,77,75,76,0,0,0,79,80,81,82,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,84,84,85,86,87,88,89,90,91,84,85,84,85,92,85,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,86,87,88,89,90,91,92,85,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,86,87,88,89,90,91,84,85,86,87,88,89,90,91,86,87,88,89,90,91,91,84,85,84,85,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,86,87,88,89,90,91,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,123,124,125,126,127,128,129,130,131,132,84,85,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,86,87,88,89,90,91,85,84,85,84,84,85,85,92,85,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,86,87,88,89,89,90,90,91,91,86,87,88,89,90,91,84,85,84,85,84,85,86,87,88,89,90,91,84,85,84,85,84,85,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,84,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,84,85,92,85,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,86,87,88,89,90,91,84,85,84,85,84,85,84,85,84,85,85,86,87,88,89,90,91,85,91,84,85,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,94,96,98,103,106,84,85,84,85,86,87,88,89,90,91,84,85,84,85,84,85,84,85,84,85,84,84,85,92,85,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,86,87,88,89,90,91,92,85,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,86,87,88,89,90,91,84,85,92,85,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,86,87,88,89,90,91,84,85,0,0,133,133,133,0,133,134,135,133,134,135,133,135,134,135,135,133,134,135,135,135,135,0,134,133,134,135,0,0,0,135,133,134,135,133,134,135,133,134,135,0,136,137,138,138,136,138,139,140,0,141,0,141,0,0,0,0,142,139,142,0,140,140,139,143,141,144,140,139,142,143,141,144,140,139,142,140,142,140,142,143,145,145,145,145,142,142,144,139,143,141,141,144,140,139,142,145,143,141,144,140,139,142,145,142,143,143,140,142,144,143,141,144,140,139,142,143,141,144,140,139,142,143,141,144,140,139,142,0,143,143,143,143,0,146,147,148,149,149,149,150,149,149,150,0,0,151,149,150,151,149,0,149,149,149,0,0,149,149,0,152,153,149,152,153,151,150,154,149,152,153,151,150,154,149,151,150,154,149,151,150,154,0,154,149,152,153,151,149,152,153,151,149,152,153,151,154,149,153,152,152,152,149,149,152,153,151,150,150,150,154,149,0,0,0,149,152,153,151,150,154,0,0,0,149,152,153,0,149,151,150,154,149,152,153,151,150,154,149,152,153,151,150,154,149,152,153,151,150,154,155,156,157,158,159,160,161,162,0,0,0,163,164,163,164,0,165,166,165,166,165,166,165,166,165,166,0,165,166,167,168,167,168,167,168,167,168,167,168,0,167,168,165,167,163,166,168,164,165,167,163,166,168,164,165,167,163,166,168,164,165,167,163,166,168,164,165,167,163,166,168,164,165,167,163,166,168,164,165,167,163,166,168,164,0,165,167,163,166,168,164,165,167,163,165,167,163,166,168,164,166,168,164,165,167,163,166,168,164,0,165,167,163,166,168,164,165,167,163,166,168,164,165,167,163,165,167,163,165,167,163,165,167,163,165,167,163,166,168,164,165,167,163,166,168,164,165,167,163,166,168,164,165,167,163,166,168,164,0,165,167,163,169,169,169,0,0,170,169,170,169,170,169,170,169,170,170,170,169,170,169,170,169,170,169,169,170,169,170,169,170,170,170,169,170,170,169,170,169,170,169],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["hirdatabase",8],["adtid",4]],["tybuilder",3,[["adtid",4]]]],[[["defdatabase",8],["traitid",3]],["smallvec",3]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4,[["builtintype",4]]]],[[["",0]],["option",4,[["builtintype",4]]]],[[["",0],["hirdatabase",8]],["option",4,[["functionid",3]]]],[[["",0],["hirdatabase",8]],["option",4,[["functionid",3]]]],[[["",0],["hirdatabase",8]],["option",4,[["genericdefid",4]]]],[[["",0],["hirdatabase",8]],["option",4,[["genericdefid",4]]]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4,[["substitution",6]]]],[[["",0]],["option",4,[["substitution",6]]]],[[["",0],["exprid",6]],["option",4,[["associtemid",4]]]],[[["",0],["patid",6]],["option",4,[["associtemid",4]]]],[[["hirdatabase",8],["typealiasid",3]],["tybuilder",3,[["typealiasid",3]]]],[[["",0],["hirdatabase",8]],["option",4,[["traitid",3]]]],[[["",0],["hirdatabase",8]],["option",4,[["traitid",3]]]],[[["hirdatabase",8],["genericdefid",4],["typens",4]],["option",4]],[[["hirdatabase",8],["arc",3,[["traitenvironment",3]]],["canonical",6,[["ty",6]]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["debruijnindex",3]],["bool",0]],[[],["projectionty",6]],[[]],[[],["ty",6]],[[],["substitution",6]],[[],["ty",6]],[[],["traitref",6]],[[["builtintype",4]],["ty",6]],[[["",0],["hirdatabase",8]],["option",4,[["callabledefid",4]]]],[[["",0],["hirdatabase",8]],["option",4,[["callabledefid",4]]]],[[["",0],["hirdatabase",8]],["option",4,[["callablesig",3]]]],[[["",0],["hirdatabase",8]],["option",4,[["callablesig",3]]]],[[]],[[]],[[["",0]],["scalar",4]],[[["",0]],["safety",4]],[[["",0]],["mutability",4]],[[["",0]],["adtid",3]],[[["",0]],["boundvar",3]],[[["",0]],["debruijnindex",3]],[[["",0]],["fnsubst",3]],[[["",0]],["tyvariablekind",4]],[[["",0]],["paramkind",4]],[[["",0]],["bindingmode",4]],[[["",0]],["inferencediagnostic",4]],[[["",0]],["adjustment",3]],[[["",0]],["adjust",4]],[[["",0]],["autoborrow",4]],[[["",0]],["inferenceresult",3]],[[["",0]],["interner",3]],[[["",0]],["impltraitloweringmode",4]],[[["",0]],["callabledefid",4]],[[["",0]],["tydefid",4]],[[["",0]],["valuetydefid",4]],[[["",0]],["callablesig",3]],[[["",0]],["impltraitid",4]],[[["",0]],["returntypeimpltraits",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["scalar",4]],["ordering",4]],[[["",0],["safety",4]],["ordering",4]],[[["",0],["mutability",4]],["ordering",4]],[[["",0],["adtid",3]],["ordering",4]],[[["",0],["boundvar",3]],["ordering",4]],[[["",0],["debruijnindex",3]],["ordering",4]],[[["",0],["interner",3]],["ordering",4]],[[],["constdata",3]],[[],["bool",0]],null,[[]],[[["hirdatabase",8],["arc",3,[["traitenvironment",3]]],["canonical",6]],["bool",0]],[[["",0],["unificationdatabase",8],["",0]],["bool",0]],[[["hirdatabase",8],["arc",3,[["traitenvironment",3]]],["canonical",6]],["bool",0]],null,null,null,[[["adtid",3,[["interner",3]]],["formatter",3]],["option",4,[["result",6]]]],[[["aliasty",4],["formatter",3]],["option",4,[["result",6]]]],[[["assoctypeid",3,[["interner",3]]],["formatter",3]],["option",4,[["result",6]]]],[[["canonicalvarkinds",3],["formatter",3]],["option",4,[["result",6]]]],[[["closureid",3],["formatter",3]],["option",4,[["result",6]]]],[[["const",3],["formatter",3]],["option",4,[["result",6]]]],[[["constraints",3],["formatter",3]],["option",4,[["result",6]]]],[[["fndefid",3],["formatter",3]],["option",4,[["result",6]]]],[[["genericarg",6],["formatter",3]],["option",4,[["result",6]]]],[[["goal",3],["formatter",3]],["option",4,[["result",6]]]],[[["goals",3],["formatter",3]],["option",4,[["result",6]]]],[[["lifetime",3],["formatter",3]],["option",4,[["result",6]]]],[[["opaquety",3],["formatter",3]],["option",4,[["result",6]]]],[[["opaquetyid",3],["formatter",3]],["option",4,[["result",6]]]],[[["programclause",3],["formatter",3]],["option",4,[["result",6]]]],[[["programclauseimplication",3],["formatter",3]],["option",4,[["result",6]]]],[[["programclauses",3],["formatter",3]],["option",4,[["result",6]]]],[[["projectionty",3],["formatter",3]],["option",4,[["result",6]]]],[[["quantifiedwhereclauses",3],["formatter",3]],["option",4,[["result",6]]]],[[["separatortraitref",3],["formatter",3]],["option",4,[["result",6]]]],[[["substitution",3],["formatter",3]],["option",4,[["result",6]]]],[[["traitid",3,[["interner",3]]],["formatter",3]],["option",4,[["result",6]]]],[[["ty",3],["formatter",3]],["option",4,[["result",6]]]],[[["variablekinds",3],["formatter",3]],["option",4,[["result",6]]]],[[["variablekinds",3],["formatter",3]],["option",4,[["result",6]]]],[[["hirdatabase",8],["tydefid",4]],["tybuilder",3,[["binders",6,[["ty",6]]]]]],[[]],[[],["inferenceresult",3]],[[],["u32",0]],null,null,null,[[["",0]],["option",4,[["traitid",3]]]],[[["",0]],["option",4,[["traitid",3]]]],[[["",0],["scalar",4]],["bool",0]],[[["",0],["safety",4]],["bool",0]],[[["",0],["mutability",4]],["bool",0]],[[["",0],["adtid",3]],["bool",0]],[[["",0],["boundvar",3]],["bool",0]],[[["",0],["debruijnindex",3]],["bool",0]],[[["",0],["fnsubst",3]],["bool",0]],[[["",0],["tyvariablekind",4]],["bool",0]],[[["",0],["paramkind",4]],["bool",0]],[[["",0],["bindingmode",4]],["bool",0]],[[["",0],["inferencediagnostic",4]],["bool",0]],[[["",0],["adjustment",3]],["bool",0]],[[["",0],["adjust",4]],["bool",0]],[[["",0],["autoborrow",4]],["bool",0]],[[["",0],["inferenceresult",3]],["bool",0]],[[["",0],["interner",3]],["bool",0]],[[["",0],["impltraitloweringmode",4]],["bool",0]],[[["",0],["callabledefid",4]],["bool",0]],[[["",0],["tydefid",4]],["bool",0]],[[["",0],["valuetydefid",4]],["bool",0]],[[["",0],["callablesig",3]],["bool",0]],[[["",0],["impltraitid",4]],["bool",0]],[[["",0],["returntypeimpltraits",3]],["bool",0]],[[["",0],["ty",6]],["bool",0]],[[["",0],["ty",6]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],null,[[["",0]]],[[["",0],["exprid",6]],["option",4,[["fieldid",3]]]],[[]],[[["debruijnindex",3],["usize",0]]],[[["hirdatabase",8]]],[[]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["callablesig",3]],["ty",6]],[[["typefolder",8],["debruijnindex",3]],["result",4,[["scalar",4]]]],[[["typefolder",8],["debruijnindex",3]],["result",4,[["safety",4]]]],[[["typefolder",8],["debruijnindex",3]],["result",4,[["mutability",4]]]],[[["typefolder",8],["debruijnindex",3]],["result",4,[["adtid",3]]]],[[["typefolder",8],["debruijnindex",3]],["result",4,[["debruijnindex",3]]]],[[["typefolder",8],["debruijnindex",3]],["result",4,[["fnsubst",3]]]],[[["typefolder",8],["debruijnindex",3]],["result",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["internedcallabledefid",3]]],[[["internedopaquetyid",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["enumvariantid",3]],["callabledefid",4]],[[["functionid",3]],["callabledefid",4]],[[["structid",3]],["callabledefid",4]],[[]],[[["typealiasid",3]],["tydefid",4]],[[["unionid",3]],["tydefid",4]],[[["enumid",3]],["tydefid",4]],[[["structid",3]],["tydefid",4]],[[["adtid",4]],["tydefid",4]],[[["builtintype",4]],["tydefid",4]],[[]],[[["staticid",3]],["valuetydefid",4]],[[["functionid",3]],["valuetydefid",4]],[[["structid",3]],["valuetydefid",4]],[[]],[[["unionid",3]],["valuetydefid",4]],[[["enumvariantid",3]],["valuetydefid",4]],[[["constid",3]],["valuetydefid",4]],[[]],[[]],[[]],[[["assoctypeid",6]],["typealiasid",3]],[[["chalktraitid",6]],["traitid",3]],[[["fnpointer",6]],["callablesig",3]],[[["foreigndefid",6]],["typealiasid",3]],[[["vec",3,[["ty",6]]],["ty",6],["bool",0]],["callablesig",3]],[[["hirdatabase",8],["placeholderindex",6]],["typeorconstparamid",3]],[[],["genericargdata",4]],[[],["goaldata",4]],[[]],null,[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["hirformatter",3]],["result",4,[["hirdisplayerror",4]]]],[[["",0],["hirformatter",3]],["result",4,[["hirdisplayerror",4]]]],[[["",0],["hirformatter",3]],["result",4,[["hirdisplayerror",4]]]],[[["",0],["hirformatter",3]],["result",4,[["hirdisplayerror",4]]]],[[["",0],["hirformatter",3]],["result",4,[["hirdisplayerror",4]]]],[[["",0],["hirformatter",3]],["result",4,[["hirdisplayerror",4]]]],[[["",0],["hirformatter",3]],["result",4,[["hirdisplayerror",4]]]],[[["",0],["hirformatter",3]],["result",4,[["hirdisplayerror",4]]]],[[["",0],["hirformatter",3]],["result",4,[["hirdisplayerror",4]]]],[[["",0],["hirformatter",3]],["result",4,[["hirdisplayerror",4]]]],[[["",0],["hirformatter",3]],["result",4,[["hirdisplayerror",4]]]],[[["",0],["hirformatter",3]],["result",4,[["hirdisplayerror",4]]]],[[["",0],["hirformatter",3]],["result",4,[["hirdisplayerror",4]]]],[[["",0]],["traitid",3]],[[["",0]],["traitid",3]],[[["hirdatabase",8],["implid",3]],["tybuilder",3,[["binders",6,[["ty",6]]]]]],[[["",0],["hirdatabase",8]],["option",4,[["vec",3,[["quantifiedwhereclause",6]]]]]],[[["",0],["hirdatabase",8]],["option",4,[["vec",3,[["quantifiedwhereclause",6]]]]]],null,[[["",0],["exprid",6]],["ty",6]],[[["",0],["patid",6]],["ty",6]],null,[[["debruijnindex",3]],["option",4,[["usize",0]]]],[[],["option",4,[["usize",0]]]],[[],["result",4]],[[["constdata",3]]],[[],["result",4]],[[["genericargdata",4]]],[[],["result",4]],[[["goaldata",4]]],[[],["result",4]],[[["lifetimedata",4]]],[[["programclausedata",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["tykind",4]]],[[],["result",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["hirdatabase",8],["functionid",3]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],null,[[["hirdatabase",8]],["crateid",3]],[[],["lifetimedata",4]],[[["",0],["typeref",4]],["ty",6]],[[["",0],["typeref",4]]],[[["hirdatabase",8],["placeholderindex",6]],["lifetimeparamid",3]],[[["hasinterner",8]],["canonical",6,[["hasinterner",8]]]],null,[[["",0],["exprid",6]],["option",4]],[[["",0],["scalar",4]],["bool",0]],[[["",0],["adtid",3]],["bool",0]],[[["",0],["boundvar",3]],["bool",0]],[[["",0],["debruijnindex",3]],["bool",0]],[[["",0],["fnsubst",3]],["bool",0]],[[["",0],["paramkind",4]],["bool",0]],[[["",0],["bindingmode",4]],["bool",0]],[[["",0],["inferencediagnostic",4]],["bool",0]],[[["",0],["adjustment",3]],["bool",0]],[[["",0],["adjust",4]],["bool",0]],[[["",0],["autoborrow",4]],["bool",0]],[[["",0],["inferenceresult",3]],["bool",0]],[[["",0],["callabledefid",4]],["bool",0]],[[["",0],["tydefid",4]],["bool",0]],[[["",0],["valuetydefid",4]],["bool",0]],[[["",0],["callablesig",3]],["bool",0]],[[["",0],["impltraitid",4]],["bool",0]],[[["",0],["returntypeimpltraits",3]],["bool",0]],[[["debruijnindex",3],["usize",0]],["boundvar",3]],[[["u32",0]],["debruijnindex",3]],[[["hirdatabase",8],["resolver",3]]],[[["hirdatabase",8],["typeorconstparamid",3]],["option",4,[["usize",0]]]],[[["",0]]],[[["",0],["scalar",4]],["option",4,[["ordering",4]]]],[[["",0],["safety",4]],["option",4,[["ordering",4]]]],[[["",0],["mutability",4]],["option",4,[["ordering",4]]]],[[["",0],["adtid",3]],["option",4,[["ordering",4]]]],[[["",0],["boundvar",3]],["option",4,[["ordering",4]]]],[[["",0],["debruijnindex",3]],["option",4,[["ordering",4]]]],[[["",0],["interner",3]],["option",4,[["ordering",4]]]],null,null,[[["",0]]],[[["hirdatabase",8]],["substitution",6]],null,[[],["programclausedata",3]],[[]],[[]],[[]],[[["",0]],["usize",0]],[[["",0]],["canonical",6]],null,[[["",0]],["ty",6]],[[["",0]]],[[["",0]]],[[]],[[]],[[]],[[]],[[],["boundvar",3]],[[],["debruijnindex",3]],[[]],[[]],[[]],[[["debruijnindex",3]]],[[["debruijnindex",3]]],[[["debruijnindex",3]]],[[["debruijnindex",3]]],[[["debruijnindex",3]],["boundvar",3]],[[["debruijnindex",3]],["debruijnindex",3]],[[["debruijnindex",3]]],[[["debruijnindex",3]]],[[["debruijnindex",3]]],[[],["result",4,[["nosolution",3]]]],[[],["result",4,[["nosolution",3]]]],[[],["result",4,[["nosolution",3]]]],[[],["result",4,[["nosolution",3]]]],[[],["option",4,[["boundvar",3]]]],[[],["option",4,[["debruijnindex",3]]]],[[],["result",4,[["nosolution",3]]]],[[],["result",4,[["nosolution",3]]]],[[],["result",4,[["nosolution",3]]]],[[["debruijnindex",3]],["result",4,[["nosolution",3]]]],[[["debruijnindex",3]],["result",4,[["nosolution",3]]]],[[["debruijnindex",3]],["result",4,[["nosolution",3]]]],[[["debruijnindex",3]],["result",4,[["nosolution",3]]]],[[["debruijnindex",3]],["option",4,[["boundvar",3]]]],[[["debruijnindex",3]],["result",4,[["nosolution",3]]]],[[["debruijnindex",3]],["option",4,[["debruijnindex",3]]]],[[["debruijnindex",3]],["result",4,[["nosolution",3]]]],[[["debruijnindex",3]],["result",4,[["nosolution",3]]]],[[["ty",6]],["ty",6]],[[],["lifetime",6]],[[["",0]],["ty",6]],[[["",0]],["ty",6]],[[["hirdatabase",8]],["tybuilder",3]],[[["substitution",6],["usize",0]],["substitution",6]],[[]],null,[[["typealiasid",3]],["assoctypeid",6]],[[["traitid",3]],["chalktraitid",6]],[[["ty",3]],["const",3]],[[["",0]],["fnpointer",6]],[[["typealiasid",3]],["foreigndefid",6]],[[],["lifetime",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["hirdatabase",8],["typeorconstparamid",3]],["placeholderindex",6]],[[],["ty",3]],[[["",0],["hirdatabase",8]],["traitid",3]],[[["",0],["hirdatabase",8]],["traitid",3]],[[["",0],["hirdatabase",8]],["traitref",6]],[[["hirdatabase",8],["traitid",3]],["tybuilder",3,[["traitid",3]]]],[[["",0],["hirdatabase",8]],["traitref",6]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",0]],["tybuilder",3,[["tuple",3]]]],[[],["tydata",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["exprid",6]],["option",4,[["typemismatch",3]]]],[[["",0],["patid",6]],["option",4,[["typemismatch",3]]]],null,null,null,[[],["ty",6]],[[["substitution",6]]],[[],["ty",6]],[[["hirdatabase",8],["valuetydefid",4]],["tybuilder",3,[["binders",6,[["ty",6]]]]]],[[]],[[]],[[["",0],["exprid",6]],["option",4,[["variantid",4]]]],[[["",0],["patid",6]],["option",4,[["variantid",4]]]],[[["",0],["typevisitor",8],["debruijnindex",3]],["controlflow",4]],[[["",0],["typevisitor",8],["debruijnindex",3]],["controlflow",4]],[[["",0],["typevisitor",8],["debruijnindex",3]],["controlflow",4]],[[["",0],["typevisitor",8],["debruijnindex",3]],["controlflow",4]],[[["",0],["typevisitor",8],["debruijnindex",3]],["controlflow",4]],[[["",0],["typevisitor",8],["debruijnindex",3]],["controlflow",4]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0],["debruijnindex",3]]],[[["impltraitloweringmode",4]]],[[["",0],["debruijnindex",3]]],[[["paramloweringmode",4]]],[[["debruijnindex",3]],["bool",0]],[[["",0],["variance",4],["scalar",4],["scalar",4]],["result",4,[["nosolution",3]]]],[[["",0],["variance",4],["mutability",4],["mutability",4]],["result",4,[["nosolution",3]]]],[[["",0],["variance",4],["adtid",3],["adtid",3]],["result",4,[["nosolution",3]]]],[[["",0],["variance",4],["fnsubst",3],["fnsubst",3]],["result",4,[["nosolution",3]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["constevalerror",4]],[[["",0]],["computedexpr",4]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[["",0],["constevalerror",4]],["bool",0]],[[["",0],["computedexpr",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["exprid",6],["constevalctx",3]],["result",4,[["computedexpr",4],["constevalerror",4]]]],null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["constscalar",4],["ty",6]],["const",6]],[[]],[[]],[[]],[[["",0]],["bool",0]],null,[[["",0],["constevalerror",4]],["bool",0]],[[["",0],["computedexpr",4]],["bool",0]],null,null,[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["ty",6]],["const",6]],[[["ty",6]],["genericarg",6]],[[["option",4,[["u128",0]]]],["const",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["adtid",3,[["interner",3]]]],["variances",3,[["interner",3]]]],[[["",0],["adtid",3,[["interner",3]]]],["variances",3,[["interner",3]]]],null,[[["",0]],["internid",3]],[[["",0]],["internid",3]],[[["",0]],["internid",3]],[[["",0]],["internid",3]],[[["",0]],["internid",3]],[[["",0]],["internid",3]],[[["",0],["assoctypeid",3,[["interner",3]]]],["arc",3,[["associatedtydatum",3,[["interner",3]]]]]],null,[[["",0],["crateid",3],["associatedtyvalueid",3,[["interner",3]]]],["arc",3,[["associatedtyvalue",3,[["interner",3]]]]]],nullcallabledefid",4]],["polyfnsig",6]],null,[[["",0]],["internedtypeorconstparamid",3]],[[["",0]],["internedlifetimeparamid",3]],[[["",0]],["internedconstparamid",3]],[[["",0]],["internedopaquetyid",3]],[[["",0]],["internedclosureid",3]],[[["",0]],["internedcallabledefid",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["internedcallabledefid",3]],["ordering",4]],[[["",0],["constid",3]],["result",4,[["computedexpr",4],["constevalerror",4]]]],null,[[["",0],["constparamid",3]],["ty",6]],null,[[],["inferqueryquery",3]],[[],["tyquery",3]],[[],["valuetyquery",3]],[[],["implselftyquery",3]],[[],["constparamtyquery",3]],[[],["constevalquery",3]],[[],["impltraitquery",3]],[[],["fieldtypesquery",3]],[[],["callableitemsignaturequery",3]],[[],["returntypeimpltraitsquery",3]],[[],["genericpredicatesforparamquery",3]],[[],["genericpredicatesquery",3]],[[],["traitenvironmentquery",3]],[[],["genericdefaultsquery",3]],[[],["inherentimplsincratequery",3]],[[],["inherentimplsinblockquery",3]],[[],["inherentimplcratesquery",3]],[[],["traitimplsincratequery",3]],[[],["traitimplsinblockquery",3]],[[],["traitimplsindepsquery",3]],[[],["interncallabledefquery",3]],[[],["interncallabledeflookupquery",3]],[[],["interntypeorconstparamidquery",3]],[[],["interntypeorconstparamidlookupquery",3]],[[],["internlifetimeparamidquery",3]],[[],["internlifetimeparamidlookupquery",3]],[[],["internimpltraitidquery",3]],[[],["internimpltraitidlookupquery",3]],[[],["internclosurequery",3]],[[],["internclosurelookupquery",3]],[[],["associatedtydataquery",3]],[[],["traitdatumquery",3]],[[],["structdatumquery",3]],[[],["impldatumquery",3]],[[],["fndefdatumquery",3]],[[],["fndefvariancequery",3]],[[],["adtvariancequery",3]],[[],["associatedtyvaluequery",3]],[[],["traitsolvequeryquery",3]],[[],["programclausesforchalkenvquery",3]],[[["",0],["internedtypeorconstparamid",3]],["bool",0]],[[["",0],["internedlifetimeparamid",3]],["bool",0]],[[["",0],["internedconstparamid",3]],["bool",0]],[[["",0],["internedopaquetyid",3]],["bool",0]],[[["",0],["internedclosureid",3]],["bool",0]],[[["",0],["internedcallabledefid",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["variantid",4]],["arc",3,[["arenamap",3,[["localfieldid",6],["binders",6,[["ty",6]]]]]]]],null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["hirdatabase",8],["databasekeyindex",3],["formatter",3]],["result",6]],[[["",0],["crateid",3],["fndefid",6]],["arc",3,[["fndefdatum",3,[["interner",3]]]]]],null,[[["",0],["fndefid",6]],["variances",3,[["interner",3]]]],[[["",0],["fndefid",3,[["interner",3]]]],["variances",3,[["interner",3]]]],null,[[["",0],["runtime",3],["fnmut",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["opaquetyid",6]]],[[]],[[["closureid",3,[["interner",3]]]]],[[["fndefid",6]]],[[]],[[["internid",3]]],[[["internid",3]]],[[["internid",3]]],[[["internid",3]]],[[["internid",3]]],[[["internid",3]]],[[["",0],["genericdefid",4]],["arc",3]],null,[[["",0],["genericdefid",4]],["arc",3]],null,[[["",0],["genericdefid",4],["typeorconstparamid",3],["option",4,[["name",3]]]],["arc",3]],null,[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["crateid",3],["implid",3,[["interner",3]]]],["arc",3,[["impldatum",3,[["interner",3]]]]]],null,[[["",0],["implid",3]],["binders",6,[["ty",6]]]],null,[[["",0],["implid",3]],["option",4,[["binders",6,[["traitref",6]]]]]],null,[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytable",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["hirdatabase",8]],["querytablemut",3]],[[["",0],["defwithbodyid",4]],["arc",3,[["inferenceresult",3]]]],[[["",0],["defwithbodyid",4]],["arc",3,[["inferenceresult",3]]]],null,[[["",0],["crateid",3],["tyfingerprint",4]],["arrayvec",3,[["crateid",3]]]],null,[[["",0],["blockid",3]],["option",4,[["arc",3,[["inherentimpls",3]]]]]],null,[[["",0],["crateid",3]],["arc",3,[["inherentimpls",3]]]],null,[[["",0],["callabledefid",4]],["internedcallabledefid",3]],null,[[["",0]],["internedclosureid",3]],null,[[["",0],["impltraitid",4]],["internedopaquetyid",3]],null,[[["",0],["lifetimeparamid",3]],["internedlifetimeparamid",3]],null,[[["",0],["typeorconstparamid",3]],["internedtypeorconstparamid",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["internedcallabledefid",3]],["callabledefid",4]],null,[[["",0],["internedclosureid",3]]],null,[[["",0],["internedopaquetyid",3]],["impltraitid",4]],null,[[["",0],["internedlifetimeparamid",3]],["lifetimeparamid",3]],null,[[["",0],["internedtypeorconstparamid",3]],["typeorconstparamid",3]],null,[[["",0],["hirdatabase",8],["databasekeyindex",3],["revision",3]],["bool",0]],[[["",0],["internedtypeorconstparamid",3]],["bool",0]],[[["",0],["internedlifetimeparamid",3]],["bool",0]],[[["",0],["internedconstparamid",3]],["bool",0]],[[["",0],["internedopaquetyid",3]],["bool",0]],[[["",0],["internedclosureid",3]],["bool",0]],[[["",0],["internedcallabledefid",3]],["bool",0]],[[["u16",0]]],[[["",0],["internedcallabledefid",3]],["option",4,[["ordering",4]]]],[[["",0],["crateid",3],["environment",3,[["interner",3]]]],["programclauses",3,[["interner",3]]]],null,[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["",0],["functionid",3]],["option",4,[["arc",3,[["binders",6,[["returntypeimpltraits",3]]]]]]]],null,[[["",0],["crateid",3],["adtid",3,[["interner",3]]]],["arc",3,[["adtdatum",3,[["interner",3]]]]]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0],["crateid",3],["traitid",3,[["interner",3]]]],["arc",3,[["traitdatum",3,[["interner",3]]]]]],null,[[["",0],["genericdefid",4]],["arc",3,[["traitenvironment",3]]]],null,[[["",0],["blockid",3]],["option",4,[["arc",3,[["traitimpls",3]]]]]],null,[[["",0],["crateid",3]],["arc",3,[["traitimpls",3]]]],null,[[["",0],["crateid",3]],["arc",3,[["traitimpls",3]]]],null,[[["",0],["crateid",3],["canonical",6,[["inenvironment",6,[["goal",6]]]]]],["option",4,[["solution",6]]]],[[["",0],["crateid",3],["canonical",6,[["inenvironment",6,[["goal",6]]]]]],["option",4,[["solution",6]]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0],["tydefid",4]],["binders",6,[["ty",6]]]],null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["valuetydefid",4]],["binders",6,[["ty",6]]]],null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["hirdatabase",8],["defwithbodyid",4]],["vec",3,[["bodyvalidationdiagnostic",4]]]],null,null,null,[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],null,null,null,[[["hirdatabase",8],["crateid",3],["moduledefid",4]],["vec",3,[["incorrectcase",3]]]],null,[[]],[[]],[[]],[[["hirdatabase",8],["defwithbodyid",4]],["vec",3,[["exprid",6]]]],[[["hirdatabase",8],["inferenceresult",3],["exprid",6],["expr",4]],["option",4]],[[["hirdatabase",8],["inferenceresult",3],["patid",6],["pat",4]],["option",4]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["hirdatabase",8],["inferenceresult",3],["defwithbodyid",4],["body",3],["exprid",6],["fnmut",8]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["displaytarget",4]],[[["",0]],["sizedbydefault",4]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[["",0],["hirdatabase",8]],["hirdisplaywrapper",3]],[[["",0],["hirdatabase",8],["moduleid",3]],["result",4,[["string",3],["displaysourcecodeerror",4]]]],[[["",0],["hirdatabase",8]],["hirdisplaywrapper",3]],[[["",0],["hirdatabase",8],["option",4,[["usize",0]]]],["hirdisplaywrapper",3]],[[["",0],["sizedbydefault",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["error",3]]],[[]],[[]],[[]],[[]],[[["",0],["hirformatter",3]],["result",4,[["hirdisplayerror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["hirdatabase",8],["option",4,[["usize",0]]],["bool",0],["displaytarget",4]],["hirdisplaywrapper",3]],[[["",0],["sizedbydefault",4]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["str",0],["sizedbydefault",4],["hirformatter",3]],["result",4,[["hirdisplayerror",4]]]],[[["",0],["char",0]],["result",4,[["hirdisplayerror",4]]]],[[["",0],["arguments",3]],["result",4,[["hirdisplayerror",4]]]],[[["",0],["str",0]],["result",4,[["hirdisplayerror",4]]]],[[["",0],["str",0]],["result",4,[["hirdisplayerror",4]]]],[[["moduleid",3],["visibility",4],["hirformatter",3]],["result",4,[["hirdisplayerror",4]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["tyfingerprint",4]],[[["",0]],["lookupmode",4]],[[["",0]],["visiblefrommodule",4]],[[["",0]],["receiveradjustments",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["hirdatabase",8],["ty",6],["crateid",3]],["option",4,[["arrayvec",3,[["crateid",3]]]]]],[[],["receiveradjustments",3]],[[["",0],["tyfingerprint",4]],["bool",0]],[[["",0],["traitimpls",3]],["bool",0]],[[["",0],["inherentimpls",3]],["bool",0]],[[["",0],["lookupmode",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["ty",6]],["option",4,[["tyfingerprint",4]]]],[[["",0],["ty",6]]],[[["",0],["tyfingerprint",4]]],[[["",0],["traitid",3]]],[[["",0],["traitid",3],["tyfingerprint",4]]],[[["ty",6]],["option",4,[["tyfingerprint",4]]]],[[]],[[]],[[]],[[]],[[["option",4,[["moduleid",3]]]]],[[]],[[["option",4,[["blockid",3]]]]],[[]],[[["",0],["",0]]],[[["canonical",6],["hirdatabase",8],["arc",3,[["traitenvironment",3]]],["traitid",3]],["bool",0]],[[["canonical",6],["hirdatabase",8],["arc",3,[["traitenvironment",3]]],["traitid",3]],["bool",0]],[[["hirdatabase",8],["crateid",3],["tyfingerprint",4]],["arrayvec",3,[["crateid",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["canonical",6],["hirdatabase",8],["arc",3,[["traitenvironment",3]]],["fxhashset",6],["visiblefrommodule",4],["option",4,[["name",3]]],["lookupmode",4],["fnmut",8]],["controlflow",4]],[[["canonical",6],["hirdatabase",8],["arc",3,[["traitenvironment",3]]],["fxhashset",6],["visiblefrommodule",4],["option",4,[["name",3]]],["fnmut",8]],["controlflow",4]],[[["ty",6],["hirdatabase",8],["arc",3,[["traitenvironment",3]]],["traitid",3],["name",3]],["option",4,[["functionid",3]]]],[[["",0],["tyfingerprint",4]],["bool",0]],[[["",0],["traitimpls",3]],["bool",0]],[[["",0],["inherentimpls",3]],["bool",0]],[[["hirdatabase",8],["arc",3,[["traitenvironment",3]]],["canonical",6,[["ty",6]]],["traitid",3]],["option",4,[["receiveradjustments",3]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["intty",4]],[[["",0]],["uintty",4]],[[["",0]],["floatty",4]],[[["",0]],["builtinint",4]],[[["",0]],["builtinuint",4]],[[["",0]],["builtinfloat",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["intty",4]],["ordering",4]],[[["",0],["uintty",4]],["ordering",4]],[[["",0],["floatty",4]],["ordering",4]],[[["",0],["builtinint",4]],["ordering",4]],[[["",0],["builtinuint",4]],["ordering",4]],[[["",0],["builtinfloat",4]],["ordering",4]],[[["",0],["intty",4]],["bool",0]],[[["",0],["uintty",4]],["bool",0]],[[["",0],["floatty",4]],["bool",0]],[[["",0],["builtinint",4]],["bool",0]],[[["",0],["builtinuint",4]],["bool",0]],[[["",0],["builtinfloat",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["floatty",4]],["str",0]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["typefolder",8],["debruijnindex",3]],["result",4,[["intty",4]]]],[[["typefolder",8],["debruijnindex",3]],["result",4,[["uintty",4]]]],[[["typefolder",8],["debruijnindex",3]],["result",4,[["floatty",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",0]],["option",4,[["builtinint",4]]]],[[["str",0]],["option",4,[["builtinuint",4]]]],[[["str",0]],["option",4,[["builtinfloat",4]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["intty",4]],["str",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["intty",4]],["option",4,[["ordering",4]]]],[[["",0],["uintty",4]],["option",4,[["ordering",4]]]],[[["",0],["floatty",4]],["option",4,[["ordering",4]]]],[[["",0],["builtinint",4]],["option",4,[["ordering",4]]]],[[["",0],["builtinuint",4]],["option",4,[["ordering",4]]]],[[["",0],["builtinfloat",4]],["option",4,[["ordering",4]]]],[[]],[[]],[[]],[[["debruijnindex",3]]],[[["debruijnindex",3]]],[[["debruijnindex",3]]],[[],["result",4,[["nosolution",3]]]],[[],["result",4,[["nosolution",3]]]],[[],["result",4,[["nosolution",3]]]],[[["debruijnindex",3]],["result",4,[["nosolution",3]]]],[[["debruijnindex",3]],["result",4,[["nosolution",3]]]],[[["debruijnindex",3]],["result",4,[["nosolution",3]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["uintty",4]],["str",0]],[[["",0],["typevisitor",8],["debruijnindex",3]],["controlflow",4]],[[["",0],["typevisitor",8],["debruijnindex",3]],["controlflow",4]],[[["",0],["typevisitor",8],["debruijnindex",3]],["controlflow",4]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["traitenvironment",3]],[[["",0]],["fntrait",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["crateid",3]]],null,[[["",0],["traitenvironment",3]],["bool",0]],[[["",0],["fntrait",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0],["hirdatabase",8],["crateid",3]],["option",4,[["traitid",3]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[]],[[]],null,[[["",0],["traitenvironment",3]],["bool",0]],[[["",0]]],[[["",0]]],[[["",0],["ty",6]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[3,"AdtId"],[3,"FnSubst"],[4,"TyDefId"],[4,"ImplTraitId"],[4,"Scalar"],[4,"Adjust"],[4,"InferenceDiagnostic"],[4,"ParamKind"],[4,"ValueTyDefId"],[4,"ImplTraitLoweringMode"],[4,"CallableDefId"],[4,"TyVariableKind"],[3,"DebruijnIndex"],[4,"BindingMode"],[4,"Mutability"],[4,"AutoBorrow"],[4,"Safety"],[3,"TyBuilder"],[8,"TyExt"],[6,"Ty"],[3,"InferenceResult"],[3,"BoundVar"],[3,"Adjustment"],[3,"Interner"],[3,"TyLoweringContext"],[3,"CallableSig"],[3,"ReturnTypeImplTraits"],[8,"Cast"],[6,"FnDefId"],[6,"OpaqueTyId"],[6,"GenericArg"],[6,"ProjectionTy"],[6,"OpaqueTy"],[6,"Lifetime"],[6,"LifetimeData"],[6,"LifetimeOutlives"],[6,"Const"],[6,"TraitRef"],[6,"DomainGoal"],[6,"WhereClause"],[8,"TraitRefExt"],[8,"ProjectionTyExt"],[8,"TypeWalk"],[6,"Binders"],[6,"Substitution"],[6,"AliasTy"],[6,"AliasEq"],[13,"Deref"],[13,"Borrow"],[13,"Pointer"],[13,"Ref"],[13,"RawPtr"],[13,"Ref"],[13,"FunctionId"],[13,"StructId"],[13,"EnumVariantId"],[13,"ReturnTypeImplTrait"],[13,"AsyncBlockTypeImplTrait"],[13,"MismatchedArgCount"],[13,"NoSuchField"],[13,"BreakOutsideOfLoop"],[13,"Const"],[13,"Int"],[13,"Uint"],[13,"Float"],[13,"BuiltinType"],[13,"AdtId"],[13,"TypeAliasId"],[13,"FunctionId"],[13,"StructId"],[13,"UnionId"],[13,"EnumVariantId"],[13,"ConstId"],[13,"StaticId"],[4,"ConstEvalError"],[4,"ComputedExpr"],[3,"ConstEvalCtx"],[8,"ConstExt"],[13,"Literal"],[13,"Tuple"],[13,"NotSupported"],[13,"SemanticError"],[13,"Panic"],[8,"HirDatabase"],[3,"HirDatabaseGroupStorage__"],[3,"InternedTypeOrConstParamId"],[3,"InternedLifetimeParamId"],[3,"InternedConstParamId"],[3,"InternedOpaqueTyId"],[3,"InternedClosureId"],[3,"InternedCallableDefId"],[3,"HirDatabaseStorage"],[3,"InferQueryQuery"],[3,"TyQuery"],[3,"ValueTyQuery"],[3,"ImplSelfTyQuery"],[3,"ConstParamTyQuery"],[3,"ConstEvalQuery"],[3,"ImplTraitQuery"],[3,"FieldTypesQuery"],[3,"CallableItemSignatureQuery"],[3,"ReturnTypeImplTraitsQuery"],[3,"GenericPredicatesForParamQuery"],[3,"GenericPredicatesQuery"],[3,"TraitEnvironmentQuery"],[3,"GenericDefaultsQuery"],[3,"InherentImplsInCrateQuery"],[3,"InherentImplsInBlockQuery"],[3,"InherentImplCratesQuery"],[3,"TraitImplsInCrateQuery"],[3,"TraitImplsInBlockQuery"],[3,"TraitImplsInDepsQuery"],[3,"InternCallableDefQuery"],[3,"InternCallableDefLookupQuery"],[3,"InternTypeOrConstParamIdQuery"],[3,"InternTypeOrConstParamIdLookupQuery"],[3,"InternLifetimeParamIdQuery"],[3,"InternLifetimeParamIdLookupQuery"],[3,"InternImplTraitIdQuery"],[3,"InternImplTraitIdLookupQuery"],[3,"InternClosureQuery"],[3,"InternClosureLookupQuery"],[3,"AssociatedTyDataQuery"],[3,"TraitDatumQuery"],[3,"StructDatumQuery"],[3,"ImplDatumQuery"],[3,"FnDefDatumQuery"],[3,"FnDefVarianceQuery"],[3,"AdtVarianceQuery"],[3,"AssociatedTyValueQuery"],[3,"TraitSolveQueryQuery"],[3,"ProgramClausesForChalkEnvQuery"],[4,"BodyValidationDiagnostic"],[3,"UnsafeExpr"],[3,"IncorrectCase"],[13,"MissingMatchArms"],[13,"ReplaceFilterMapNextWithFindMap"],[13,"RecordMissingFields"],[4,"DisplaySourceCodeError"],[4,"DisplayTarget"],[4,"HirDisplayError"],[4,"SizedByDefault"],[3,"HirFormatter"],[3,"HirDisplayWrapper"],[8,"HirDisplay"],[13,"SourceCode"],[13,"DisplaySourceCodeError"],[13,"Sized"],[4,"TyFingerprint"],[4,"VisibleFromModule"],[4,"LookupMode"],[3,"TraitImpls"],[3,"InherentImpls"],[3,"ReceiverAdjustments"],[13,"RawPtr"],[13,"Scalar"],[13,"Adt"],[13,"Dyn"],[13,"ForeignType"],[13,"Function"],[13,"Filter"],[13,"IncludeBlock"],[4,"FloatTy"],[4,"BuiltinFloat"],[4,"IntTy"],[4,"BuiltinInt"],[4,"UintTy"],[4,"BuiltinUint"],[4,"FnTrait"],[3,"TraitEnvironment"]]},\
"ide":{"doc":"ide crate provides “ide-centric” APIs for the …","tn":["0","0","0","0","0","1","AddParentheses","All","Always","Always","Always","Analysis","AnalysisHost","Angle","Annotation","AnnotationConfig","AnnotationKind","ArgList","Arithmetic","Array","Assist","AssistConfig","AssistId","AssistKind","AssistResolveStrategy","Associated","Async","Attribute","Attribute","AttributeBracket","Bench","Bin","Binding","BindingModeHint","Bitwise","Block","BoolLiteral","Brace","Bracket","BuiltinAttr","BuiltinType","BuiltinType","ByteLiteral","CURRENT","CallItem","Callable","CallableSnippets","Cancellable","Cancelled","ChainingHint","Change","CharLiteral","ClosingBraceHint","ClosureReturnTypeHint","ClosureReturnTypeHints","Colon","Comma","Comment","Comment","Comparison","CompletionConfig","CompletionItem","CompletionItemKind","CompletionRelevance","Const","ConstParam","Consts","Consuming","ControlFlow","CrateGraph","CrateId","CrateRoot","CreateFile","Default","DefaultLibrary","Definition","Derive","Diagnostic","DiagnosticsConfig","Direction","DocTest","Documentation","Documentation","Dot","Down","Edition","Edition2015","Edition2018","Edition2021","Enum","Error","EscapeSequence","ExpandedMacro","Export","Expr","ExprFillDefaultMode","Field","FileId","FilePosition","FileRange","FileSystemEdit","FillArguments","Fold","FoldKind","FormatSpecifier","Function","Generate","GenericParamListHint","GoToType","HasImpls","HasReferences","Highlight","HighlightRelatedConfig","HighlightedRange","HlMod","HlMods","HlOperator","HlPunct","HlRange","HlTag","HoverAction","HoverConfig","HoverDocFormat","HoverGotoTypeData","HoverOffset","HoverRanged","HoverResult","Impl","Implementation","ImplicitReborrowHint","Import","Imports","Indel","InferredType","Injected","InlayHint","InlayHintsConfig","InlayKind","InlayTooltip","IntraDocLink","Item","JoinLinesConfig","Keyword","Keyword","Label","Label","Library","LifetimeElisionHints","LifetimeHint","LifetimeParam","LineCol","LineColUtf16","LineIndex","Local","Logical","Macro","MacroBang","Markdown","Markup","MatchArm","Method","Mods","Module","MonikerKind","MonikerResult","MoveDir","MoveFile","Mutable","MutableOnly","Name","NavigationTarget","Never","Never","Never","None","None","None","NumericLiteral","Operator","Other","Other","PackageInformation","ParallelPrimeCachesProgress","ParameterHint","Parenthesis","Path","PlainText","Public","Punctuation","Query","QuickFix","RangeInfo","Read","ReborrowHints","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Reference","Reference","ReferenceCategory","ReferenceSearchResult","Region","Region","RenameError","ReturnType","RootDatabase","Runnable","Runnable","Runnable","RunnableKind","SearchScope","SelfParam","SelfType","Semantics","Semi","Severity","SignatureHelp","Single","SingleResolve","SkipTrivial","Snippet","Snippet","SnippetScope","SourceChange","SourceRoot","SourceRootId","SsrError","Static","Static","StaticIndex","StaticIndexedFile","Statics","String","StringLiteral","Struct","StructureNode","StructureNodeKind","Symbol","SymbolKind","SymbolKind","SymbolKind","Test","TestId","TestMod","TextEdit","TextRange","TextSize","Todo","TokenId","TokenStaticData","ToolModule","Trait","Trait","Type","TypeAlias","TypeHint","TypeParam","Union","UnresolvedReference","UnresolvedReference","Unsafe","Up","ValueParam","Variant","WeakWarning","WhereClause","WithBlock","Write","actions","active_parameter","add","add","add","add","add_assign","add_assign","add_assign","add_crate_root","add_dep","adt_variance","allowed","analysis","ancestors_at_offset_with_macros","ancestors_with_macros","annotate_enum_variant_references","annotate_impls","annotate_method_references","annotate_references","annotate_runnables","annotations","apply","apply","apply","apply_change","apply_change","apply_to_offset","as_str","as_str","assert_contains_node","assist_id","assist_kind","assists_with_fixes","associated_ty_data","associated_ty_value","ast_id_map","at","attrs","binary_target","binding_hash","binding_mode_hints","binding_mode_of_pat","bitor","bitor","bitor_assign","bitor_assign","block_def_map","body","body_with_source_map","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","break_points","builder","call_hierarchy","callable","callable_item_signature","case_sensitive","catch","category","cfg","chaining_hints","change_file","checked_add","checked_add","checked_sub","checked_sub","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closing_brace_hints_min_lines","closure_return_type_hints","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","code","col","col","completions","compute","const_data","const_eval","const_param_ty","const_visibility","container_name","contains","contains","contains","contains_inclusive","contains_range","cover","cover_offset","crate_def_map","crate_def_map_query","crate_edition","crate_for","crate_graph","crate_graph","crate_id_for_crate_root","crate_lang_items","crate_limits","crate_root","crate_supports_no_std","crates_currently_indexing","crates_done","crates_in_topological_order","crates_total","db","declaration","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","definition","delete","delete","delete","deprecated","deprecated","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descend_into_macros","descend_into_macros_single","descend_into_macros_with_kind_preference","descend_into_macros_with_same_text","descend_node_into_attributes","description","description","detail","detail","diagnostics","diagnostics_display_range","disable_experimental","disabled","doc","docs","documentation","documentation","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","empty","empty","enable_imports_on_the_fly","enable_postfix_completions","enable_private_editable","enable_proc_attr_macros","enable_self_on_the_fly","end","end_bound","enum_data","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exact","exact_name_match","exit_points","expand","expand_attr_macro","expand_derive_as_pseudo_attr_macro","expand_derive_macro","expand_macro","expand_proc_macro","expansion","experimental","expr_fill_default","expr_scopes","extend","extend","extend","extend_selection","external_docs","fenced_block","field_types","field_visibilities","fields_attrs","fields_attrs_source_map","file_for_path","file_id","file_id","file_id","file_id","file_item_tree","file_line_index","file_range","file_source_root","file_structure","file_system_edits","file_text","file_text","file_text","files","files","files_changed","find_all_methods","find_all_refs","find_node_at_offset_with_descend","find_node_at_offset_with_macros","find_nodes_at_offset_with_descend","fixes","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_def_datum","fn_def_variance","focus_or_full_range","focus_range","folding_ranges","folds","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_edits","from_single_file","from_str","from_str","from_text_edit","full_range","function_data","function_visibility","generic_defaults","generic_params","generic_predicates","generic_predicates_for_param","get_source_edit","goto_declaration","goto_definition","goto_implementation","goto_type_definition","group","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hide_closure_initialization_hints","hide_named_constructor_hints","highlight","highlight","highlight_as_html","highlight_range","highlight_related","hir_file_for","hover","hover","hygiene_frame","id","identifier","impl_data","impl_datum","impl_self_ty","impl_trait","import_map","imports_to_add","incoming_calls","index","infer","infer_query","info","inherent_impl_crates","inherent_impls_in_block","inherent_impls_in_crate","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inlay_hints","inlay_hints","insert","insert","insert","insert_source_edit","insert_use","insert_use","intern_block","intern_callable_def","intern_closure","intern_const","intern_enum","intern_extern_block","intern_function","intern_impl","intern_impl_trait_id","intern_lifetime_param_id","intern_macro2","intern_macro_call","intern_macro_rules","intern_proc_macro","intern_static","intern_struct","intern_trait","intern_type_alias","intern_type_or_const_param_id","intern_union","intersect","intersection","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","is_attr_macro_call","is_definite","is_derive_annotated","is_empty","is_empty","is_empty","is_empty","is_implicit_reborrow","is_item_from_trait","is_library","is_library_file","is_local","is_name_already_imported","is_op_method","is_private_editable","is_relevant","is_snippet","is_snippet","is_unsafe_ident_pat","is_unsafe_macro_call","is_unsafe_method_call","is_unsafe_ref_expr","iter","iter","iter","iter","join_assignments","join_else_if","join_lines","kind","kind","kind","kind","kind","kind","kind","kind","label","label","label","label","label","lang_item","len","len","library_roots","library_symbols","libs","lifetime_elision_hints","limit","line","line","line_col","line_index","lines","links_in_hover","local_roots","lookup","lookup_intern_block","lookup_intern_callable_def","lookup_intern_closure","lookup_intern_const","lookup_intern_enum","lookup_intern_extern_block","lookup_intern_function","lookup_intern_impl","lookup_intern_impl_trait_id","lookup_intern_lifetime_param_id","lookup_intern_macro2","lookup_intern_macro_call","lookup_intern_macro_rules","lookup_intern_proc_macro","lookup_intern_static","lookup_intern_struct","lookup_intern_trait","lookup_intern_type_alias","lookup_intern_type_or_const_param_id","lookup_intern_union","macro2_data","macro_arg","macro_arg_text","macro_def","macro_expand","macro_expand_error","macro_rules_data","markup","matching_brace","max_length","merge","message","mod_path","mods","module_symbols","moniker","moniker","move_item","name","name","name","name","nav","nav","navigation_range","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","new","new","new","new","new","new_library","new_local","node_range","of","offset","offset","on_char_typed","on_enter","only_types","ordering","original_ast_node","original_range","original_range_opt","outgoing_calls","package_information","parallel_prime_caches","param_names_for_lifetime_elision_hints","parameter_hints","parameter_labels","parameter_ranges","parent","parent_module","parse","parse","parse","parse_macro_expansion","parse_or_expand","parse_or_expand","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","patch_cfg_if","path_for_file","pattern_adjustments","per_query_memory_usage","per_query_memory_usage","postfix_match","postfix_snippet","postfix_snippets","postfix_triggers","prefix_snippets","prefix_triggers","prepare_rename","proc_attr_macros_enabled","proc_macro_data","proc_macros_enabled","program_clauses_for_chalk_env","push_file_system_edit","range","range","range","range","range","range","range","range","ranges","raw","raw_database","raw_database_mut","reborrow_hints","record_literal_missing_fields","record_pattern_missing_fields","ref_match","references","references","references","related_tests","relevance","relevant_crates","remove_trailing_comma","rename","render_colons","replace","replace","repo","request_cancellation","request_cancellation","requires_import","resolve_annotation","resolve_attr_macro_call","resolve_bind_pat_to_const","resolve_completion_edits","resolve_derive_macro","resolve_extern_crate","resolve_field","resolve_label","resolve_lifetime_param","resolve_macro_call","resolve_method_call","resolve_method_call_as_callable","resolve_path","resolve_path","resolve_record_field","resolve_record_pat_field","resolve_type","resolve_variant","return_type_impl_traits","roots","runnables","scope","scope","scope_at_offset","scope_for_def","score","set_crate_graph","set_crate_graph","set_crate_graph_with_durability","set_enable_proc_attr_macros","set_enable_proc_attr_macros_with_durability","set_file_source_root","set_file_source_root_with_durability","set_file_text","set_file_text_with_durability","set_library_roots","set_library_roots_with_durability","set_local_roots","set_local_roots_with_durability","set_roots","set_source_root","set_source_root_with_durability","severity","should_resolve","shuffle_crate_graph","signature","signature_help","single_file","snapshot","snippet","snippet_cap","snippet_cap","snippets","source","source_change","source_file_edits","source_range","source_root","source_root_crates","speculative_expand","speculative_expand_attr_macro","speculative_expand_derive_as_pseudo_attr_macro","start","start_bound","static_data","status","struct_data","struct_datum","structural_search_replace","sub","sub","sub","sub","sub_assign","sub_assign","sum","symbol_search","syntax_tree","tag","target","target","text_edit","title","to_def","to_module_def","to_module_defs","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_utf16","to_utf8","token_ancestors_with_macros","tokens","tokens","tooltip","trait_data","trait_datum","trait_environment","trait_impls_in_block","trait_impls_in_crate","trait_impls_in_deps","trait_solve","trait_solve_query","transitive_deps","transitive_rev_deps","trigger_call_info","trigger_signature_help","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_alias_data","type_hints","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_match","type_of_expr","type_of_pat","type_of_self","union","union_data","unused","unwrap_trivial_blocks","up_to","upcast","upcast","upcast","update_lru_capacity","update_lru_capacity","use_name_in_title","value_ty","variants_attrs","variants_attrs_source_map","version","view_crate_graph","view_hir","view_item_tree","will_rename_file","yield_points","0","data","data","file_id","file_id","0","0","dst","dst","dst","initial_contents","src","src","src_id","0","0","0","0","0","0","0","0","0","0","1","1","attr","path","test_id","test_id","test_id","0","0","0"],"q":["ideide::AnnotationKind","","","","","ide::AssistResolveStrategy","ide::CompletionItemKind","ide::FileSystemEdit","","","","","","","ide::HlTag","","","ide::HoverAction","","","","ide::InlayTooltip","","","","","ide::RunnableKind","","","","","ide::StructureNodeKind","ide::TestId",""],"d":["","","","","","","","All assists should be resolved.","","","","Analysis is a snapshot of a world state at a moment in …","<code>AnalysisHost</code> stores the current state of the world.","&lt;&gt;","","","","","+, -, *, /, +=, -=, *=, /=","","","","Unique identifier of the assist, should not be shown to …","","A way to control how many asssist to resolve during the …","Used for items in traits and impls.","Used with keywords like <code>async</code> and <code>await</code>.","","Used to differentiate individual elements within …","","","","","","|, &amp;, !, ^, |=, &amp;=, ^=","","","{}","[]","","","","","","","Callable item or value.","","","A panic payload indicating that a salsa revision was …","","Encapsulate a bunch of raw <code>.set</code> calls on the database.","","","","",":",",","","",", &lt;, ==, &gt;=, &lt;=, !=","","<code>CompletionItem</code> describes a single completion variant in …","The type of the completion item.","","","","","Value that is being consumed in a function call","Used with keywords like <code>if</code> and <code>break</code>.","<code>CrateGraph</code> is a bit of information which turns a set of …","","Used for crate names, like <code>serde</code>.","","","Used for items from built-in crates (std, core, alloc, …","<code>foo</code> in <code>fn foo(x: i32)</code> is a definition, <code>foo</code> in <code>foo(90 + 2)</code> …","","","","","","Holds documentation","Doc-strings like this one.",".","","","","","","","","","","","","","","Handle to a file in <code>Vfs</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains the results when hovering over an item","","","","","","<code>InsertDelete</code> – a single “atomic” change to text","","Highlighting injection like rust code in doc strings or …","","","","","Used for intra doc links in doc injection.","","","","","A type to specify UI label, like an entry in the list of …","","Used for items from other crates.","","","","","","","","&amp;&amp;, ||, !","","! (only for macro calls)","","","","","","","","","","","Mutable binding.","","","<code>NavigationTarget</code> represents an element in the editor’s …","","","","","No assists should be resolved.","","","","","","","We’re indexing many crates.","","()","","","Used for public items.","","","","Info associated with a text range.","","","","","","","","Immutable reference.","","","","","","","","","","","","Generally, <code>search_scope</code> returns files that might contain …","","","Primary API to get semantic information, like types, from …",";","","Contains information about an item signature as seen from …","Only a certain assist should be resolved.","Hold the <code>AssistId</code> data of a certain assist to resolve. The …","","A user supplied snippet.","","A snippet scope describing where a snippet may apply to. …","","","Files are grouped into source roots. A source root is a …","","","Used for associated functions.","A static representation of fully analyzed source code.","","","","","","","","","","","","","","","","A range in text, represented as a pair of <code>TextSize</code>.","A measure of text length. Also, equivalently, an index …","","","","","","Used for items in traits and trait impls.","","","","","","","","Used for unsafe functions, unsafe traits, mutable statics, …","","","","","","","","","","","","","","","","","","","","","Returns a snapshot of the current state, which you can …","","Iterates the ancestors of the given node, climbing up …","","","","","","","","","","","Applies changes to the current state of the world. If …","","","","","The id of the assist.","","Convenience function to return assists + quick fixes for …","","","","Create a new <code>TextRange</code> with the given <code>offset</code> and <code>len</code> (…omputes call hierarchy candidates for the given file …","","","","Runs <code>f</code>, and catches any salsa cancellation.","","","","","Add an offset to this range.","Checked addition. Returns <code>None</code> if overflow occurred.","Subtract an offset from this range.","Checked subtraction. Returns <code>None</code> if overflow occurred.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Zero-based","Zero-based utf8 offset","Computes completions at the given position.","","","","","","","Check if this range contains an offset.","","","Check if this range contains an offset.","Check if this range completely contains another range.","Extends the range to cover <code>other</code> as well.","Extends the range to cover <code>other</code> offsets as well.","","","Returns the edition of the given crate.","Returns crates this file belongs too.","","","","","","Returns the root file of the given crate.","","the crates that we are currently priming.","the total number of crates that have finished priming","Returns all crates in the graph, sorted in topological …","the total number of crates we want to prime.","","","","","","","","","","","","","","","","","","","","","Refers to offsets in the original textescend the token into macrocalls to all its mapped …","Descend the token into macrocalls to its first mapped …","","Descend the token into macrocalls to all its mapped …","Maps a node down by mapping its first and last token down.","","","Short one-line additional information, like a type","","Computes the set of diagnostics for the given file.","","","","","","A doc-comment","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a zero-length range at the specified offset (…","Build an empty search scope.","","","","","","The end point of this range.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This is set in cases like these:","","","If <code>item</code> has an attribute macro attached to it, expands it.","","","","","","","","","Extends this crate graph by adding a complete disjoint …","","","Selects the next syntactic nodes encompassing the range.","Return URL(s) for the documentation of the symbol under …","","","","","","","","","","","","Gets the file’s <code>LineIndex</code>: data structure to convert …","Build a empty search scope spanning the text range of the …","","Returns a tree representation of symbols in the file. …","","","","Gets the text of the source file.","Build a empty search scope spanning the given files.","","","Finds all methods and free functions for the file. Does …","Finds all usages of the reference at point.","Find an AstNode by offset inside SyntaxNode, if it is …","Find an AstNode by offset inside SyntaxNode, if it is …","Find an AstNode by offset inside SyntaxNode, if it is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A “most interesting” range within the <code>full_range</code>.","Returns the set of folding ranges.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new SourceChange with the given label from the …","","","","","Range which encompasses the whole element.","","","","","","","","Returns the declaration from the symbol at <code>position</code>.","Returns the definitions from the symbol at <code>position</code>.","Returns the impls from the symbol at <code>position</code>.","Returns the type definitions for the symbol at <code>position</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Computes syntax highlighting for the given file","","Computes syntax highlighting for the given file.","Computes syntax highlighting for the given file range.","Computes all ranges to highlight for a given item in a …","","Returns a short text describing element at position.","","","","","","","","","","","Computes incoming calls for the given file position.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a list of the places in the file where type hints …","","","","","Inserts a <code>TextEdit</code> for the given <code>FileId</code>. This properly …","","","","","","","","","","","","","","","","","","","","","","","The range covered by both ranges, if it exists. If the …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","This is set for type inference results","","","Check if this range is empty.","","","","This is set when trait items are completed in an impl of …","Sysroot or crates.io library.","Returns true if this file belongs to an immutable library.","This is set in cases like these:","This is set when an import is suggested whose name is …","Set for method completions of the <code>core::ops</code> and <code>core::cmp</code> …","Set for item completions that are private but in the …","Returns true when the score for this threshold is above …","Whether <code>text_edit</code> is a snippet (contains <code>$0</code> markers).","","","","","","","","","","","","Returns an edit to remove all newlines in the range, …","","","","","","","","","What user sees in pop-up in the UI.","","Short description of the assist, as shown in the UI.","","","","","The size of this range.","","","","","","Zero-based","Zero-based","","","","","","What string is used for filtering.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns position of the matching brace (all types of …","","","","","","","Returns moniker of symbol at position.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>TextRange</code> with the given <code>start</code> and <code>end</code> (…","","","","","","","","","","","","","","The text size of some primitive text-like object.","","","Returns an edit which should be applied after a character …","Returns an edit which should be applied when opening a new …","","Relative order of the two ranges (overlapping ranges are …","Attempts to map the node out of macro expanded files. This …","Attempts to map the node out of macro expanded files …","Attempts to map the node out of macro expanded files …","Computes outgoing calls for the given file position.","","","","","","","","Returns a <code>mod name;</code> declaration which created the current …","","","Gets the syntax tree of the file.","","","","","","","","","","","","","","","","","","","","","","","NB: this clears the database","Set for postfix snippet item completions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set of tests for the given file position.","","","","Returns the edit required to rename reference at the …","","","","","","","This is set for completions that will insert a <code>use</code> item.","","","","Resolves additional completion data at the position given.","","","","","","","","","","","","","","","","","Returns the set of possible targets to run for the current …","","","","","Provides a relevance score. Higher values are more …","","","","","","","","","","","","","","","","","","","","","Computes parameter information at the given position.","Build a empty search scope spanning the given file.","","","","","","Search for a definition’s source and cache its syntax …","Computing source change sometimes is much more costly then …","","","","","","","","The start point of this range.","","","Debug info about the current state of the analysis.","","","","","","","","","","","Fuzzy searches for a symbol.","Returns a syntax tree represented as <code>String</code>, for debug …","","Target ranges are used to sort assists: the smaller the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator over all transitive dependencies of …","Returns all transitive reverse dependencies of the given …ee CompletionRelevanceTypeMatch doc comments for cases …","","","","","","","","Create a range up to the given end (<code>..end</code>).","","","","","","","","","","","Renders the crate graph to GraphViz “dot” syntax.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,2,3,4,5,4,6,7,8,9,10,0,0,11,0,0,0,12,13,12,0,0,0,0,0,14,14,15,14,16,17,17,18,19,13,12,16,11,11,15,18,16,16,20,0,14,0,0,0,19,0,16,19,19,0,11,11,12,16,13,0,0,0,0,15,15,12,14,14,0,0,14,21,22,14,14,15,0,0,0,17,0,14,11,23,0,20,20,20,15,24,16,0,25,26,0,15,0,0,0,0,6,0,0,16,15,27,19,28,29,29,0,0,0,0,0,0,0,0,0,0,0,0,0,30,30,0,15,28,19,25,12,0,18,14,0,0,0,0,14,26,0,18,16,0,15,14,0,19,15,0,0,0,15,13,15,11,31,0,12,18,12,15,0,0,21,21,14,10,32,0,8,9,10,27,7,16,16,16,11,13,0,0,19,11,32,31,14,16,0,27,0,33,0,27,27,27,27,28,14,0,0,34,12,0,12,0,0,29,28,0,0,15,15,0,11,0,0,7,0,9,0,18,0,0,0,0,0,15,14,0,0,12,30,16,15,0,0,16,0,18,34,17,0,17,0,0,0,22,0,0,15,15,14,26,15,19,15,15,18,16,14,23,15,15,24,12,8,33,35,36,37,37,38,38,37,38,38,39,39,40,41,42,43,43,44,44,44,44,44,45,46,47,48,40,42,47,49,50,43,51,51,45,40,40,40,37,40,44,52,53,43,54,16,54,55,40,40,40,46,47,37,38,44,1,43,2,56,39,3,20,48,57,24,58,22,59,60,61,62,63,64,27,4,7,51,65,66,67,68,69,5,33,70,71,21,72,40,15,73,6,74,75,18,26,76,49,77,78,79,29,80,36,81,82,83,34,12,84,85,31,28,86,35,53,8,9,10,19,87,30,25,88,89,23,90,91,32,17,92,93,94,95,54,55,16,14,11,13,52,96,42,45,41,50,46,47,37,38,44,1,43,2,56,39,3,20,48,57,24,58,22,59,60,61,62,63,64,27,4,7,51,65,66,67,68,69,5,33,70,71,21,72,40,15,73,6,74,75,18,26,76,49,77,78,79,29,80,36,81,82,83,34,12,84,85,31,28,86,35,53,8,9,10,19,87,30,25,88,89,23,90,91,32,17,92,93,94,95,54,55,16,14,11,13,52,96,42,45,41,50,82,47,45,73,40,72,63,81,91,53,48,37,38,37,38,46,47,37,38,1,2,56,39,3,20,24,58,22,59,60,64,27,4,65,66,67,69,33,70,71,21,15,73,6,74,75,18,26,76,78,80,82,83,34,85,31,28,86,53,8,9,10,19,25,88,89,23,90,91,32,17,94,54,55,16,14,11,13,52,41,50,46,47,37,38,1,2,56,39,3,20,24,58,22,59,60,64,27,4,65,66,67,69,33,70,71,21,15,73,6,74,75,18,26,76,78,80,82,83,34,85,31,28,86,53,8,9,10,19,25,88,89,23,90,91,32,17,94,54,55,16,14,11,13,52,41,50,53,53,38,1,2,3,20,15,18,34,25,54,55,16,14,11,13,57,67,69,45,92,40,40,40,40,78,37,27,55,37,37,37,37,40,40,45,45,40,48,39,40,40,45,40,77,77,39,77,43,90,47,37,38,39,48,22,60,71,40,75,49,82,35,55,42,93,46,47,46,74,83,46,47,37,38,44,1,43,2,56,39,3,20,48,57,24,58,22,59,60,61,62,63,64,27,4,7,51,65,66,67,68,69,5,33,70,71,21,72,40,15,73,6,74,75,18,26,76,49,77,78,79,29,80,36,81,82,83,34,12,84,85,31,28,86,35,53,8,9,10,19,87,30,25,88,89,23,90,91,32,17,92,93,94,95,54,55,16,14,11,13,52,96,42,45,41,50,46,47,37,38,44,1,43,2,56,39,3,20,48,57,24,58,22,59,60,61,62,63,64,27,4,7,51,65,66,67,68,69,5,33,70,71,21,72,40,15,73,6,74,75,18,26,76,49,77,78,79,29,80,36,81,82,83,34,12,84,85,31,28,86,35,53,8,9,10,19,87,30,25,88,89,23,90,91,32,17,92,93,94,95,54,55,16,14,11,13,52,96,42,45,41,50,43,43,43,43,43,76,78,74,83,45,43,60,60,36,78,74,85,46,47,37,38,44,1,43,2,56,39,3,20,48,57,24,58,22,59,60,61,62,63,64,27,4,7,51,65,66,67,68,69,5,33,70,71,21,72,40,40,15,73,6,74,75,18,26,76,49,77,78,79,29,80,36,81,82,83,34,12,84,85,31,28,86,35,53,8,9,10,19,87,30,25,88,89,23,90,91,32,17,92,93,94,95,54,55,16,14,11,13,52,96,42,45,41,50,37,70,73,73,73,40,73,37,37,40,46,37,38,1,2,56,3,20,22,59,61,27,4,65,65,66,67,69,33,15,73,6,75,18,26,76,78,81,34,12,85,31,86,53,8,9,10,19,25,88,89,91,32,17,94,54,55,16,14,11,13,41,50,46,37,38,1,2,56,3,20,22,59,27,4,66,67,69,33,15,73,6,75,18,26,76,78,81,34,12,85,31,86,53,8,9,10,19,25,88,89,91,32,17,94,54,55,16,14,11,13,41,50,72,75,82,43,43,43,43,45,40,62,57,60,40,39,71,71,45,45,49,40,40,40,40,56,58,59,78,95,40,45,70,40,45,71,40,40,45,70,92,48,45,45,43,43,43,57,46,47,37,38,1,43,2,56,39,3,20,20,48,57,24,58,22,59,60,61,61,63,63,64,27,4,7,51,65,65,66,67,69,5,5,33,70,71,21,72,40,15,73,6,74,75,18,26,76,49,49,77,78,79,29,80,36,83,34,12,84,85,31,28,86,35,53,8,9,10,19,87,30,25,88,89,23,90,91,32,32,17,92,93,94,95,54,54,55,16,16,14,14,11,13,52,96,42,45,41,50,40,40,78,78,45,95,46,47,37,37,38,38,44,1,43,2,56,39,3,3,20,48,57,24,58,22,59,60,61,62,63,64,27,4,7,51,65,66,67,68,69,5,33,70,71,71,71,21,72,40,15,15,15,73,6,74,75,18,18,26,76,49,49,77,78,79,29,80,36,81,82,83,34,12,84,85,31,28,86,35,53,8,9,10,19,87,30,25,88,89,23,90,91,32,17,92,93,94,95,54,54,54,54,54,55,16,14,11,13,52,96,42,45,41,50,71,45,20,27,71,78,40,40,40,40,40,40,71,45,45,45,45,64,46,37,38,1,2,3,20,59,67,69,33,15,78,81,34,86,25,88,89,91,32,17,94,54,55,16,14,11,13,50,53,53,45,52,45,45,45,43,45,93,40,64,88,40,40,40,40,40,74,45,39,40,40,96,40,40,40,46,47,37,38,44,1,43,2,56,39,3,20,48,57,24,58,22,59,60,61,62,63,64,27,4,7,51,65,66,67,68,69,5,33,70,71,21,72,40,15,73,6,74,75,18,26,76,49,77,78,79,29,80,36,81,82,83,34,12,84,85,31,28,86,35,53,8,9,10,19,87,30,25,88,89,23,90,91,32,17,92,93,94,95,54,55,16,14,11,13,52,96,42,45,41,50,45,95,46,47,46,71,73,41,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,37,70,46,47,37,38,44,1,43,2,56,39,3,20,48,57,24,58,22,59,60,61,62,63,64,27,4,7,51,65,66,67,68,69,5,33,70,71,21,72,40,15,73,6,74,75,18,26,76,49,77,78,79,29,80,36,81,82,83,34,12,84,85,31,28,86,35,53,8,9,10,19,87,30,25,88,89,23,90,91,32,17,92,93,94,95,54,55,16,14,11,13,52,96,42,45,41,50,47,70,43,75,43,47,37,39,54,43,75,56,45,75,75,75,75,75,74,71,43,43,43,43,47,56,39,55,68,68,45,74,78,79,83,84,87,88,91,74,91,64,83,87,40,47,37,40,40,72,53,72,67,69,66,40,66,85,40,74,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,35,45,53,71,57,86,54,40,45,93,45,27,62,78,89,86,91,83,46,37,38,1,2,56,3,59,61,4,66,67,69,73,75,18,76,78,81,34,85,86,53,88,89,91,32,17,94,54,55,16,41,50,37,43,48,65,66,72,40,76,96,42,50,56,56,83,38,66,58,45,45,72,37,43,43,43,45,88,45,53,53,36,36,83,45,43,40,45,40,43,40,38,1,2,3,20,15,18,34,25,54,55,16,14,11,13,39,56,43,40,42,75,76,73,76,73,76,45,60,40,60,40,71,57,59,79,81,84,87,52,96,80,94,42,42,53,43,43,74,82,90,93,45,74,40,68,45,53,46,47,89,40,42,75,45,43,43,45,43,43,43,43,43,43,43,43,43,40,43,43,43,43,40,48,45,43,76,43,43,75,48,40,40,40,40,40,40,40,40,40,40,40,40,48,40,40,57,7,42,36,45,70,40,76,73,41,73,43,64,71,74,40,40,43,43,43,37,37,40,45,40,40,45,37,37,38,38,37,38,38,45,45,54,64,80,74,91,43,43,43,46,47,37,38,1,2,56,39,3,20,24,58,22,59,60,64,27,4,65,66,67,69,33,70,71,21,15,73,6,74,75,18,26,76,78,80,82,83,34,85,31,28,86,53,8,9,10,19,25,88,89,23,90,91,32,17,94,54,55,16,14,11,13,52,41,50,20,61,63,65,5,49,32,54,16,14,66,66,43,92,95,87,40,40,40,40,40,40,40,40,39,39,74,64,46,47,37,38,38,44,1,43,2,56,39,3,20,48,57,24,58,22,59,60,61,62,63,64,27,4,7,51,65,66,67,68,69,5,33,70,71,21,72,40,15,73,6,74,75,18,26,76,49,77,78,79,29,80,36,81,82,83,34,12,84,85,31,28,86,35,53,8,9,10,19,87,30,25,88,89,23,90,91,32,17,92,93,94,95,54,55,16,14,11,13,52,96,42,45,41,50,46,47,37,38,44,1,43,2,56,39,3,20,48,57,24,58,22,59,60,61,62,63,64,27,4,7,51,65,66,67,68,69,5,33,70,71,21,72,40,15,73,6,74,75,18,26,76,49,77,78,79,29,80,36,81,82,83,34,12,84,85,31,28,86,35,53,8,9,10,19,87,30,25,88,89,23,90,91,32,17,92,93,94,95,54,55,16,14,11,13,52,96,42,45,41,50,40,40,53,46,47,37,38,44,1,43,2,56,39,3,20,48,57,24,58,22,59,60,61,62,63,64,27,4,7,51,65,66,67,68,69,5,33,70,71,21,72,40,15,73,6,74,75,18,26,76,49,77,78,79,29,80,36,81,82,83,34,12,84,85,31,28,86,35,53,8,9,10,19,87,30,25,88,89,23,90,91,32,17,92,93,94,95,54,55,16,14,11,13,52,96,42,45,41,50,75,43,43,43,47,40,57,68,37,40,40,40,40,42,91,40,40,40,89,45,45,45,45,82,97,98,99,98,99,100,101,102,103,104,102,103,104,104,105,106,107,108,109,110,111,112,113,114,113,114,115,116,115,117,118,119,120,121],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textsize",3]],[[["textsize",3]],["textsize",3]],[[["",0]]],[[["",0]]],[[["",0],["delta",4,[["textsize",3]]]]],[[["",0],["fileid",3],["edition",4],["option",4,[["cratedisplayname",3]]],["option",4,[["string",3]]],["cfgoptions",3],["cfgoptions",3],["env",3],["result",4,[["vec",3,[["procmacro",3],["global",3]]],["string",3]]],["bool",0],["crateorigin",4]],["crateid",3]],[[["",0],["crateid",3],["dependency",3]],["result",4,[["cyclicdependencieserror",3]]]],[[["",0],["adtid",3,[["interner",3]]]],["variances",3,[["interner",3]]]],null,[[["",0]],["analysis",3]],[[["",0],["syntaxnode",3],["textsize",3]]],[[["",0],["syntaxnode",3,[["rustlanguage",4]]]]],null,null,null,null,null,[[["",0],["annotationconfig",3],["fileid",3]],["cancellable",6,[["vec",3,[["annotation",3]]]]]],[[["",0],["string",3]]],[[["",0],["string",3]]],[[["sourcedatabaseext",8]]],[[["",0],["change",3]]],[[["",0],["change",3]]],[[["",0],["textsize",3]],["option",4,[["textsize",3]]]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0],["syntaxnode",3]]],null,null,[[["",0],["assistconfig",3],["diagnosticsconfig",3],["assistresolvestrategy",4],["filerange",3]],["cancellable",6,[["vec",3,[["assist",3]]]]]],[[["",0],["assoctypeid",3,[["interner",3]]]],["arc",3,[["associatedtydatum",3,[["interner",3]]]]]],[[["",0],["crateid",3],["associatedtyvalueid",3,[["interner",3]]]],["arc",3,[["associatedtyvalue",3,[["interner",3]]]]]],[[["",0],["hirfileid",3]],["arc",3,[["astidmap",3]]]],[[["textsize",3],["textsize",3]],["textrange",3]],[[["",0],["attrdefid",4]],["attrswithowner",3]],null,null,null,[[["",0],["identpat",3]],["option",4,[["bindingmode",4]]]],[[["hlmod",4]],["highlight",3]],[[["hlmod",4]],["highlight",3]],[[["",0],["hlmod",4]]],[[["",0],["hlmod",4]]],[[["",0],["blockid",3]],["option",4,[["arc",3,[["defmap",3]]]]]],[[["",0],["defwithbodyid",4]],["arc",3,[["body",3]]]],[[["",0],["defwithbodyidnull,[[],["texteditbuilder",3]],[[["",0],["fileposition",3]],["cancellable",6,[["option",4,[["rangeinfo",3,[["vec",3,[["navigationtarget",3]]]]]]]]]],null,[[["",0],["callabledefid",4]],["binders",3,[["callablesig",3]]]],[[["",0]]],[[],["result",4,[["cancelled",3]]]],null,null,null,[[["",0],["fileid",3],["option",4,[["arc",3,[["string",3]]]]]]],[[["textsize",3]],["option",4,[["textrange",3]]]],[[["textsize",3]],["option",4,[["textsize",3]]]],[[["textsize",3]],["option",4,[["textrange",3]]]],[[["textsize",3]],["option",4,[["textsize",3]]]],[[["",0]],["indel",3]],[[["",0]],["textedit",3]],[[["",0]],["textrange",3]],[[["",0]],["textsize",3]],[[["",0]],["fileid",3]],[[["",0]],["sourcerootid",3]],[[["",0]],["sourceroot",3]],[[["",0]],["crategraph",3]],[[["",0]],["crateid",3]],[[["",0]],["edition",4]],[[["",0]],["severity",4]],[[["",0]],["fileposition",3]],[[["",0]],["exprfilldefaultmode",4]],[[["",0]],["filerange",3]],[[["",0]],["diagnosticsconfig",3]],[[["",0]],["assist",3]],[[["",0]],["assistkind",4]],[[["",0]],["assistid",3]],[[["",0]],["label",3]],[[["",0]],["lineindex",3]],[[["",0]],["linecolutf16",3]],[[["",0]],["linecol",3]],[[["",0]],["referencecategory",4]],[[["",0]],["searchscope",3]],[[["",0]],["sourcechange",3]],[[["",0]],["filesystemedit",4]],[[["",0]],["symbolkind",4]],[[["",0]],["completionconfig",3]],[[["",0]],["callablesnippets",4]],[[["",0]],["completionitem",3]],[[["",0]],["completionrelevance",3]],[[["",0]],["completionitemkind",4]],[[["",0]],["snippetscope",4]],[[["",0]],["snippet",3]],[[["",0]],["navigationtarget",3]],[[["",0]],["callitem",3]],[[["",0]],["highlightrelatedconfig",3]],[[["",0]],["structurenode",3]],[[["",0]],["structurenodekind",4]],[[["",0]],["hoverconfig",3]],[[["",0]],["hoverdocformat",4]],[[["",0]],["hoveraction",4]],[[["",0]],["hovergototypedata",3]],[[["",0]],["inlayhintsconfig",3]],[[["",0]],["closurereturntypehints",4]],[[["",0]],["lifetimeelisionhints",4]],[[["",0]],["reborrowhints",4]],[[["",0]],["inlaykind",4]],[[["",0]],["monikerkind",4]],[[["",0]],["monikerresult",3]],[[["",0]],["packageinformation",3]],[[["",0]],["direction",4]],[[["",0]],["referencesearchresult",3]],[[["",0]],["runnable",3]],[[["",0]],["testid",4]],[[["",0]],["runnablekind",4]],[[["",0]],["tokenid",3]],[[["",0]],["highlight",3]],[[["",0]],["hlmods",3]],[[["",0]],["hltag",4]],[[["",0]],["hlmod",4]],[[["",0]],["hlpunct",4]],[[["",0]],["hloperator",4]],[[["",0]],["hlrange",3]],[[["",0]],["assistconfig",3]],[[["",0]],["documentationnull,null,[[["",0],["textsize",3]],["ordering",4]],[[["",0],["fileid",3]],["ordering",4]],[[["",0],["sourcerootid",3]],["ordering",4]],[[["",0],["crateid",3]],["ordering",4]],[[["",0],["edition",4]],["ordering",4]],[[["",0],["symbolkind",4]],["ordering",4]],[[["",0],["completionitemkind",4]],["ordering",4]],[[["",0],["structurenodekind",4]],["ordering",4]],[[["",0],["monikerkind",4]],["ordering",4]],[[["",0],["highlight",3]],["ordering",4]],[[["",0],["hlmods",3]],["ordering",4]],[[["",0],["hltag",4]],["ordering",4]],[[["",0],["hlmod",4]],["ordering",4]],[[["",0],["hlpunct",4]],["ordering",4]],[[["",0],["hloperator",4]],["ordering",4]],null,null,null,[[["",0],["completionconfig",3],["fileposition",3],["option",4,[["char",0]]]],["cancellable",6,[["option",4,[["vec",3,[["completionitem",3]]]]]]]],[[["analysis",3]],["staticindex",3]],[[["",0],["constid",3]],["arc",3,[["constdata",3]]]],[[["",0],["constid",3]],["result",4,[["computedexpr",4],["constevalerror",4]]]],[[["",0],["constparamid",3]],["ty",3,[["interner",3]]]],[[["",0],["constid",3]],["visibility",4]],null,[[["textsize",3]],["bool",0]],[[["assistkind",4]],["bool",0]],[[["hlmod",4]],["bool",0]],[[["textsize",3]],["bool",0]],[[["textrange",3]],["bool",0]],[[["textrange",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[["",0],["crateid",3]],["arc",3,[["defmap",3]]]],[[["",0],["crateid",3]],["arc",3,[["defmap",3]]]],[[["",0],["crateid",3]],["cancellable",6,[["edition",4]]]],[[["",0],["fileid",3]],["cancellable",6,[["vec",3,[["crateid",3]]]]]],[[["",0]],["arc",3,[["crategraph",3]]]],null,[[["",0],["fileid",3]],["option",4,[["crateid",3]]]],[[["",0],["crateid",3]],["arc",3,[["langitems",3]]]],[[["",0],["crateid",3]],["cratelimits",3]],[[["",0],["crateid",3]],["cancellable",6,[["fileid",3]]]],[[["",0],["crateid",3]],["bool",0]],null,null,[[["",0]],["vec",3,[["crateid",3],["global",3]]]],null,null,null,[[],["textedit",3]],[[],["textrange",3]],[[],["textsize",3]],[[],["crategraph",3]],[[],["change",3]],[[],["exprfilldefaultmode",4]],[[],["diagnosticsconfig",3]],[[],["sourcechange",3]],[[],["rootdatabase",3]],[[],["completionrelevance",3]],[[],["markup",3]],[[],["highlightrelatedconfig",3]],[[],["hoverresult",3]],[[],["hlmods",3]],[[],["analysishost",3]],null,[[["textrange",3]],["indel",3]],[[["textrange",3]],["textedit",3]],null,[[["",0]],["bool",0]],null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["",0],["syntaxtoken",3,[["rustlanguage",4]]]],["smallvec",3]],[[["",0],["syntaxtoken",3,[["rustlanguage",4]]]],["syntaxtoken",3,[["rustlanguage",4]]]],[[["",0],["syntaxtoken",3,[["rustlanguage",4]]]],["syntaxtoken",3,[["rustlanguage",4]]]],[[["",0],["syntaxtoken",3,[["rustlanguage",4]]]],["smallvec",3]],[[["",0]],["smallvec",3]],null,null,[[["",0]],["option",4,[["str",0]]]],null,[[["",0],["diagnosticsconfig",3],["assistresolvestrategy",4],["fileid",3]],["cancellable",6,[["vec",3,[["diagnostic",3]]]]]],[[["",0],["infile",3,[["syntaxnodeptr",3,[["rustlanguage",4]]]]]],["filerange",3]],null,null,null,null,[[["",0]],["option",4,[["documentation",3]]]],null,[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["textsize",3]],["textrange",3]],[[],["searchscope",3]],null,null,null,[[["",0]],["bool",0]],null,[[],["textsize",3]],[[["",0]],["bound",4,[["textsize",3]]]],[[["",0],["enumid",3]],["arc",3,[["enumdata",3]]]],[[["",0],["indel",3]],["bool",0]],[[["",0],["textrange",3]],["bool",0]],[[["",0],["textsize",3]],["bool",0]],[[["",0],["fileid",3]],["bool",0]],[[["",0],["sourcerootid",3]],["bool",0]],[[["",0],["sourceroot",3]],["bool",0]],[[["",0],["crateid",3]],["bool",0]],[[["",0],["edition",4]],["bool",0]],[[["",0],["exprfilldefaultmode",4]],["bool",0]],[[["",0],["filerange",3]],["bool",0]],[[["",0],["ssrerror",3]],["bool",0]],[[["",0],["assistkind",4]],["bool",0]],[[["",0],["assistid",3]],["bool",0]],[[["",0],["str",0]],["bool",0]],[[["",0],["str",0]],["bool",0]],[[["",0],["lineindex",3]],["bool",0]],[[["",0],["linecolutf16",3]],["bool",0]],[[["",0],["linecol",3]],["bool",0]],[[["",0],["referencecategory",4]],["bool",0]],[[["",0],["symbolkind",4]],["bool",0]],[[["",0],["completionconfig",3]],["bool",0]],[[["",0],["callablesnippets",4]],["bool",0]],[[["",0],["completionrelevance",3]],["bool",0]],[[["",0],["completionitemkind",4]],["bool",0]],[[["",0],["snippetscope",4]],["bool",0]],[[["",0],["snippet",3]],["bool",0]],[[["",0],["navigationtarget",3]],["bool",0]],[[["",0],["highlightedrange",3]],["bool",0]],[[["",0],["structurenodekind",4]],["bool",0]],[[["",0],["foldkind",4]],["bool",0]],[[["",0],["hoverconfig",3]],["bool",0]],[[["",0],["hoverdocformat",4]],["bool",0]],[[["",0],["hovergototypedata",3]],["bool",0]],[[["",0],["inlayhintsconfig",3]],["bool",0]],[[["",0],["closurereturntypehints",4]],["bool",0]],[[["",0],["lifetimeelisionhints",4]],["bool",0]],[[["",0],["reborrowhints",4]],["bool",0]],[[["",0],["inlaykind",4]],["bool",0]],[[["",0],["monikerkind",4]],["bool",0]],[[["",0],["monikerresult",3]],["bool",0]],[[["",0],["packageinformation",3]],["bool",0]],[[["",0],["runnable",3]],["bool",0]],[[["",0],["testid",4]],["bool",0]],[[["",0],["runnablekind",4]],["bool",0]],[[["",0],["tokenid",3]],["bool",0]],[[["",0],["highlight",3]],["bool",0]],[[["",0],["hlmods",3]],["bool",0]],[[["",0],["hltag",4]],["bool",0]],[[["",0],["hlmod",4]],["bool",0]],[[["",0],["hlpunct",4]],["bool",0]],[[["",0],["hloperator",4]],["bool",0]],[[["",0],["assistconfig",3]],["bool",0]],[[["",0],["documentation",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0]]],null,null,[[["",0],["macrocall",3]],["option",4,[["syntaxnode",3,[["rustlanguage",4]]]]]],[[["",0],["item",4]],["option",4,[["syntaxnode",3,[["rustlanguage",4]]]]]],[[["",0],["attr",3]],["option",4,[["syntaxnode",3,[["rustlanguage",4]]]]]],[[["",0],["attr",3]],["option",4,[["vec",3,[["syntaxnode",3,[["rustlanguage",4]]],["global",3]]]]]],[[["",0],["fileposition",3]],["cancellable",6,[["option",4,[["expandedmacro",3]]]]]],[[["",0],["macrocallid",3]],["valueresult",3,[["subtree",3],["expanderror",4]]]],null,null,null,[[["",0],["defwithbodyid",4]],["arc",3,[["exprscopes",3]]]],[[["",0],["crategraph",3]],["u32",0]],[[["",0]]],[[["",0]]],[[["",0],["filerange",3]],["cancellable",6,[["textrange",3]]]],[[["",0],["fileposition",3]],["cancellable",6,[["option",4,[["string",3]]]]]],[[],["markup",3]],[[["",0],["variantid",4]],["arc",3,[["arenamap",3,[["idx",3,[["fielddata",3]]],["binders",3,[["ty",3,[["interner",3]]]]]]]]]],[[["",0],["variantid",4]],["arc",3,[["arenamap",3,[["idx",3,[["fielddata",3]]],["visibility",4]]]]]],[[["",0],["variantid",4]],["arc",3,[["arenamap",3,[["idx",3,[["fielddata",3]]],["attrs",3]]]]]],[[["",0],["variantid",4]],["arc",3,[["arenamap",3,[["idx",3,[["fielddata",3]]],["either",4,[["astptr",3,[["tuplefield",3]]],["astptr",3,[["recordfield",3]]]]]]]]]],[[["",0],["vfspath",3]],["option",4,[["fileid",3]]]],null,null,null,null,[[["",0],["hirfileid",3]],["arc",3,[["itemtree",3]]]],[[["",0],["fileid",3]],["cancellable",6,[["arc",3,[["lineindex",3]]]]]],[[["filerange",3]],["searchscope",3]],[[["",0],["fileid",3]],["sourcerootid",3]],[[["",0],["fileid",3]],["cancellable",6,[["vec",3,[["structurenode",3]]]]]],null,[[["",0],["fileid",3]],["arc",3,[["string",3]]]],[[["",0],["fileid",3]],["arc",3,[["string",3]]]],[[["",0],["fileid",3]],["cancellable",6,[["arc",3,[["string",3]]]]]],[[],["searchscope",3]],null,null,[[["",0],["fileid",3]],["cancellable",6,[["vec",3,[["filerange",3]]]]]],[[["",0],["fileposition",3],["option",4,[["searchscope",3]]]],["cancellable",6,[["option",4,[["vec",3,[["referencesearchresult",3]]]]]]]],[[["",0],["syntaxnode",3],["textsize",3]],["option",4]],[[["",0],["syntaxnode",3],["textsize",3]],["option",4]],[[["",0],["syntaxnode",3],["textsize",3]]],null,[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["crateid",3],["fndefid",3,[["interner",3]]]],["arc",3,[["fndefdatum",3,[["interner",3]]]]]],[[["",0],["fndefid",3,[["interner",3]]]],["variances",3,[["interner",3]]]],[[["",0]],["textrange",3]],null,[[["",0],["fileid",3]],["cancellable",6,[["vec",3,[["fold",3]]]]]],null,[[]],[[]],[[]],[[["rangeoroffset",4]],["textrange",3]],[[]],[[["u32",0]],["textsize",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["crate",3]],["crateid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["hashmap",3,[["fileid",3],["textedit",3],["buildhasherdefault",3,[["fxhasher",3]]]]]],["sourcechange",3]],[[["filesystemedit",4]],["sourcechange",3]],[[]],[[]],[[]],[[]],[[]],[[["macrokind",4]],["symbolkind",4]],[[["filesymbolkind",4]],["symbolkind",4]],[[]],[[]],[[]],[[]],[[["symbolkind",4]],["completionitemkind",4]],[[]],[[]],[[]],[[["string",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["symbolkind",4]],["highlight",3]],[[["hltag",4]],["highlight",3]],[[["hloperator",4]],["highlight",3]],[[]],[[["hlpunct",4]],["highlight",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["hashmap",3,[["fileid",3],["textedit",3],["buildhasherdefault",3,[["fxhasher",3]]]]],["vec",3,[["filesystemedit",4],["global",3]]]],["sourcechange",3]],[[["string",3]]],[[["str",0]],["result",4,[["edition",4]]]],[[["str",0]],["result",4,[["assistkind",4]]]],[[["fileid",3],["textedit",3]],["sourcechange",3]],null,[[["",0],["functionid",3]],["arc",3,[["functiondata",3]]]],[[["",0],["functionid",3]],["visibility",4]],[[["",0],["genericdefid",4]],["arc",3]],[[["",0],["genericdefid",4]],["interned",3,[["genericparams",3]]]],[[["",0],["genericdefid",4]],["arc",3]],[[["",0],["genericdefid",4],["typeorconstparamid",3],["option",4,[["name",3]]]],["arc",3]],[[["",0],["fileid",3]],["option",4,[["textedit",3]]]],[[["",0],["fileposition",3]],["cancellable",6,[["option",4,[["rangeinfo",3,[["vec",3,[["navigationtarget",3]]]]]]]]]],[[["",0],["fileposition",3]],["cancellable",6,[["option",4,[["rangeinfo",3,[["vec",3,[["navigationtarget",3]]]]]]]]]],[[["",0],["fileposition",3]],["cancellable",6,[["option",4,[["rangeinfo",3,[["vec",3,[["navigationtarget",3]]]]]]]]]],[[["",0],["fileposition",3]],["cancellable",6,[["option",4,[["rangeinfo",3,[["vec",3,[["navigationtarget",3]]]]]]]]]],nullnull,null,[[["",0],["fileid",3]],["cancellable",6,[["vec",3,[["hlrange",3]]]]]],null,[[["",0],["fileid",3],["bool",0]],["cancellable",6,[["string",3]]]],[[["",0],["filerange",3]],["cancellable",6,[["vec",3,[["hlrange",3]]]]]],[[["",0],["highlightrelatedconfig",3],["fileposition",3]],["cancellable",6,[["option",4,[["vec",3,[["highlightedrange",3]]]]]]]],[[["",0],["syntaxnode",3]],["hirfileid",3]],[[["",0],["hoverconfig",3],["filerange",3]],["cancellable",6,[["option",4,[["rangeinfo",3,[["hoverresult",3]]]]]]]],null,[[["",0],["hirfileid",3]],["arc",3,[["hygieneframe",3]]]],null,null,[[["",0],["implid",3]],["arc",3,[["impldata",3]]]],[[["",0],["crateid",3],["implid",3,[["interner",3]]]],["arc",3,[["impldatum",3,[["interner",3]]]]]],[[["",0],["implid",3]],["binders",3,[["ty",3,[["interner",3]]]]]],[[["",0],["implid",3]],["option",4,[["binders",3,[["traitref",3,[["interner",3]]]]]]]],[[["",0],["crateid",3]],["arc",3,[["importmap",3]]]],[[["",0]]],[[["",0],["fileposition",3]],["cancellable",6,[["option",4,[["vec",3,[["callitem",3]]]]]]]],[[["",0],["crateid",3]],["cratedata",3]],[[["",0],["defwithbodyid",4]],["arc",3,[["inferenceresult",3]]]],[[["",0],["defwithbodyid",4]],["arc",3,[["inferenceresult",3]]]],null,[[["",0],["crateid",3],["tyfingerprint",4]],["arrayvec",3,[["crateid",3]]]],[[["",0],["blockid",3]],["option",4,[["arc",3,[["inherentimpls",3]]]]]],[[["",0],["crateid",3]],["arc",3,[["inherentimpls",3]]]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[["",0],["inlayhintsconfig",3],["fileid",3],["option",4,[["filerange",3]]]],["cancellable",6,[["vec",3,[["inlayhint",3]]]]]],null,[[["textsize",3],["string",3]],["indel",3]],[[["textsize",3],["string",3]],["textedit",3]],null,[[["",0],["fileid",3],["textedit",3]]],null,null,[[["",0],["blockloc",3]],["blockid",3]],[[["",0],["callabledefid",4]],["internedcallabledefid",3]],[[["",0]],["internedclosureid",3]],[[["",0],["associtemloc",3,[["const",3]]]],["constid",3]],[[["",0],["itemloc",3,[["enum",3]]]],["enumid",3]],[[["",0],["itemloc",3,[["externblock",3]]]],["externblockid",3]],[[["",0],["associtemloc",3,[["function",3]]]],["functionid",3]],[[["",0],["itemloc",3,[["impl",3]]]],["implid",3]],[[["",0],["impltraitid",4]],["internedopaquetyid",3]],[[["",0],["lifetimeparamid",3]],["internedlifetimeparamid",3]],[[["",0],["macro2loc",3]],["macro2id",3]],[[["",0],["macrocallloc",3]],["macrocallid",3]],[[["",0],["macrorulesloc",3]],["macrorulesid",3]],[[["",0],["procmacroloc",3]],["procmacroid",3]],[[["",0],["associtemloc",3,[["static",3]]]],["staticid",3]],[[["",0],["itemloc",3,[["struct",3]]]],["structid",3]],[[["",0],["itemloc",3,[["trait",3]]]],["traitid",3]],[[["",0],["associtemloc",3,[["typealias",3]]]],["typealiasid",3]],[[["",0],["typeorconstparamid",3]],["internedtypeorconstparamid",3]],[[["",0],["itemloc",3,[["union",3]]]],["unionid",3]],[[["textrange",3]],["option",4,[["textrange",3]]]],[[["",0],["searchscope",3]],["searchscopeitem",4]],["bool",0]],null,[[["",0],["adt",4]],["bool",0]],[[["",0]],["bool",0]],[[],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0],["expr",4]],["option",4,[["mutability",4]]]],null,null,[[["",0],["fileid",3]],["cancellable",6,[["bool",0]]]],null,null,null,null,[[["",0]],["bool",0]],[[["",0]],["bool",0]],null,[[["",0],["identpat",3]],["bool",0]],[[["",0],["macrocall",3]],["bool",0]],[[["",0],["methodcallexpr",3]],["bool",0]],[[["",0],["refexpr",3]],["bool",0]],[[["",0]],["iter",3,[["indel",3]]]],[[["",0]]],[[["",0]]],[[]],null,null,[[["",0],["joinlinesconfig",3],["filerange",3]],["cancellable",6,[["textedit",3]]]],[[["",0]],["completionitemkind",4]],null,null,null,null,null,null,null,[[["",0]],["str",0]],[[["",0],["option",4,[["string",3]]]],["string",3]],null,null,null,[[["",0],["crateid",3],["smolstr",3]],["option",4,[["langitemtarget",4]]]],[[["",0]],["usize",0]],[[],["textsize",3]],[[["",0]],["arc",3,[["hashset",3,[["sourcerootid",3],["buildhasherdefault",3,[["fxhasher",3]]]]]]]],[[["",0],["sourcerootid",3]],["arc",3,[["symbolindex",3]]]],[[["",0]]],null,[[["",0],["usize",0]]],null,null,[[["",0],["textsize",3]],["linecol",3]],[[["",0],["fileid",3]],["arc",3,[["lineindex",3]]]],[[["",0],["textrange",3]]],null,[[["",0]],["arc",3,[["hashset",3,[["sourcerootid",3],["buildhasherdefault",3,[["fxhasher",3]]]]]]]],[[["",0]],["str",0]],[[["",0],["blockid",3]],["blockloc",3]],[[["",0],["internedcallabledefid",3]],["callabledefid",4]],[[["",0],["internedclosureid",3]]],[[["",0],["constid",3]],["associtemloc",3,[["const",3]]]],[[["",0],["enumid",3]],["itemloc",3,[["enum",3]]]],[[["",0],["externblockid",3]],["itemloc",3,[["externblock",3]]]],[[["",0],["functionid",3]],["associtemloc",3,[["function",3]]]],[[["",0],["implid",3]],["itemloc",3,[["impl",3]]]],[[["",0],["internedopaquetyid",3]],["impltraitid",4]],[[["",0],["internedlifetimeparamid",3]],["lifetimeparamid",3]],[[["",0],["macro2id",3]],["macro2loc",3]],[[["",0],["macrocallid",3]],["macrocallloc",3]],[[["",0],["macrorulesid",3]],["macrorulesloc",3]],[[["",0],["procmacroid",3]],["procmacroloc",3]],[[["",0],["staticid",3]],["associtemloc",3,[["static",3]]]],[[["",0],["structid",3]],["itemloc",3,[["struct",3]]]],[[["",0],["traitid",3]],["itemloc",3,[["trait",3]]]],[[["",0],["typealiasid",3]],["associtemloc",3,[["typealias",3]]]],[[["",0],["internedtypeorconstparamid",3]],["typeorconstparamid",3]],[[["",0],["unionid",3]],["itemloc",3,[["union",3]]]],[[["",0],["macro2id",3]],["arc",3,[["macro2data",3]]]],[[["",0],["macrocallid",3]],["option",4,[["arc",3]]]],[[["",0],["macrocallid",3]],["option",4,[["greennode",3]]]],[[["",0],["macrodefid",3]],["result",4,[["arc",3,[["tokenexpander",4]]],["parseerror",4]]]],[[["",0],["macrocallid",3]],["valueresult",3,[["option",4,[["arc",3,[["subtree",3]]]]],["expanderror",4]]]],[[["",0],["macrocallid",3]],["option",4,[["expanderror",4]]]],[[["",0],["macrorulesid",3]],["arc",3,[["macrorulesdata",3]]]],null,[[["",0],["fileposition",3]],["cancellable",6,[["option",4,[["textsize",3]]]]]],null,[[["sourcechange",3]],["sourcechange",3]],null,null,null,[[["",0],["module",3]],["arc",3,[["symbolindex",3]]]],[[["",0],["fileposition",3]],["cancellable",6,[["option",4,[["rangeinfo",3,[["vec",3,[["monikerresult",3]]]]]]]]]],null,[[["",0],["filerange",3],["direction",4]],["cancellable",6,[["option",4,[["textedit",3]]]]]],[[["",0]],["str",0]],null,null,null,null,null,null,[[["",0],["indel",3]],["bool",0]],[[["",0],["textrange",3]],["bool",0]],[[["",0],["textsize",3]],["bool",0]],[[["",0],["fileid",3]],["bool",0]],[[["",0],["sourcerootid",3]],["bool",0]],[[["",0],["sourceroot",3]],["bool",0]],[[["",0],["crateid",3]],["bool",0]],[[["",0],["filerange",3]],["bool",0]],[[["",0],["ssrerror",3]],["bool",0]],[[["",0],["assistid",3]],["bool",0]],[[["",0],["lineindex",3]],["bool",0]],[[["",0],["linecolutf16",3]],["bool",0]],[[["",0],["linecol",3]],["bool",0]],[[["",0],["completionconfig",3]],["bool",0]],[[["",0],["completionrelevance",3]],["bool",0]],[[["",0],["completionitemkind",4]],["bool",0]],[[["",0],["snippet",3]],["bool",0]],[[["",0],["navigationtarget",3]],["bool",0]],[[["",0],["highlightedrange",3]],["bool",0]],[[["",0],["structurenodekind",4]],["bool",0]],[[["",0],["hoverconfig",3]],["bool",0]],[[["",0],["hovergototypedata",3]],["bool",0]],[[["",0],["inlayhintsconfig",3]],["bool",0]],[[["",0],["monikerresult",3]],["bool",0]],[[["",0],["packageinformation",3]],["bool",0]],[[["",0],["runnable",3]],["bool",0]],[[["",0],["testid",4]],["bool",0]],[[["",0],["runnablekind",4]],["bool",0]],[[["",0],["tokenid",3]],["bool",0]],[[["",0],["highlight",3]],["bool",0]],[[["",0],["hlmods",3]],["bool",0]],[[["",0],["hltag",4]],["bool",0]],[[["",0],["assistconfig",3]],["bool",0]],[[["",0],["documentation",3]],["bool",0]],[[["textsize",3],["textsize",3]],["textrange",3]],[[["",0]],["semantics",3]],[[],["change",3]],[[["string",3]],["label",3]],[[["str",0]],["lineindex",3]],[[["string",3]],["query",3]],[[["option",4,[["usize",0]]]],["rootdatabase",3]],[[["str",0],["snippetscope",4]],["option",4,[["snippet",3]]]],[[["textrange",3]],["rangeinfo",3]],[[["option",4,[["usize",0]]]],["analysishost",3]],[[["string",3]],["documentation",3]],[[["fileset",3]],["sourceroot",3]],[[["fileset",3]],["sourceroot",3]],null,[[],["textsize",3]],[[["",0],["linecol",3]],["option",4,[["textsize",3]]]],null,[[["",0],["fileposition",3],["char",0],["bool",0]],["cancellable",6,[["option",4,[["sourcechange",3]]]]]],[[["",0],["fileposition",3]],["cancellable",6,[["option",4,[["textedit",3]]]]]],[[["",0]]],[[["textrange",3]],["ordering",4]],[[["",0]],["option",4]],[[["",0],["syntaxnode",3]],["filerange",3]],[[["",0],["syntaxnode",3]],["option",4,[["filerange",3]]]],[[["",0],["fileposition",3]],["cancellable",6,[["option",4,[["vec",3,[["callitem",3]]]]]]]],null,[[["",0],["u8",0]],["cancellable",6]],null,null,[[["",0]]],[[["",0]]],null,[[["",0],["fileposition",3]],["cancellable",6,[["vec",3,[["navigationtarget",3]]]]]],[[["",0],["fileid",3]],["sourcefile",3]],[[["",0],["fileid",3]],["parse",3,[["sourcefile",3]]]],[[["",0],["fileid",3]],["cancellable",6,[["sourcefile",3]]]],[[["",0],["macrofile",3]],["valueresult",3,[["option",4],["expanderror",4]]]],[[["",0],["hirfileid",3]],["option",4,[["syntaxnode",3,[["rustlanguage",4]]]]]],[[["",0],["hirfileid",3]],["option",4,[["syntaxnode",3,[["rustlanguage",4]]]]]],[[["",0],["textsize",3]],["option",4,[["ordering",4]]]],[[["",0],["fileid",3]],["option",4,[["ordering",4]]]],[[["",0],["sourcerootid",3]],["option",4,[["ordering",4]]]],[[["",0],["crateid",3]],["option",4,[["ordering",4]]]],[[["",0],["edition",4]],["option",4,[["ordering",4]]]],[[["",0],["symbolkind",4]],["option",4,[["ordering",4]]]],[[["",0],["completionitemkind",4]],["option",4,[["ordering",4]]]],[[["",0],["structurenodekind",4]],["option",4,[["ordering",4]]]],[[["",0],["monikerkind",4]],["option",4,[["ordering",4]]]],[[["",0],["highlight",3]],["option",4,[["ordering",4]]]],[[["",0],["hlmods",3]],["option",4,[["ordering",4]]]],[[["",0],["hltag",4]],["option",4,[["ordering",4]]]],[[["",0],["hlmod",4]],["option",4,[["ordering",4]]]],[[["",0],["hlpunct",4]],["option",4,[["ordering",4]]]],[[["",0],["hloperator",4]],["option",4,[["ordering",4]]]],[[["",0]],["bool",0]],[[["",0],["fileid",3]],["option",4,[["vfspath",3]]]],[[["",0],["pat",4]],["smallvec",3]],[[["",0]],["vec",3,[["global",3]]]],[[["",0]],["vec",3]],null,[[["",0],["str",0]],["string",3]],[[["",0]]],null,[[["",0]]],null,[[["",0],["fileposition",3]],["cancellable",6,[["result",4,[["rangeinfo",3],["renameerror",3]]]]]],null,[[["",0],["procmacroid",3]],["arc",3,[["procmacrodata",3]]]],null,[[["",0],["crateid",3],["environment",3,[["interner",3]]]],["programclauses",3,[["interner",3]]]],[[["",0],["filesystemedit",4]]],null,null,null,null,null,null,null,null,null,[[],["usize",0]],[[["",0]],["rootdatabase",3]],[[["",0]],["rootdatabase",3]],null,[[["",0],["recordexpr",3]],["vec",3,[["global",3]]]],[[["",0],["recordpat",3]],["vec",3,[["global",3]]]],[[["",0]],["option",4]],null,null,null,[[["",0],["fileposition",3],["option",4,[["searchscope",3]]]],["cancellable",6,[["vec",3,[["runnable",3]]]]]],[[["",0]],["completionrelevance",3]],[[["",0],["fileid",3]],["arc",3,[["hashset",3,[["crateid",3],["buildhasherdefault",3,[["fxhasher",3]]]]]]]],null,[[["",0],["fileposition",3],["str",0]],["cancellable",6,[["result",4,[["sourcechange",3],["renameerror",3]]]]]],null,[[["textrange",3],["string",3]],["indel",3]],[[["textrange",3],["string",3]],["textedit",3]],null,[[["",0]]],[[["",0]]],null,[[["",0],["annotation",3]],["cancellable",6,[["annotation",3]]]],[[["",0],["item",4]],["option",4,[["macro",3]]]],[[["",0],["identpat",3]],["option",4,[["moduledef",4]]]],[[["",0],["completionconfig",3],["fileposition",3]],["cancellable",6,[["vec",3,[["textedit",3]]]]]],[[["",0],["attr",3]],["option",4,[["vec",3,[["option",4,[["macro",3]]],["global",3]]]]]],[[["",0],["externcrate",3]],["option",4,[["crate",3]]]],[[["",0],["fieldexpr",3]],["option",4,[["field",3]]]],[[["",0],["lifetime",3]],["option",4,[["label",3]]]],[[["",0],["lifetime",3]],["option",4,[["lifetimeparam",3]]]],[[["",0],["macrocall",3]],["option",4,[["macro",3]]]],[[["",0],["methodcallexpr",3]],["option",4,[["function",3]]]],[[["",0],["methodcallexpr",3]],["option",4,[["callable",3]]]],[[["",0],["path",3]],["option",4,[["pathresolution",4]]]],[[["",0],["anchoredpath",3]],["option",4,[["fileid",3]]]],[[["",0],["recordexprfield",3]],["option",4]],[[["",0],["recordpatfield",3]],["option",4,[["field",3]]]],[[["",0],["type",4]],["option",4,[["type",3]]]],[[["",0],["recordexpr",3]],["option",4,[["variantdef",4]]]],[[["",0],["functionid",3]],["option",4,[["arc",3,[["binders",3,[["returntypeimpltraits",3]]]]]]]],null,[[["",0],["fileid",3]],["cancellable",6,[["vec",3,[["runnable",3]]]]]],[[["",0],["syntaxnode",3]],["option",4,[["semanticsscope",3]]]],null,[[["",0],["syntaxnode",3],["textsize",3]],["option",4,[["semanticsscope",3]]]],[[["",0],["trait",3]],["semanticsscope",3]],[[],["u32",0]],[[["",0],["crategraph",3]]],[[["",0],["arc",3,[["crategraph",3]]]]],[[["",0],["arc",3,[["crategraph",3]]],["durability",3]]],[[["",0],["bool",0]]],[[["",0],["bool",0],["durability",3]]],[[["",0],["fileid",3],["sourcerootid",3]]],[[["",0],["fileid",3],["sourcerootid",3],["durability",3]]],[[["",0],["fileid",3],["arc",3,[["string",3]]]]],[[["",0],["fileid",3],["arc",3,[["string",3]]],["durability",3]]],[[["",0],["arc",3,[["hashset",3,[["sourcerootid",3],["buildhasherdefault",3,[["fxhasher",3]]]]]]]]],[[["",0],["arc",3,[["hashset",3,[["sourcerootid",3],["buildhasherdefault",3,[["fxhasher",3]]]]]]],["durability",3]]],[[["",0],["arc",3,[["hashset",3,[["sourcerootid",3],["buildhasherdefault",3,[["fxhasher",3]]]]]]]]],[[["",0],["arc",3,[["hashset",3,[["sourcerootid",3],["buildhasherdefault",3,[["fxhasher",3]]]]]]],["durability",3]]],[[["",0],["vec",3,[["sourceroot",3],["global",3]]]]],[[["",0],["sourcerootid",3],["arc",3,[["sourceroot",3]]]]],[[["",0],["sourcerootid",3],["arc",3,[["sourceroot",3]]],["durability",3]]],null,[[["",0],["assistid",3]],["bool",0]],[[["",0]]],null,[[["",0],["fileposition",3]],["cancellable",6,[["option",4,[["signaturehelp",3]]]]]],[[["fileid",3]],["searchscope",3]],[[["",0]],["snapshot",3,[["rootdatabase",3]]]],[[["",0]],["string",3]],null,null,null,[[["",0]],["option",4,[["infile",3]]]],null,null,[[["",0]],["textrange",3]],[[["",0],["sourcerootid",3]],["arc",3,[["sourceroot",3]]]],[[["",0],["sourcerootid",3]],["arc",3,[["hashset",3,[["crateid",3],["buildhasherdefault",3,[["fxhasher",3]]]]]]]],[[["",0],["macrocall",3],["tokentree",3],["syntaxtoken",3,[["rustlanguage",4]]]],["option",4]],[[["",0],["item",4],["item",4],["syntaxtoken",3,[["rustlanguage",4]]]],["option",4]],[[["",0],["attr",3],["attr",3],["syntaxtoken",3,[["rustlanguage",4]]]],["option",4]],[[],["textsize",3]],[[["",0]],["bound",4,[["textsize",3]]]],[[["",0],["staticid",3]],["arc",3,[["staticdata",3]]]],[[["",0],["option",4,[["fileid",3]]]],["cancellable",6,[["string",3]]]],[[["",0],["structid",3]],["arc",3,[["structdata",3]]]],[[["",0],["crateid",3],["adtid",3,[["interner",3]]]],["arc",3,[["adtdatum",3,[["interner",3]]]]]],[[["",0],["str",0],["bool",0],["fileposition",3],["vec",3,[["filerange",3]]]],["cancellable",6,[["result",4,[["sourcechange",3],["ssrerror",3]]]]]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textsize",3]],[[["textsize",3]],["textsize",3]],[[["",0]]],[[["",0]]],[[],["textsize",3]],[[["",0],["query",3]],["cancellable",6,[["vec",3,[["navigationtarget",3]]]]]],[[["",0],["fileid",3],["option",4,[["textrange",3]]]],["cancellable",6,[["string",3]]]],null,null,null,[[["",0]],["textedit",3]],[[["",0]],["string",3]],[[["",0],["",0]],["option",4]],[[["",0],["fileid",3]],["option",4,[["module",3]]]],[[["",0],["fileidstring",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0],["linecol",3]],["linecolutf16",3]],[[["",0],["linecolutf16",3]],["linecol",3]],[[["",0],["syntaxtoken",3,[["rustlanguage",4]]]]],null,null,null,[[["",0],["traitid",3]],["arc",3,[["traitdata",3]]]],[[["",0],["crateid",3],["traitid",3,[["interner",3]]]],["arc",3,[["traitdatum",3,[["interner",3]]]]]],[[["",0],["genericdefid",4]],["arc",3,[["traitenvironment",3]]]],[[["",0],["blockid",3]],["option",4,[["arc",3,[["traitimpls",3]]]]]],[[["",0],["crateid",3]],["arc",3,[["traitimpls",3]]]],[[["",0],["crateid",3]],["arc",3,[["traitimpls",3]]]],[[["",0],["crateid",3],["canonical",3,[["inenvironment",3,[["goal",3,[["interner",3]]]]]]]],["option",4,[["solution",4,[["interner",3]]]]]],[[["",0],["crateid",3],["canonical",3,[["inenvironment",3,[["goal",3,[["interner",3]]]]]]]],["option",4,[["solution",4,[["interner",3]]]]]],[[["",0],["crateid",3]]],[[["",0],["crateid",3]]],[[["",0]],["bool",0]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",0]],["result",4,[["textsize",3],["tryfrominterror",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0],["tydefid",4]],["binders",3,[["ty",3,[["interner",3]]]]]],[[["",0],["typealiasid",3]],["arc",3,[["typealiasdata",3]]]],null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0],["expr",4]],["option",4,[["typeinfo",3]]]],[[["",0],["pat",4]],["option",4,[["typeinfo",3]]]],[[["",0],["selfparam",3]],["option",4,[["type",3]]]],[[["",0],["textedit",3]],["result",4,[["textedit",3]]]],[[["",0],["unionid",3]],["arc",3,[["structdata",3]]]],null,null,[[["textsize",3]],["textrange",3]],[[["",0]],["astdatabase",8]],[[["",0]],["hirdatabase",8]],[[["",0]],["defdatabase",8]],[[["",0],["option",4,[["usize",0]]]]],[[["",0],["option",4,[["usize",0]]]]],null,[[["",0],["valuetydefid",4]],["binders",3,[["ty",3,[["interner",3]]]]]],[[["",0],["enumid",3]],["arc",3,[["arenamap",3,[["idx",3,[["enumvariantdata",3]]],["attrs",3]]]]]],[[["",0],["enumid",3]],["arc",3,[["arenamap",3,[["idx",3,[["enumvariantdata",3]]],["astptr",3,[["variant",3]]]]]]]],null,[[["",0],["bool",0]],["cancellable",6,[["result",4,[["string",3],["string",3]]]]]],[[["",0],["fileposition",3]],["cancellable",6,[["string",3]]]],[[["",0],["fileid",3]],["cancellable",6,[["string",3]]]],[[["",0],["fileid",3],["str",0]],["cancellable",6,[["option",4,[["sourcechange",3]]]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[3,"FileId"],[3,"SourceRootId"],[3,"CrateId"],[3,"AssistId"],[3,"RenameError"],[4,"CallableSnippets"],[4,"AssistResolveStrategy"],[4,"ClosureReturnTypeHints"],[4,"LifetimeElisionHints"],[4,"ReborrowHints"],[4,"HlPunct"],[4,"FoldKind"],[4,"HlOperator"],[4,"HlMod"],[4,"SymbolKind"],[4,"HlTag"],[4,"RunnableKind"],[4,"CompletionItemKind"],[4,"InlayKind"],[4,"Edition"],[4,"FileSystemEdit"],[4,"ExprFillDefaultMode"],[4,"Direction"],[4,"Severity"],[4,"MonikerKind"],[4,"SnippetScope"],[4,"AssistKind"],[4,"HoverAction"],[4,"AnnotationKind"],[4,"InlayTooltip"],[4,"HoverDocFormat"],[4,"TestId"],[4,"ReferenceCategory"],[4,"StructureNodeKind"],[3,"HoverResult"],[3,"SignatureHelp"],[3,"TextRange"],[3,"TextSize"],[3,"CrateGraph"],[3,"RootDatabase"],[3,"AssistConfig"],[3,"AnalysisHost"],[3,"Semantics"],[3,"AnnotationConfig"],[3,"Analysis"],[3,"Indel"],[3,"TextEdit"],[3,"Change"],[3,"Markup"],[3,"Documentation"],[3,"SingleResolve"],[3,"HlRange"],[3,"InlayHintsConfig"],[3,"Highlight"],[3,"HlMods"],[3,"SourceRoot"],[3,"Diagnostic"],[3,"FilePosition"],[3,"FileRange"],[3,"DiagnosticsConfig"],[3,"SsrError"],[3,"ExpandedMacro"],[3,"Cancelled"],[3,"Assist"],[3,"Label"],[3,"LineIndex"],[3,"LineColUtf16"],[3,"JoinLinesConfig"],[3,"LineCol"],[3,"SearchScope"],[3,"SourceChange"],[3,"Query"],[3,"CompletionConfig"],[3,"CompletionItem"],[3,"CompletionRelevance"],[3,"Snippet"],[3,"ParallelPrimeCachesProgress"],[3,"NavigationTarget"],[3,"Annotation"],[3,"CallItem"],[3,"HighlightedRange"],[3,"HighlightRelatedConfig"],[3,"StructureNode"],[3,"Fold"],[3,"HoverConfig"],[3,"HoverGotoTypeData"],[3,"InlayHint"],[3,"MonikerResult"],[3,"PackageInformation"],[3,"ReferenceSearchResult"],[3,"Runnable"],[3,"StaticIndex"],[3,"TokenStaticData"],[3,"TokenId"],[3,"StaticIndexedFile"],[3,"RangeInfo"],[13,"Runnable"],[13,"HasImpls"],[13,"HasReferences"],[13,"Single"],[13,"SymbolKind"],[13,"CreateFile"],[13,"MoveFile"],[13,"MoveDir"],[13,"Symbol"],[13,"Operator"],[13,"Punctuation"],[13,"Runnable"],[13,"Implementation"],[13,"Reference"],[13,"GoToType"],[13,"String"],[13,"HoverRanged"],[13,"HoverOffset"],[13,"Test"],[13,"TestMod"],[13,"Bench"],[13,"DocTest"],[13,"SymbolKind"],[13,"Name"],[13,"Path"]]},\
"ide_assists":{"doc":"<code>assists</code> crate provides a bunch of code assists, also known …","t":[12,12,12,13,3,3,3,4,4,13,3,13,13,13,13,13,13,13,13,3,12,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,4,13,13,5,11,11,11,11,11,11,11,11,5,5,11,11,11,5,11,11,11,11],"n":["0","0","1","All","Assist","AssistConfig","AssistId","AssistKind","AssistResolveStrategy","Generate","GroupLabel","None","None","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Single","SingleResolve","allowed","assist_id","assist_kind","assists","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","contains","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_str","group","id","init","init","init","init","init","init","init","insert_use","into","into","into","into","into","into","into","label","name","ne","ne","should_resolve","snippet_cap","source_change","target","to_owned","to_owned","to_owned","to_owned","to_owned","trigger_signature_help","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","utils","0","DefaultMethods","No","Only","add_trait_assoc_items_to_impl","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","extract_trivial_expression","filter_assoc_items","from","init","into","test_related_attribute","to_owned","try_from","try_into","type_id"],"q":["ide_assists","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_assists::AssistResolveStrategy","ide_assists::utils","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","All assists should be resolved.","","","Unique identifier of the assist, should not be shown to …","","A way to control how many asssist to resolve during the …","","","","No assists should be resolved.","","","","","","Only a certain assist should be resolved.","Hold the <code>AssistId</code> data of a certain assist to resolve. The …","","The id of the assist.","","Return all the assists applicable at the given position.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Short description of the assist, as shown in the UI.","","","","","","Computing source change sometimes is much more costly then …","Target ranges are used to sort assists: the smaller the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Assorted functions shared by several assists.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","This is a method with a heuristics to support test methods …","","","",""],"i":[1,2,1,3,0,0,0,0,0,4,0,4,3,4,4,4,4,4,3,0,5,6,6,0,7,4,1,3,6,2,5,7,4,1,3,6,2,5,7,4,1,2,5,7,4,1,2,5,4,7,4,1,3,6,2,5,7,4,1,3,6,2,5,7,4,1,3,6,2,5,4,1,5,4,1,5,7,4,1,3,6,2,5,7,4,1,3,6,2,5,4,7,7,7,4,1,3,6,2,5,5,7,4,1,3,6,2,5,7,4,1,5,3,5,7,7,7,4,1,2,5,7,7,4,1,3,6,2,5,7,4,1,3,6,2,5,7,4,1,3,6,2,5,0,8,0,9,9,0,9,9,9,9,9,9,9,9,0,0,9,9,9,0,9,9,9,9],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["rootdatabase",3],["assistconfig",3],["assistresolvestrategy",4],["filerange",3]],["vec",3,[["assist",3]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["assist",3]],[[["",0]],["assistkind",4]],[[["",0]],["assistid",3]],[[["",0]],["grouplabel",3]],[[["",0]],["assistconfig",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["assistkind",4]],["bool",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["",0],["assistkind",4]],["bool",0]],[[["",0],["assistid",3]],["bool",0]],[[["",0],["assistconfig",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",0]],["result",4,[["assistkind",4]]]],null,null,[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["",0]],["str",0]],[[["",0],["assistid",3]],["bool",0]],[[["",0],["assistconfig",3]],["bool",0]],[[["",0],["assistid",3]],["bool",0]],null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,[[["semantics",3],["vec",3,[["associtem",4]]],["trait",3],["impl",3],["semanticsscope",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["defaultmethods",4]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["",0],["defaultmethods",4]],["bool",0]],[[["blockexpr",3]],["option",4,[["expr",4]]]],[[["semantics",3],["defaultmethods",4]],["vec",3,[["associtem",4]]]],[[]],[[],["usize",0]],[[]],[[["fn",3]],["option",4,[["attr",3]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]]],"p":[[3,"AssistId"],[3,"GroupLabel"],[4,"AssistResolveStrategy"],[4,"AssistKind"],[3,"AssistConfig"],[3,"SingleResolve"],[3,"Assist"],[13,"Single"],[4,"DefaultMethods"]]},\
"ide_completion":{"doc":"<code>completions</code> crate provides utilities for generating …","t":[13,13,13,4,3,3,4,3,4,13,13,13,13,13,13,13,13,3,13,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,12,11,11,12,5,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["AddParentheses","Binding","BuiltinType","CallableSnippets","CompletionConfig","CompletionItem","CompletionItemKind","CompletionRelevance","CompletionRelevancePostfixMatch","Exact","Expr","FillArguments","InferredType","Item","Keyword","Method","NonExact","Snippet","Snippet","SnippetScope","SymbolKind","Type","UnresolvedReference","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callable","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","completions","default","deprecated","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","detail","documentation","drop","drop","drop","drop","drop","drop","drop","drop","enable_imports_on_the_fly","enable_postfix_completions","enable_private_editable","enable_self_on_the_fly","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exact_name_match","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","imports_to_add","init","init","init","init","init","init","init","init","insert_use","into","into","into","into","into","into","into","into","is_definite","is_item_from_trait","is_local","is_name_already_imported","is_op_method","is_private_editable","is_relevant","is_snippet","kind","label","lookup","ne","ne","ne","ne","new","partial_cmp","postfix_match","postfix_snippet","postfix_snippets","postfix_triggers","prefix_snippets","prefix_triggers","ref_match","relevance","requires_import","resolve_completion_edits","scope","score","snippet","snippet_cap","snippets","source_range","text_edit","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","trigger_call_info","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_match","0"],"q":["ide_completionide_completion::CompletionItemKind"],"d":["","","","","","<code>CompletionItem</code> describes a single completion variant in …","The type of the completion item.","","","This is set in cases like these:","","","","","","","Set in cases when item is postfix, but not exact","A user supplied snippet.","","A snippet scope describing where a snippet may apply to. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Main entry point for completion. We run completion as a …","","","","","","","","","","","","","","","","","","","","Short one-line additional information, like a type","A doc-comment","","","","","","","","","","","","","","","","","","","","","","","","","","","This is set in cases like these:","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","This is set for type inference results","This is set when trait items are completed in an impl of …","This is set in cases like these:","This is set when an import is suggested whose name is …","Set for method completions of the <code>core::ops</code> and <code>core::cmp</code> …","Set for item completions that are private but in the …","Returns true when the score for this threshold is above …","Whether <code>text_edit</code> is a snippet (contains <code>$0</code> markers).","","What user sees in pop-up in the UI.","What string is used for filtering.","","","","","","","Set for postfix snippet item completions","","","","","","","","This is set for completions that will insert a <code>use</code> item.","Resolves additional completion data at the position given. …","","Provides a relevance score. Higher values are more …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See CompletionRelevanceTypeMatch doc comments for cases …",""],"i":[1,2,2,0,0,0,0,0,0,3,4,1,2,4,2,2,3,0,2,0,2,4,2,5,1,6,7,3,2,4,8,5,1,6,7,3,2,4,8,5,5,1,6,7,3,2,4,8,5,1,6,7,3,2,4,8,2,0,7,6,5,1,6,7,3,2,4,8,5,1,6,7,3,2,4,8,8,6,6,5,1,6,7,3,2,4,8,5,5,5,5,5,1,7,3,2,4,8,5,1,7,3,2,4,8,7,5,1,6,7,3,2,4,8,5,1,6,7,3,2,2,4,8,6,5,1,6,7,3,2,4,8,5,5,1,6,7,3,2,4,8,7,7,7,7,7,7,7,6,6,6,6,5,7,2,8,8,2,7,8,5,8,5,8,6,6,7,0,8,7,8,5,5,6,6,5,1,6,7,3,2,4,8,6,5,1,6,7,3,2,4,8,5,1,6,7,3,2,4,8,5,1,6,7,3,2,4,8,7,9],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0]],["completionconfig",3]],[[["",0]],["callablesnippets",4]],[[["",0]],["completionitem",3]],[[["",0]],["completionrelevance",3]],[[["",0]],["completionrelevancepostfixmatch",4]],[[["",0]],["completionitemkind",4]],[[["",0]],["snippetscope",4]],[[["",0]],["snippet",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["completionitemkind",4]],["ordering",4]],[[["rootdatabase",3],["completionconfig",3],["fileposition",3],["option",4,[["char",0]]]],["option",4,[["vec",3,[["completionitem",3]]]]]],[[],["completionrelevance",3]],[[["",0]],["bool",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],null,[[["",0]],["option",4,[["str",0]]]],[[["",0]],["option",4,[["documentation",3]]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],null,null,null,null,[[["",0],["completionconfig",3]],["bool",0]],[[["",0],["callablesnippets",4]],["bool",0]],[[["",0],["completionrelevance",3]],["bool",0]],[[["",0],["completionrelevancepostfixmatch",4]],["bool",0]],[[["",0],["completionitemkind",4]],["bool",0]],[[["",0],["snippetscope",4]],["bool",0]],[[["",0],["snippet",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["symbolkind",4]],["completionitemkind",4]],[[]],[[]],[[]],[[["",0]]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["completionitemkind",4]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0],["completionconfig",3]],["bool",0]],[[["",0],["completionrelevance",3]],["bool",0]],[[["",0],["completionitemkind",4]],["bool",0]],[[["",0],["snippet",3]],["bool",0]],[[["str",0],["snippetscope",4]],["option",4]],[[["",0],["completionitemkind",4]],["option",4,[["ordering",4]]]],null,[[["",0],["str",0]],["string",3]],[[["",0]]],null,[[["",0]]],null,[[["",0]],["option",4]],[[["",0]],["completionrelevance",3]],null,[[["rootdatabase",3],["completionconfig",3],["fileposition",3]],["option",4,[["vec",3,[["textedit",3]]]]]],null,[[],["u32",0]],[[["",0]],["string",3]],null,null,[[["",0]],["textrange",3]],[[["",0]],["textedit",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["bool",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null],"p":[[4,"CallableSnippets"],[4,"CompletionItemKind"],[4,"CompletionRelevancePostfixMatch"],[4,"SnippetScope"],[3,"CompletionConfig"],[3,"CompletionItem"],[3,"CompletionRelevance"],[3,"Snippet"],[13,"SymbolKind"]]},\
"ide_db":{"doc":"This crate defines the core datastructure representing IDE …","t":[13,13,13,13,13,13,13,13,6,6,3,6,6,13,13,13,8,3,3,3,13,13,13,3,13,13,3,13,13,4,13,13,13,13,13,13,13,14,14,0,11,11,0,11,11,11,11,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,0,10,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,0,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,3,11,11,11,5,5,11,11,11,11,11,11,11,11,12,11,11,12,11,12,12,12,13,3,3,4,4,13,3,13,13,13,13,13,13,13,13,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,13,13,13,13,4,13,13,13,13,13,13,4,13,13,13,13,4,13,4,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,17,17,17,17,17,3,3,17,17,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,5,5,5,5,5,5,0,0,0,13,3,13,3,4,3,4,13,3,13,3,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,11,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,13,13,13,13,13,4,4,3,13,13,13,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,5,11,11,11,11,11,12,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,13,4,13,11,11,11,11,5,11,11,11,11,5,5,11,11,11,11,11,11,11,11,5,5,11,4,13,7,13,13,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,4,13,3,6,13,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,5,3,3,13,4,3,3,13,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,3,3,3,3,3,3,8,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,10,12,11,11,10,12,11,11,10,12,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,3,11,11,11,11,11,11,11,11,0,11,11,0,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,5,5,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5],"n":["Attribute","BuiltinAttr","Const","ConstParam","Derive","Enum","Field","Function","FxHashMap","FxHashSet","FxHasher","FxIndexMap","FxIndexSet","Impl","Label","LifetimeParam","LineIndexDatabase","LineIndexDatabaseGroupStorage__","LineIndexDatabaseStorage","LineIndexQuery","Local","Macro","Module","RootDatabase","SelfParam","SelfType","SnippetCap","Static","Struct","SymbolKind","ToolModule","Trait","TypeAlias","TypeParam","Union","ValueParam","Variant","_bail","_format_err","active_parameter","adt_variance","apply_change","assists","associated_ty_data","associated_ty_value","ast_id_map","attrs","base_db","block_def_map","body","body_with_source_map","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callable_item_signature","clone","clone","clone_into","clone_into","cmp","const_data","const_eval","const_param_ty","const_visibility","crate_def_map","crate_def_map_query","crate_graph","crate_lang_items","crate_limits","crate_supports_no_std","default","default","default","defs","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","enable_proc_attr_macros","enum_data","eq","eq","equivalent","equivalent","execute","expand_proc_macro","expr_scopes","famous_defs","field_types","field_visibilities","fields_attrs","fields_attrs_source_map","file_item_tree","file_source_root","file_text","file_text","finish","fmt","fmt","fmt","fmt","fmt_index","fmt_index","fn_def_datum","fn_def_variance","for_each_query","for_each_query","from","from","from","from","from","from","from","from","from","function_data","function_visibility","generated","generic_defaults","generic_params","generic_predicates","generic_predicates_for_param","group_storage","group_storage","group_storage","group_storage","group_storage","group_storage","group_storage","group_storage","hash","helpers","hygiene_frame","impl_data","impl_datum","impl_self_ty","impl_trait","import_map","imports","in_db","in_db_mut","infer","infer_query","inherent_impl_crates","inherent_impls_in_block","inherent_impls_in_crate","init","init","init","init","init","init","init","intern_block","intern_callable_def","intern_closure","intern_const","intern_enum","intern_extern_block","intern_function","intern_impl","intern_impl_trait_id","intern_lifetime_param_id","intern_macro2","intern_macro_call","intern_macro_rules","intern_proc_macro","intern_static","intern_struct","intern_trait","intern_type_alias","intern_type_or_const_param_id","intern_union","into","into","into","into","into","into","into","items_locator","label","lang_item","library_roots","library_symbols","line_index","line_index","line_index","line_index","local_roots","lookup_intern_block","lookup_intern_callable_def","lookup_intern_closure","lookup_intern_const","lookup_intern_enum","lookup_intern_extern_block","lookup_intern_function","lookup_intern_impl","lookup_intern_impl_trait_id","lookup_intern_lifetime_param_id","lookup_intern_macro2","lookup_intern_macro_call","lookup_intern_macro_rules","lookup_intern_proc_macro","lookup_intern_static","lookup_intern_struct","lookup_intern_trait","lookup_intern_type_alias","lookup_intern_type_or_const_param_id","lookup_intern_union","macro2_data","macro_arg","macro_arg_text","macro_def","macro_expand","macro_expand_error","macro_rules_data","maybe_changed_since","maybe_changed_since","module_symbols","ne","new","new","new","ops_database","ops_salsa_runtime","ops_salsa_runtime_mut","parse","parse_macro_expansion","parse_or_expand","partial_cmp","path_transform","per_query_memory_usage","proc_macro_data","program_clauses_for_chalk_env","query_storage","relevant_crates","rename","request_cancellation","resolve_path","return_type_impl_traits","rust_doc","search","set_crate_graph","set_crate_graph_with_durability","set_enable_proc_attr_macros","set_enable_proc_attr_macros_with_durability","set_file_source_root","set_file_source_root_with_durability","set_file_text","set_file_text_with_durability","set_library_roots","set_library_roots_with_durability","set_local_roots","set_local_roots_with_durability","set_source_root","set_source_root_with_durability","snapshot","source_change","source_root","source_root_crates","static_data","struct_data","struct_datum","symbol_index","syntax_helpers","to_owned","to_owned","trait_data","trait_datum","trait_environment","trait_impls_in_block","trait_impls_in_crate","trait_impls_in_deps","trait_solve","trait_solve_query","traits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","ty_filter","type_alias_data","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union_data","upcast","upcast","upcast","update_lru_capacity","use_trivial_contructor","value_ty","variants_attrs","variants_attrs_source_map","write","write_u16","write_u32","write_u64","write_u8","write_usize","ActiveParameter","at_token","borrow","borrow_mut","callable_for_node","callable_for_token","deref","deref_mut","drop","fmt","from","ident","init","into","pat","try_from","try_into","ty","type_id","0","0","1","All","Assist","AssistId","AssistKind","AssistResolveStrategy","Generate","GroupLabel","None","None","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Single","SingleResolve","assist_id","assist_kind","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","contains","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_str","group","id","init","init","init","init","init","init","into","into","into","into","into","into","label","name","ne","should_resolve","source_change","target","to_owned","to_owned","to_owned","to_owned","trigger_signature_help","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","0","Adt","BuiltinAttr","BuiltinType","Const","ConstReference","Definition","Definition","Definition","Field","FieldShorthand","Function","GenericParam","IdentClass","Label","Local","Macro","Module","NameClass","NameClass","NameRefClass","NameRefClass","PatFieldShorthand","SelfType","Static","ToolModule","Trait","TypeAlias","Variant","as_assoc_item","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","canonical_module_path","classify","classify","classify_lifetime","classify_lifetime","classify_lifetime","classify_node","classify_token","clone","clone_into","defined","definitions","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","init","init","init","init","into","into","into","into","krate","module","name","ne","range_for_rename","rename","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","usages","visibility","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","field_ref","local_def","0","field_ref","local_ref","0","1","FamousDefs","alloc","borrow","borrow_mut","builtin_crates","core","core_cmp_Ord","core_convert_AsRef","core_convert_From","core_convert_Into","core_default_Default","core_iter","core_iter_IntoIterator","core_iter_Iterator","core_macros_builtin_derive","core_marker_Copy","core_ops_ControlFlow","core_ops_Deref","core_ops_DerefMut","core_ops_Drop","core_option_Option","core_result_Result","deref","deref_mut","drop","from","init","into","proc_macro","std","test","try_from","try_into","type_id","lints","CLIPPY_LINTS","CLIPPY_LINT_GROUPS","DEFAULT_LINTS","DEFAULT_LINT_GROUPS","FEATURES","Lint","LintGroup","RUSTDOC_LINTS","RUSTDOC_LINT_GROUPS","borrow","borrow","borrow_mut","borrow_mut","children","clone","clone_into","deref","deref","deref_mut","deref_mut","description","drop","drop","from","from","init","init","into","into","label","lint","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","item_name","lint_eq_or_in_group","mod_path_to_ast","pick_best_token","pick_token","visit_file_defs","import_assets","insert_use","merge_imports","Exact","FirstSegmentUnresolved","Fuzzy","ImportAssets","ImportCandidate","LocatedImport","NameToImport","Path","PathImportCandidate","TraitAssocItem","TraitImportCandidate","TraitMethod","assoc_item_name","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","exact_case_sensitive","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_exact_path","for_fuzzy_method_call","for_fuzzy_path","for_ident_pat","for_method_call","from","from","from","from","from","from","from","hash","import_candidate","import_path","init","init","init","init","init","init","init","into","into","into","into","into","into","into","item_for_path_search","item_to_import","name","ne","new","original_item","original_path","path_fuzzy_name_to_exact","qualifier","receiver_ty","search_for_imports","search_for_relative_paths","text","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","1","Block","ByCrate","BySelf","Crate","File","ImportGranularity","ImportScope","InsertUseConfig","Item","Module","Module","Plain","PrefixKind","Preserve","as_syntax_node","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_for_update","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","enforce_granularity","eq","eq","eq","equivalent","equivalent","equivalent","find_insert_use_container","fmt","fmt","fmt","fmt","from","from","from","from","granularity","group","init","init","init","init","insert_use","into","into","into","into","ne","prefix_kind","remove_path_if_in_use_stmt","skip_glob_imports","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","0","0","0","Crate","MergeBehavior","Module","borrow","borrow_mut","clone","clone_into","common_prefix","deref","deref_mut","drop","eq","eq_attrs","eq_visibility","equivalent","fmt","from","init","into","to_owned","try_from","try_into","try_merge_imports","try_merge_trees","type_id","AssocItemSearch","AssocItemsOnly","DEFAULT_QUERY_SEARCH_LIMIT","Exclude","Include","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","items_with_name","to_owned","try_from","try_into","type_id","Label","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","eq","fmt","fmt","from","init","into","new","to_owned","to_string","try_from","try_into","type_id","LineCol","LineColUtf16","LineIndex","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","col","col","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","hash","hash","init","init","init","into","into","into","line","line","line_col","lines","ne","ne","ne","new","offset","to_owned","to_owned","to_owned","to_utf16","to_utf8","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","PathTransform","apply","borrow","borrow_mut","deref","deref_mut","drop","from","function_call","init","into","trait_impl","try_from","try_into","type_id","0","Ident","IdentifierKind","Lifetime","RenameError","Result","Underscore","bail","borrow","borrow","borrow_mut","borrow_mut","classify","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","fmt","fmt","fmt","format_err","from","from","init","init","into","into","source_edit_from_references","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","is_rust_fence","FileReference","FindUsages","Read","ReferenceCategory","SearchScope","UsageSearchResult","Write","all","at_least_one","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","category","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","empty","eq","equivalent","file_range","file_ranges","files","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","in_scope","include_self_refs","init","init","init","init","init","intersection","into","into","into","into","into","into_iter","into_iter","is_empty","iter","len","name","range","references","set_scope","single_file","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","CreateFile","FileSystemEdit","MoveDir","MoveFile","SourceChange","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","extend","extend","file_system_edits","fmt","fmt","from","from","from","from","from_edits","from_text_edit","get_source_edit","init","init","insert_source_edit","into","into","is_snippet","merge","push_file_system_edit","source_file_edits","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","dst","dst","dst","initial_contents","src","src","src_id","LibraryRootsQuery","LibrarySymbolsQuery","LocalRootsQuery","ModuleSymbolsQuery","Query","SymbolIndex","SymbolsDatabase","SymbolsDatabaseGroupStorage__","SymbolsDatabaseStorage","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","case_sensitive","crate_symbols","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","exact","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","fmt_index","for_each_query","from","from","from","from","from","from","from","from","hash","in_db","in_db","in_db","in_db","in_db_mut","in_db_mut","in_db_mut","in_db_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","len","library_roots","library_roots","library_symbols","library_symbols","libs","limit","local_roots","local_roots","maybe_changed_since","memory_size","module_symbols","module_symbols","new","new","only_types","query_storage","query_storage","query_storage","query_storage","set_library_roots","set_library_roots_with_durability","set_local_roots","set_local_roots_with_durability","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","world_symbols","LexedStr","as_str","borrow","borrow_mut","deref","deref_mut","drop","error","errors","format_string","from","init","insert_whitespace_into_node","intersperse_trivia","into","is_empty","kind","len","new","node_ext","range_text","single_token","text","text_len","text_range","text_start","to_input","try_from","try_into","type_id","Align","Asterisk","Close","Colon","DollarSign","Dot","Escape","Fill","FormatSpecifier","Identifier","Integer","NumberSign","Open","QuestionMark","Sign","Zero","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","init","into","is_format_string","lex_format_specifiers","try_from","try_into","type_id","insert_ws_into","block_as_lone_tail","expr_as_name_ref","for_each_break_and_continue_expr","for_each_tail_expr","full_path_of_name_ref","is_pattern_cond","parse_tt_as_comma_sep_paths","preorder_expr","single_let","vis_eq","walk_expr","walk_pat","walk_patterns_in_expr","walk_ty","get_missing_assoc_items","resolve_target_trait","Option","Result","TryEnum","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","from_ty","happy_case","happy_pattern","happy_pattern_wildcard","init","into","sad_pattern","to_owned","try_from","try_into","type_id","use_trivial_constructor"],"q":["ide_db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_db::active_parameter","","","","","","","","","","","","","","","","","","","ide_db::assists","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_db::assists::AssistResolveStrategy","ide_db::defs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_db::defs::Definition","","","","","","","","","","","","","","","","","ide_db::defs::IdentClass","","ide_db::defs::NameClass","","","","ide_db::defs::NameRefClass","","","ide_db::famous_defs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_db::generated","ide_db::generated::lints","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_db::helpers","","","","","","ide_db::imports","","","ide_db::imports::import_assets","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_db::imports::import_assets::ImportCandidate","","","ide_db::imports::import_assets::NameToImport","","","ide_db::imports::insert_use","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_db::imports::insert_use::ImportScope","","","ide_db::imports::merge_imports","","","","","","","","","","","","","","","","","","","","","","","","","ide_db::items_locator","","","","","","","","","","","","","","","","","","","","","ide_db::label","","","","","","","","","","","","","","","","","","","","","ide_db::line_index","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_db::path_transform","","","","","","","","","","","","","","","ide_db::rename","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_db::rust_doc","ide_db::search","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_db::source_change","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_db::source_change::FileSystemEdit","","","","","","","ide_db::symbol_index","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_db::syntax_helpers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_db::syntax_helpers::format_string","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ide_db::syntax_helpers::insert_whitespace_into_node","ide_db::syntax_helpers::node_ext","","","","","","","","","","","","","","ide_db::traits","","ide_db::ty_filter","","","","","","","","","","","","","","","","","","","","","","ide_db::use_trivial_contructor"],"d":["","","","","","","","","Type alias for a hashmap using the <code>fx</code> hash algorithm.","Type alias for a hashmap using the <code>fx</code> hash algorithm.","A speedy hash algorithm for use within rustc. The hashmap …","","","","","","","","Representative struct for the query group.","","","","","","","","","","","","","","","","","","","","","This module provides functionality for querying callable …","","","This module defines the <code>Assist</code> data structure. The actual …","","","","","<code>base_db</code> is normally also needed in places where <code>ide_db</code> is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>NameDefinition</code> keeps information about the element we want …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>FamousDefs</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Random assortment of ide helpers for high-level ide …","","","","","","","","Get access to extra methods pertaining to this query. You …","Like <code>in_db</code>, but gives access to methods for setting the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","This module has the functionality to search the project …","See <code>Label</code>","","","","<code>LineIndex</code> maps flat <code>TextSize</code> offsets into <code>(Line, Column)</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>PathTransform</code>.","","","","","","Rename infrastructure for rust-analyzer. It is used …","","","","Rustdoc specific doc comment handling","Implementation of find-usages functionality.","","","","","","","","","","","","","","","","This modules defines type to represent changes to the …","","","","","","This module handles fuzzy-searching of functions, structs …","","","","","","","","","","","","Functionality for obtaining data related to traits from …","","","","","","","","","","","","","","","","This module contains structures for filtering the expected …","","","","","","","","","","","","","","Functionality for generating trivial contructors","","","","","","","","","","","Returns information about the call argument this token is …","","","","Returns a <code>hir::Callable</code> this token is a part of and its …","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","All assists should be resolved.","","Unique identifier of the assist, should not be shown to …","","A way to control how many asssist to resolve during the …","","","","No assists should be resolved.","","","","","","Only a certain assist should be resolved.","Hold the <code>AssistId</code> data of a certain assist to resolve. The …","The id of the assist.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Short description of the assist, as shown in the UI.","","","","Computing source change sometimes is much more costly then …","Target ranges are used to sort assists: the smaller the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>None</code> in <code>if let None = Some(82) {}</code>. Syntactically, it is a …","","","","","","","","","","","","","On a first blush, a single <code>ast::Name</code> defines a single …","","This is similar to <code>NameClass</code>, but works for <code>ast::NameRef</code> …","","<code>field</code> in <code>if let Foo { field } = foo</code>. Here, <code>ast::Name</code> both …","","","","","","","","","","","","","","","","","","","","","","","","","","<code>Definition</code> defined by this name.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Textual range of the identifier which will change when …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helps with finding well-know things inside the standard …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","Generated by <code>sourcegen_lints</code>, do not edit by hand.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Checks if the given lint is equal or is contained by the …","Converts the mod path struct into its ast representation.","Picks the token with the highest rank returned by the …","","Iterates all <code>ModuleDef</code>s and <code>Impl</code> blocks of the given file.","Look up accessible paths for items.","Handle syntactic aspects of inserting a new <code>use</code> item.","Handle syntactic aspects of merging UseTrees.","Requires items with names that exactly match the given …","A qualifier that has a first segment and it’s unresolved.","Requires items with names that case-insensitively contain …","A struct to find imports in the project, given a certain …","A candidate for import, derived during various IDE …","An import (not necessary the only one) that corresponds a …","A name that will be used during item lookups.","A path, qualified (<code>std::collections::HashMap</code>) or not (…","Path import for a given name, qualified or not.","A trait associated function (with no self parameter) or an …","A trait import needed for a given associated item access. …","A trait method with self parameter. For ‘…","The associated item name that the trait to import should …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","The path to use in the <code>use</code> statement for a given candidate …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","An item that will be imported with the import path given.","The name the item (struct, trait, enum, etc.) should have.","","","The path import candidate, resolved.","A path of the original item.","","Optional qualifier before name.","A type of the item that has the associated item accessed …","","This may return non-absolute paths if a part of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Causes paths to start with <code>crate</code> where applicable, …","Causes paths to always start with either <code>self</code>, <code>super</code>, <code>crate</code>…","Merge imports from the same crate into a single use …","","How imports should be grouped into use statements.","","","Flatten imports so that each has its own use statement.","Merge imports from the same module into a single use …","","Causes paths to ignore imports in the local module.","","Do not change the granularity of any imports and preserve …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Determines the containing syntax node in which to insert a …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Insert an import path into the given file/node. A <code>merge</code> …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Merge imports from the same crate into a single use …","What type of merges are allowed.","Merge imports from the same module into a single use …","","","","","Traverses both paths until they differ, returning the …","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","Merge <code>rhs</code> into <code>lhs</code> keeping both intact. Returned AST is …","Merge <code>rhs</code> into <code>lhs</code> keeping both intact. Returned AST is …","","Three possible ways to search for the name in associated …","Search for the name in the associated items only.","A value to use, when uncertain which limit to pick.","Search for the name in other items only.","Search for the name in both associated and other items.","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Searches for importable items with the given name in the …","","","","","A type to specify UI label, like an entry in the list of …","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Zero-based","Zero-based utf8 offset","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Zero-based","Zero-based","","","","","","","","","","","","","","","","","","","","","","<code>PathTransform</code> substitutes path in SyntaxNodes in bulk.","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Generally, <code>search_scope</code> returns files that might contain …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build an empty search scope.","","","Build a empty search scope spanning the text range of the …","","Build a empty search scope spanning the given files.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Limit the search to a given <code>SearchScope</code>.","Enable searching for <code>Self</code> when the definition is a type or …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Limit the search to a given <code>SearchScope</code>.","Build a empty search scope spanning the given file.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new SourceChange with the given label from the …","","","","","Inserts a <code>TextEdit</code> for the given <code>FileId</code>. This properly …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Representative struct for the query group.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Get access to extra methods pertaining to this query. You …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","Like <code>in_db</code>, but gives access to methods for setting the …","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","The set of roots for crates.io libraries. Files in …","","The symbol index for a given source root within …","","","","The set of “local” (that is, from the current …","","","","The symbol index for a given module. These modules should …","","","","","","","","","Set the value of the <code>library_roots</code> input.","Set the value of the <code>library_roots</code> input and promise that …","Set the value of the <code>local_roots</code> input.","Set the value of the <code>local_roots</code> input and promise that …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tools to work with format string literals for the …","Returns the argument unchanged.","","Utilities for formatting macro expanded nodes until we get …","NB: only valid to call with Output from …","Calls <code>U::from(self)</code>.","","","","","Various helper functions to work with SyntaxNodes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","Renders a <code>SyntaxNode</code> with whitespace inserted between …","","","","Calls <code>cb</code> on each expression inside <code>expr</code> that is at “tail …","","","Parses the input token tree as comma separated plain paths.","Preorder walk all the expression’s child expressions …","Returns the <code>let</code> only if there is exactly one (that is, …","","Preorder walk all the expression’s child expressions.","Preorder walk all the pattern’s sub patterns.","Preorder walk all the expression’s child patterns.","Preorder walk all the type’s sub types.","Given the <code>impl</code> block, returns the list of associated items …","Given the <code>impl</code> block, attempts to find the trait this <code>impl</code> …","","","Enum types that implement <code>std::ops::Try</code> trait.","","","","","","","","Returns the argument unchanged.","Returns <code>Some(..)</code> if the provided type is an enum that …","","","","","Calls <code>U::from(self)</code>.","","","","","","given a type return the trivial contructor (if one exists)"],"i":[1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,0,0,0,2,2,0,2,2,2,2,0,2,2,2,3,2,4,5,6,1,7,3,2,4,5,6,1,7,2,1,7,1,7,1,2,2,2,2,2,2,2,2,2,2,3,2,6,0,3,2,4,5,6,1,7,3,2,4,5,6,1,7,3,2,2,4,5,6,1,7,2,2,1,7,1,7,6,2,2,0,2,2,2,2,2,2,2,2,3,2,6,1,7,2,5,2,2,2,5,3,2,4,5,6,1,1,1,7,2,2,0,2,2,2,2,2,2,2,2,2,2,2,2,1,0,2,2,2,2,2,2,0,6,6,2,2,2,2,2,3,2,4,5,6,1,7,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,2,4,5,6,1,7,0,0,2,2,2,0,8,2,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,2,7,2,5,7,2,2,2,2,2,2,1,0,2,2,2,6,2,0,2,2,2,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,0,0,1,7,2,2,2,2,2,2,2,2,0,3,2,4,5,6,1,7,3,2,4,5,6,1,7,2,0,2,3,2,4,5,6,1,7,2,2,2,2,2,0,2,2,2,3,3,3,3,3,3,0,9,9,9,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,10,11,10,12,0,0,0,0,13,0,13,12,13,13,13,13,13,12,0,14,14,15,13,10,12,14,11,15,13,10,12,14,11,15,13,10,11,15,13,10,11,13,15,13,10,12,14,11,15,13,10,12,14,11,15,13,10,12,14,11,13,10,13,10,15,13,10,12,14,11,15,13,10,12,14,11,13,15,15,15,13,10,12,14,11,15,13,10,12,14,11,15,13,10,12,15,15,15,13,10,11,15,15,13,10,12,14,11,15,13,10,12,14,11,15,13,10,12,14,11,16,17,17,17,17,18,0,18,19,17,19,17,17,0,17,17,17,17,0,20,0,20,18,17,17,17,17,17,17,17,17,20,18,19,17,20,18,19,17,18,19,20,18,19,20,20,17,17,18,20,17,20,18,19,17,20,18,19,17,20,18,19,17,17,17,20,18,19,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,20,18,19,17,17,20,18,19,17,20,18,19,17,17,17,17,17,17,17,17,20,18,19,17,20,18,19,17,20,18,19,17,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,42,43,44,44,45,45,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,0,0,0,0,0,0,0,0,0,0,46,47,46,47,46,47,47,46,47,46,47,47,46,47,46,47,46,47,46,47,47,46,47,46,47,46,47,46,47,0,0,0,0,0,0,0,0,0,48,0,48,0,0,0,0,49,0,49,0,49,50,49,50,51,52,48,53,54,49,50,51,52,48,53,54,48,54,48,54,49,50,51,52,48,53,54,49,50,51,52,48,53,54,49,50,51,52,48,53,54,54,54,48,49,50,51,52,48,53,54,53,53,53,53,53,49,50,51,52,48,53,54,54,53,54,49,50,51,52,48,53,54,49,50,51,52,48,53,54,0,54,51,54,54,54,54,53,51,50,53,53,48,48,54,49,50,51,52,48,53,54,49,50,51,52,48,53,54,49,50,51,52,48,53,54,55,56,57,58,59,58,60,61,61,62,60,0,0,0,62,62,60,61,0,62,60,62,63,60,61,62,63,60,61,62,63,60,61,60,62,63,60,61,62,63,60,61,62,63,60,61,62,63,60,61,63,62,63,61,62,63,61,60,62,63,60,61,62,63,60,61,63,63,62,63,60,61,0,62,63,60,61,63,63,0,63,62,63,60,61,62,63,60,61,62,63,60,61,62,63,60,61,64,65,66,67,0,67,67,67,67,67,0,67,67,67,67,0,0,67,67,67,67,67,67,67,67,0,0,67,0,68,0,68,68,68,68,68,68,68,68,68,68,68,68,68,0,68,68,68,68,0,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,0,0,0,70,71,72,70,71,72,70,71,72,70,71,72,71,72,70,71,72,70,71,72,70,71,72,70,71,72,70,71,72,70,71,72,70,71,72,71,72,70,71,72,70,71,72,71,72,70,70,70,71,72,70,70,70,71,72,70,70,70,71,72,70,71,72,70,71,72,0,73,73,73,73,73,73,73,73,73,73,73,73,73,73,74,75,0,75,0,0,75,0,74,75,74,75,75,75,75,74,75,74,75,74,75,75,74,74,75,0,74,75,74,75,74,75,0,75,74,74,75,74,75,74,75,0,0,0,76,0,0,0,76,77,77,78,79,76,80,77,78,79,76,80,77,79,78,79,76,80,77,78,79,76,80,77,78,78,79,76,80,77,78,79,76,80,77,78,79,76,80,77,80,76,76,80,78,80,78,79,76,80,78,79,76,80,77,76,77,77,78,79,76,80,77,80,78,79,76,80,77,78,80,78,78,78,79,79,78,77,80,78,79,76,80,77,78,79,76,80,77,78,79,76,80,77,78,79,76,80,77,81,0,81,81,0,82,81,82,81,82,81,82,81,82,82,81,82,81,82,81,82,82,82,82,81,82,82,82,81,82,82,82,82,81,82,82,81,82,82,82,82,82,81,82,81,82,81,82,81,83,84,85,83,84,85,85,0,0,0,0,0,0,0,0,0,86,87,88,89,90,91,92,93,86,87,88,89,90,91,92,93,86,0,89,90,91,92,93,86,87,88,89,90,91,92,93,86,87,88,89,90,91,92,93,86,87,88,89,90,91,92,93,93,93,86,89,90,86,89,90,91,92,93,88,88,86,87,88,89,90,91,92,93,93,89,90,91,92,89,90,91,92,86,87,88,89,90,91,92,93,86,87,88,89,90,91,92,93,93,94,88,94,88,86,86,94,88,88,93,94,88,86,88,86,89,90,91,92,94,94,94,94,86,87,88,89,90,91,92,93,86,87,88,89,90,91,92,93,86,87,88,89,90,91,92,93,0,0,95,95,95,95,95,95,95,95,0,95,95,0,95,95,95,95,95,95,0,95,95,95,95,95,95,95,95,95,95,96,96,96,96,96,96,96,96,0,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,0,0,96,96,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,97,0,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["adtid",3,[["interner",3]]]],["variances",3,[["interner",3]]]],[[["",0],["change",3]]],null,[[["",0],["assoctypeid",3,[["interner",3]]]],["arc",3,[["associatedtydatum",3,[["interner",3]]]]]],[[["",0],["crateid",3],["associatedtyvalueid",3,[["interner",3]]]],["arc",3,[["associatedtyvalue",3,[["interner",3]]]]]],[[["",0],["hirfileid",3]],["arc",3,[["astidmap",3]]]],[[["",0],["attrdefid",4]],["attrswithowner",3]],null,[[["",0],["blockid",3]],["option",4,[["arc",3,[["defmap",3]]]]]],[[["",0],["defwithbodyid",4]],["arc",3,[["body",3]]]],[[["",0],["defwithbodyid",4]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["callabledefid",4]],["binders",3,[["callablesig",3]]]],[[["",0]],["symbolkind",4]],[[["",0]],["snippetcap",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["symbolkind",4]],["ordering",4]],[[["",0],["constid",3]],["arc",3,[["constdata",3]]]],[[["",0],["constid",3]],["result",4,[["computedexpr",4],["constevalerror",4]]]],[[["",0],["constparamid",3]],["ty",3,[["interner",3]]]],[[["",0],["constid",3]],["visibility",4]],[[["",0],["crateid",3]],["arc",3,[["defmap",3]]]],[[["",0],["crateid",3]],["arc",3,[["defmap",3]]]],[[["",0]],["arc",3,[["crategraph",3]]]],[[["",0],["crateid",3]],["arc",3,[["langitems",3]]]],[[["",0],["crateid",3]],["cratelimits",3]],[[["",0],["crateid",3]],["bool",0]],[[],["fxhasher",3]],[[],["rootdatabase",3]],[[],["lineindexquery",3]],null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["",0]],["bool",0]],[[["",0],["enumid",3]],["arc",3,[["enumdata",3]]]],[[["",0],["symbolkind",4]],["bool",0]],[[["",0],["snippetcap",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[]],[[["",0],["macrocallid",3]],["valueresult",3,[["subtree",3],["expanderror",4]]]],[[["",0],["defwithbodyid",4]],["arc",3,[["exprscopes",3]]]],null,[[["",0],["variantid",4]],["arc",3,[["arenamap",3,[["idx",3,[["fielddata",3]]],["binders",3,[["ty",3,[["interner",3]]]]]]]]]],[[["",0],["variantid",4]],["arc",3,[["arenamap",3,[["idx",3,[["fielddata",3]]],["visibility",4]]]]]],[[["",0],["variantid",4]],["arc",3,[["arenamap",3,[["idx",3,[["fielddata",3]]],["attrs",3]]]]]],[[["",0],["variantid",4]],["arc",3,[["arenamap",3,[["idx",3,[["fielddata",3]]],["either",4,[["astptr",3,[["tuplefield",3]]],["astptr",3,[["recordfield",3]]]]]]]]]],[[["",0],["hirfileid",3]],["arc",3,[["itemtree",3]]]],[[["",0],["fileid",3]],["sourcerootid",3]],[[["",0],["fileid",3]],["arc",3,[["string",3]]]],[[["",0],["fileid",3]],["arc",3,[["string",3]]]],[[["",0]],["u64",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["databasekeyindex",3],["formatter",3]],["result",6]],[[["",0],["lineindexdatabase",8],["databasekeyindex",3],["formatter",3]],["result",6]],[[["",0],["crateid",3],["fndefid",3,[["interner",3]]]],["arc",3,[["fndefdatum",3,[["interner",3]]]]]],[[["",0],["fndefid",3,[["interner",3]]]],["variances",3,[["interner",3]]]],[[["",0],["fnmut",8]]],[[["",0],["runtime",3],["fnmut",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["filesymbolkind",4]]],[[["macrokind",4]]],[[]],[[["",0],["functionid",3]],["arc",3,[["functiondata",3]]]],[[["",0],["functionid",3]],["visibility",4]],null,[[["",0],["genericdefid",4]],["arc",3]],[[["",0],["genericdefid",4]],["interned",3,[["genericparams",3]]]],[[["",0],["genericdefid",4]],["arc",3]],[[["",0],["genericdefid",4],["typeorconstparamid",3],["option",4,[["name",3]]]],["arc",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0],["",0]]],null,[[["",0],["hirfileid",3]],["arc",3,[["hygieneframe",3]]]],[[["",0],["implid",3]],["arc",3,[["impldata",3]]]],[[["",0],["crateid",3],["implid",3,[["interner",3]]]],["arc",3,[["impldatum",3,[["interner",3]]]]]],[[["",0],["implid",3]],["binders",3,[["ty",3,[["interner",3]]]]]],[[["",0],["implid",3]],["option",4,[["binders",3,[["traitref",3,[["interner",3]]]]]]]],[[["",0],["crateid",3]],["arc",3,[["importmap",3]]]],null,[[["lineindexdatabase",8]],["querytable",3]],[[["lineindexdatabase",8]],["querytablemut",3]],[[["",0],["defwithbodyid",4]],["arc",3,[["inferenceresult",3]]]],[[["",0],["defwithbodyid",4]],["arc",3,[["inferenceresult",3]]]],[[["",0],["crateid",3],["tyfingerprint",4]],["arrayvec",3,[["crateid",3]]]],[[["",0],["blockid",3]],["option",4,[["arc",3,[["inherentimpls",3]]]]]],[[["",0],["crateid",3]],["arc",3,[["inherentimpls",3]]]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[["",0],["blockloc",3]],["blockid",3]],[[["",0],["callabledefid",4]],["internedcallabledefid",3]],[[["",0]],["internedclosureid",3]],[[["",0],["associtemloc",3,[["const",3]]]],["constid",3]],[[["",0],["itemloc",3,[["enum",3]]]],["enumid",3]],[[["",0],["itemloc",3,[["externblock",3]]]],["externblockid",3]],[[["",0],["associtemloc",3,[["function",3]]]],["functionid",3]],[[["",0],["itemloc",3,[["impl",3]]]],["implid",3]],[[["",0],["impltraitid",4]],["internedopaquetyid",3]],[[["",0],["lifetimeparamid",3]],["internedlifetimeparamid",3]],[[["",0],["macro2loc",3]],["macro2id",3]],[[["",0],["macrocallloc",3]],["macrocallid",3]],[[["",0],["macrorulesloc",3]],["macrorulesid",3]],[[["",0],["procmacroloc",3]],["procmacroid",3]],[[["",0],["associtemloc",3,[["static",3]]]],["staticid",3]],[[["",0],["itemloc",3,[["struct",3]]]],["structid",3]],[[["",0],["itemloc",3,[["trait",3]]]],["traitid",3]],[[["",0],["associtemloc",3,[["typealias",3]]]],["typealiasid",3]],[[["",0],["typeorconstparamid",3]],["internedtypeorconstparamid",3]],[[["",0],["itemloc",3,[["union",3]]]],["unionid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["",0],["crateid",3],["smolstr",3]],["option",4,[["langitemtarget",4]]]],[[["",0]],["arc",3,[["hashset",3,[["sourcerootid",3],["buildhasherdefault",3,[["fxhasher",3]]]]]]]],[[["",0],["sourcerootid",3]],["arc",3,[["symbolindex",3]]]],null,[[["",0],["fileid",3]],["arc",3,[["lineindex",3]]]],[[["",0],["fileid",3]],["arc",3,[["lineindex",3]]]],null,[[["",0]],["arc",3,[["hashset",3,[["sourcerootid",3],["buildhasherdefault",3,[["fxhasher",3]]]]]]]],[[["",0],["blockid",3]],["blockloc",3]],[[["",0],["internedcallabledefid",3]],["callabledefid",4]],[[["",0],["internedclosureid",3]]],[[["",0],["constid",3]],["associtemloc",3,[["const",3]]]],[[["",0],["enumid",3]],["itemloc",3,[["enum",3]]]],[[["",0],["externblockid",3]],["itemloc",3,[["externblock",3]]]],[[["",0],["functionid",3]],["associtemloc",3,[["function",3]]]],[[["",0],["implid",3]],["itemloc",3,[["impl",3]]]],[[["",0],["internedopaquetyid",3]],["impltraitid",4]],[[["",0],["internedlifetimeparamid",3]],["lifetimeparamid",3]],[[["",0],["macro2id",3]],["macro2loc",3]],[[["",0],["macrocallid",3]],["macrocallloc",3]],[[["",0],["macrorulesid",3]],["macrorulesloc",3]],[[["",0],["procmacroid",3]],["procmacroloc",3]],[[["",0],["staticid",3]],["associtemloc",3,[["static",3]]]],[[["",0],["structid",3]],["itemloc",3,[["struct",3]]]],[[["",0],["traitid",3]],["itemloc",3,[["trait",3]]]],[[["",0],["typealiasid",3]],["associtemloc",3,[["typealias",3]]]],[[["",0],["internedtypeorconstparamid",3]],["typeorconstparamid",3]],[[["",0],["unionid",3]],["itemloc",3,[["union",3]]]],[[["",0],["macro2id",3]],["arc",3,[["macro2data",3]]]],[[["",0],["macrocallid",3]],["option",4,[["arc",3]]]],[[["",0],["macrocallid",3]],["option",4,[["greennode",3]]]],[[["",0],["macrodefid",3]],["result",4,[["arc",3,[["tokenexpander",4]]],["parseerror",4]]]],[[["",0],["macrocallid",3]],["valueresult",3,[["option",4,[["arc",3,[["subtree",3]]]]],["expanderror",4]]]],[[["",0],["macrocallid",3]],["option",4,[["expanderror",4]]]],[[["",0],["macrorulesid",3]],["arc",3,[["macrorulesdata",3]]]],[[["",0],["databasekeyindex",3],["revision",3]],["bool",0]],[[["",0],["lineindexdatabase",8],["databasekeyindex",3],["revision",3]],["bool",0]],[[["",0],["module",3]],["arc",3,[["symbolindex",3]]]],[[["",0],["snippetcap",3]],["bool",0]],[[["option",4,[["usize",0]]]],["rootdatabase",3]],[[["u16",0]]],[[["bool",0]],["option",4,[["snippetcap",3]]]],[[["",0]],["database",8]],[[["",0]],["runtime",3]],[[["",0]],["runtime",3]],[[["",0],["fileid",3]],["parse",3,[["sourcefile",3]]]],[[["",0],["macrofile",3]],["valueresult",3,[["option",4],["expanderror",4]]]],[[["",0],["hirfileid",3]],["option",4,[["syntaxnode",3,[["rustlanguage",4]]]]]],[[["",0],["symbolkind",4]],["option",4,[["ordering",4]]]],null,[[["",0]],["vec",3]],[[["",0],["procmacroid",3]],["arc",3,[["procmacrodata",3]]]],[[["",0],["crateid",3],["environment",3,[["interner",3]]]],["programclauses",3,[["interner",3]]]],[[],["arc",3]],[[["",0],["fileid",3]],["arc",3,[["fxhashset",6,[["crateid",3]]]]]],null,[[["",0]]],[[["",0],["anchoredpath",3]],["option",4,[["fileid",3]]]],[[["",0],["functionid",3]],["option",4,[["arc",3,[["binders",3,[["returntypeimpltraits",3]]]]]]]],null,null,[[["",0],["arc",3,[["crategraph",3]]]]],[[["",0],["arc",3,[["crategraph",3]]],["durability",3]]],[[["",0],["bool",0]]],[[["",0],["bool",0],["durability",3]]],[[["",0],["fileid",3],["sourcerootid",3]]],[[["",0],["fileid",3],["sourcerootid",3],["durability",3]]],[[["",0],["fileid",3],["arc",3,[["string",3]]]]],[[["",0],["fileid",3],["arc",3,[["string",3]]],["durability",3]]],[[["",0],["arc",3,[["hashset",3,[["sourcerootid",3],["buildhasherdefault",3,[["fxhasher",3]]]]]]]]],[[["",0],["arc",3,[["hashset",3,[["sourcerootid",3],["buildhasherdefault",3,[["fxhasher",3]]]]]]],["durability",3]]],[[["",0],["arc",3,[["hashset",3,[["sourcerootid",3],["buildhasherdefault",3,[["fxhasher",3]]]]]]]]],[[["",0],["arc",3,[["hashset",3,[["sourcerootid",3],["buildhasherdefault",3,[["fxhasher",3]]]]]]],["durability",3]]],[[["",0],["sourcerootid",3],["arc",3,[["sourceroot",3]]]]],[[["",0],["sourcerootid",3],["arc",3,[["sourceroot",3]]],["durability",3]]],[[["",0]],["snapshot",3,[["rootdatabase",3]]]],null,[[["",0],["sourcerootid",3]],["arc",3,[["sourceroot",3]]]],[[["",0],["sourcerootid",3]],["arc",3,[["hashset",3,[["crateid",3],["buildhasherdefault",3,[["fxhasher",3]]]]]]]],[[["",0],["staticid",3]],["arc",3,[["staticdata",3]]]],[[["",0],["structid",3]],["arc",3,[["structdata",3]]]],[[["",0],["crateid",3],["adtid",3,[["interner",3]]]],["arc",3,[["adtdatum",3,[["interner",3]]]]]],null,null,[[["",0]]],[[["",0]]],[[["",0],["traitid",3]],["arc",3,[["traitdata",3]]]],[[["",0],["crateid",3],["traitid",3,[["interner",3]]]],["arc",3,[["traitdatum",3,[["interner",3]]]]]],[[["",0],["genericdefid",4]],["arc",3,[["traitenvironment",3]]]],[[["",0],["blockid",3]],["option",4,[["arc",3,[["traitimpls",3]]]]]],[[["",0],["crateid",3]],["arc",3,[["traitimpls",3]]]],[[["",0],["crateid",3]],["arc",3,[["traitimpls",3]]]],[[["",0],["crateid",3],["canonical",3,[["inenvironment",3,[["goal",3,[["interner",3]]]]]]]],["option",4,[["solution",4,[["interner",3]]]]]],[[["",0],["crateid",3],["canonical",3,[["inenvironment",3,[["goal",3,[["interner",3]]]]]]]],["option",4,[["solution",4,[["interner",3]]]]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0],["tydefid",4]],["binders",3,[["ty",3,[["interner",3]]]]]],null,[[["",0],["typealiasid",3]],["arc",3,[["typealiasdata",3]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["unionid",3]],["arc",3,[["structdata",3]]]],[[["",0]],["hirdatabase",8]],[[["",0]],["defdatabase",8]],[[["",0]],["astdatabase",8]],[[["",0],["option",4,[["usize",0]]]]],null,[[["",0],["valuetydefid",4]],["binders",3,[["ty",3,[["interner",3]]]]]],[[["",0],["enumid",3]],["arc",3,[["arenamap",3,[["idx",3,[["enumvariantdata",3]]],["attrs",3]]]]]],[[["",0],["enumid",3]],["arc",3,[["arenamap",3,[["idx",3,[["enumvariantdata",3]]],["astptr",3,[["variant",3]]]]]]]],[[["",0]]],[[["",0],["u16",0]]],[[["",0],["u32",0]]],[[["",0],["u64",0]]],[[["",0],["u8",0]]],[[["",0],["usize",0]]],null,[[["semantics",3],["syntaxtoken",6]],["option",4]],[[["",0]],["",0]],[[["",0]],["",0]],[[["semantics",3],["callableexpr",4],["syntaxtoken",6]],["option",4]],[[["semantics",3],["syntaxtoken",6]],["option",4]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["",0],["formatter",3]],["result",6]],[[]],[[["",0]],["option",4,[["name",3]]]],[[],["usize",0]],[[]],null,[[],["result",4]],[[],["result",4]],null,[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["assist",3]],[[["",0]],["assistkind",4]],[[["",0]],["assistid",3]],[[["",0]],["grouplabel",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["assistkind",4]],["bool",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["",0],["assistkind",4]],["bool",0]],[[["",0],["assistid",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",0]],["result",4]],null,null,[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["",0]],["str",0]],[[["",0],["assistid",3]],["bool",0]],[[["",0],["assistid",3]],["bool",0]],null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["hirdatabase",8]],["option",4,[["associtem",4]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["rootdatabase",3]],["option",4]],[[["semantics",3],["name",3]],["option",4,[["nameclass",4]]]],[[["semantics",3],["nameref",3]],["option",4,[["namerefclass",4]]]],[[["semantics",3],["lifetime",3]],["option",4,[["identclass",4]]]],[[["semantics",3],["lifetime",3]],["option",4,[["nameclass",4]]]],[[["semantics",3],["lifetime",3]],["option",4,[["namerefclass",4]]]],[[["semantics",3],["syntaxnode",6]],["option",4,[["identclass",4]]]],[[["semantics",3],["syntaxtoken",6]],["option",4,[["identclass",4]]]],[[["",0]],["definition",4]],[[["",0],["",0]]],[[],["option",4,[["definition",4]]]],[[],["arrayvec",3,[["definition",4]]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["",0],["definition",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["builtintype",3]],["definition",4]],[[["associtem",4]]],[[["moduledef",4]]],[[["typealias",3]],["definition",4]],[[["trait",3]],["definition",4]],[[["static",3]],["definition",4]],[[["const",3]],["definition",4]],[[["variant",3]],["definition",4]],[[["adt",4]],["definition",4]],[[["function",3]],["definition",4]],[[["module",3]],["definition",4]],[[["field",3]],["definition",4]],[[["pathresolution",4]]],[[["local",3]],["definition",4]],[[["impl",3]]],[[["macro",3]],["definition",4]],[[["label",3]],["definition",4]],[[["genericparam",4]],["definition",4]],[[]],[[]],[[]],[[]],[[["",0],["",0]]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[["",0],["rootdatabase",3]],["option",4,[["crate",3]]]],[[["",0],["rootdatabase",3]],["option",4,[["module",3]]]],[[["",0],["rootdatabase",3]],["option",4,[["name",3]]]],[[["",0],["definition",4]],["bool",0]],[[["semantics",3]],["option",4,[["filerange",3]]]],[[["",0],["semantics",3],["str",0]],["result",6,[["sourcechange",3]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["semantics",3]],["findusages",3]],[[["",0],["rootdatabase",3]],["option",4,[["visibility",4]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["option",4,[["crate",3]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]],["option",4,[["crate",3]]]],[[["",0]],["option",4,[["trait",3]]]],[[["",0]],["option",4,[["trait",3]]]],[[["",0]],["option",4,[["trait",3]]]],[[["",0]],["option",4,[["trait",3]]]],[[["",0]],["option",4,[["trait",3]]]],[[["",0]],["option",4,[["module",3]]]],[[["",0]],["option",4,[["trait",3]]]],[[["",0]],["option",4,[["trait",3]]]],[[["",0]],["option",4,[["macro",3]]]],[[["",0]],["option",4,[["trait",3]]]],[[["",0]],["option",4,[["enum",3]]]],[[["",0]],["option",4,[["trait",3]]]],[[["",0]],["option",4,[["trait",3]]]],[[["",0]],["option",4,[["trait",3]]]],[[["",0]],["option",4,[["enum",3]]]],[[["",0]],["option",4,[["enum",3]]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[]],[[],["usize",0]],[[]],[[["",0]],["option",4,[["crate",3]]]],[[["",0]],["option",4,[["crate",3]]]],[[["",0]],["option",4,[["crate",3]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0]],["lint",3]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],null,[[["usize",0]]],[[["usize",0]]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],null,null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["rootdatabase",3],["iteminns",4]],["option",4,[["name",3]]]],[[["str",0],["str",0]],["bool",0]],[[["modpath",3]],["path",3]],[[["tokenatoffset",4,[["syntaxtoken",6]]]],["option",4,[["syntaxtoken",6]]]],[[["tokenatoffset",4,[["syntaxtoken",6]]]],["option",4,[["asttoken",8]]]],[[["semantics",3],["fileid",3],["fnmut",8]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["nametoimport",4]],[[["",0]],["locatedimport",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["",0],["locatedimport",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["string",3]],["nametoimport",4]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["path",3],["semantics",3]],["option",4]],[[["module",3],["type",3],["string",3],["syntaxnode",6]],["option",4]],[[["module",3],["option",4,[["path",3]]],["string",3],["semantics",3],["syntaxnode",6]],["option",4]],[[["semantics",3],["identpat",3]],["option",4]],[[["methodcallexpr",3],["semantics",3]],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["",0]]],[[["",0]],["importcandidate",4]],null,[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["rootdatabase",3],["iteminns",4]],["option",4,[["iteminns",4]]]],null,null,[[["",0],["locatedimport",3]],["bool",0]],[[["modpath",3],["iteminns",4],["iteminns",4],["option",4,[["modpath",3]]]]],null,null,[[["",0],["bool",0]]],null,null,[[["",0],["semantics",3],["prefixkind",4]],["vec",3,[["locatedimport",3]]]],[[["",0],["semantics",3]],["vec",3,[["locatedimport",3]]]],[[["",0]],["str",0]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["syntaxnode",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["importgranularity",4]],[[["",0]],["insertuseconfig",3]],[[["",0]],["importscope",4]],[[["",0]],["prefixkind",4]],[[["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],null,[[["",0],["importgranularity",4]],["bool",0]],[[["",0],["insertuseconfig",3]],["bool",0]],[[["",0],["prefixkind",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["syntaxnode",6],["semantics",3]],["option",4]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],null,null,[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[["importscope",4],["path",3],["insertuseconfig",3]]],[[]],[[]],[[]],[[]],[[["",0],["insertuseconfig",3]],["bool",0]],null,[[["path",3]]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["mergebehavior",4]],[[["",0],["",0]]],[[["path",3],["path",3]],["option",4]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["",0],["mergebehavior",4]],["bool",0]],[[],["bool",0]],[[["option",4,[["visibility",3]]],["option",4,[["visibility",3]]]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[],["usize",0]],[[]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["use",3],["use",3],["mergebehavior",4]],["option",4,[["use",3]]]],[[["usetree",3],["usetree",3],["mergebehavior",4]],["option",4,[["usetree",3]]]],[[["",0]],["typeid",3]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["associtemsearch",4]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["",0],["formatter",3]],["result",6]],[[]],[[],["usize",0]],[[]],[[["semantics",3],["crate",3],["nametoimport",4],["associtemsearch",4],["option",4,[["usize",0]]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["label",3]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["",0],["str",0]],["bool",0]],[[["",0],["str",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[],["usize",0]],[[]],[[["string",3]],["label",3]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["lineindex",3]],[[["",0]],["linecolutf16",3]],[[["",0]],["linecol",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["",0],["lineindex",3]],["bool",0]],[[["",0],["linecolutf16",3]],["bool",0]],[[["",0],["linecol",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],null,null,[[["",0],["textsize",3]],["linecol",3]],[[["",0],["textrange",3]]],[[["",0],["lineindex",3]],["bool",0]],[[["",0],["linecolutf16",3]],["bool",0]],[[["",0],["linecol",3]],["bool",0]],[[["str",0]],["lineindex",3]],[[["",0],["linecol",3]],["option",4,[["textsize",3]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0],["linecol",3]],["linecolutf16",3]],[[["",0],["linecolutf16",3]],["linecol",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0],["syntaxnode",6]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[]],[[["semanticsscope",3],["semanticsscope",3],["function",3],["genericarglist",3]],["pathtransform",3]],[[],["usize",0]],[[]],[[["semanticsscope",3],["semanticsscope",3],["trait",3],["impl",3]],["pathtransform",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["str",0]],["result",6,[["identifierkind",4]]]],[[["",0]],["identifierkind",4]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["",0],["identifierkind",4]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],null,[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[["definition",4],["str",0]],["textedit",3]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["str",0]],["bool",0]],null,null,null,null,null,null,null,[[],["usagesearchresult",3]],[[["",0]],["bool",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0]],["usagesearchresult",3]],[[["",0]],["filereference",3]],[[["",0]],["referencecategory",4]],[[["",0]],["searchscope",3]],[[["",0]],["findusages",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["usagesearchresult",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[],["searchscope",3]],[[["",0],["referencecategory",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["filerange",3]],["searchscope",3]],[[["",0]]],[[],["searchscope",3]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["",0],["",0]]],[[["searchscope",3]],["findusages",3]],[[],["findusages",3]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[["",0],["searchscope",3]],["searchscope",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]]],[[["",0]],["usize",0]],null,null,null,[[["option",4,[["searchscope",3]]]],["findusages",3]],[[["fileid",3]],["searchscope",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["sourcechange",3]],[[["",0]],["filesystemedit",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["sourcechange",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["",0],["intoiterator",8]]],[[["",0],["intoiterator",8]]],null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["fxhashmap",6,[["fileid",3],["textedit",3]]]],["sourcechange",3]],[[["filesystemedit",4]],["sourcechange",3]],[[]],[[]],[[["fxhashmap",6,[["fileid",3],["textedit",3]]],["vec",3,[["filesystemedit",4]]]]],[[["fileid",3],["textedit",3]]],[[["",0],["fileid",3]],["option",4,[["textedit",3]]]],[[],["usize",0]],[[],["usize",0]],[[["",0],["fileid",3],["textedit",3]]],[[]],[[]],null,[[["sourcechange",3]],["sourcechange",3]],[[["",0],["filesystemedit",4]]],null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["rootdatabase",3],["crate",3],["query",3]],["vec",3,[["filesymbol",3]]]],[[],["modulesymbolsquery",3]],[[],["librarysymbolsquery",3]],[[],["localrootsquery",3]],[[],["libraryrootsquery",3]],[[],["symbolindex",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["",0],["symbolindex",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0]]],[[]],[[]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["symbolsdatabase",8],["databasekeyindex",3],["formatter",3]],["result",6]],[[["",0],["runtime",3],["fnmut",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["",0]]],[[["symbolsdatabase",8]],["querytable",3]],[[["symbolsdatabase",8]],["querytable",3]],[[["symbolsdatabase",8]],["querytable",3]],[[["symbolsdatabase",8]],["querytable",3]],[[["symbolsdatabase",8]],["querytablemut",3]],[[["symbolsdatabase",8]],["querytablemut",3]],[[["symbolsdatabase",8]],["querytablemut",3]],[[["symbolsdatabase",8]],["querytablemut",3]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["usize",0]],[[["",0]],["arc",3,[["fxhashset",6,[["sourcerootid",3]]]]]],null,[[["",0],["sourcerootid",3]],["arc",3,[["symbolindex",3]]]],null,[[["",0]]],[[["",0],["usize",0]]],[[["",0]],["arc",3,[["fxhashset",6,[["sourcerootid",3]]]]]],null,[[["",0],["symbolsdatabase",8],["databasekeyindex",3],["revision",3]],["bool",0]],[[["",0]],["usize",0]],[[["",0],["module",3]],["arc",3,[["symbolindex",3]]]],null,[[["string",3]],["query",3]],[[["u16",0]]],[[["",0]]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[],["arc",3]],[[["",0],["arc",3,[["fxhashset",6,[["sourcerootid",3]]]]]]],[[["",0],["arc",3,[["fxhashset",6,[["sourcerootid",3]]]]],["durability",3]]],[[["",0],["arc",3,[["fxhashset",6,[["sourcerootid",3]]]]]]],[[["",0],["arc",3,[["fxhashset",6,[["sourcerootid",3]]]]],["durability",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["rootdatabase",3],["query",3]],["vec",3,[["filesymbol",3]]]],null,[[["",0]],["str",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["",0],["usize",0]],["option",4,[["str",0]]]],[[["",0]]],null,[[]],[[],["usize",0]],null,[[["",0],["output",3],["fnmut",8]],["bool",0]],[[]],[[["",0]],["bool",0]],[[["",0],["usize",0]],["syntaxkind",4]],[[["",0]],["usize",0]],[[["str",0]],["lexedstr",3]],null,[[["",0],["range",3,[["usize",0]]]],["str",0]],[[["str",0]],["option",4]],[[["",0],["usize",0]],["str",0]],[[["",0],["usize",0]],["usize",0]],[[["",0],["usize",0]],["range",3,[["usize",0]]]],[[["",0],["usize",0]],["usize",0]],[[["",0]],["input",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["",0],["formatter",3]],["result",6]],[[]],[[],["usize",0]],[[]],[[["string",3]],["bool",0]],[[["string",3],["fnmut",8]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["syntaxnode",6]],["syntaxnode",6]],[[["blockexpr",3]],["option",4,[["expr",4]]]],[[["expr",4]],["option",4,[["nameref",3]]]],[[["option",4,[["label",3]]],["option",4,[["stmtlist",3]]],["fnmut",8]]],[[["expr",4],["fnmut",8]]],[[["nameref",3]],["option",4,[["path",3]]]],[[["expr",4]],["bool",0]],[[["tokentree",3]],["option",4,[["vec",3,[["path",3]]]]]],[[["expr",4],["fnmut",8]]],[[["expr",4]],["option",4,[["letexpr",3]]]],[[["visibility",3],["visibility",3]],["bool",0]],[[["expr",4],["fnmut",8]]],[[["pat",4],["fnmut",8]]],[[["expr",4],["fnmut",8]]],[[["type",4],["fnmut",8]]],[[["semantics",3],["impl",3]],["vec",3,[["associtem",4]]]],[[["semantics",3],["impl",3]],["option",4,[["trait",3]]]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["tryenum",4]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[]],[[["semantics",3],["type",3]],["option",4,[["tryenum",4]]]],[[],["str",0]],[[["pat",4]],["pat",4]],[[],["pat",4]],[[],["usize",0]],[[]],[[],["pat",4]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["rootdatabase",3],["path",3],["type",3]],["option",4,[["expr",4]]]]],"p":[[4,"SymbolKind"],[3,"RootDatabase"],[3,"FxHasher"],[3,"LineIndexDatabaseStorage"],[3,"LineIndexDatabaseGroupStorage__"],[3,"LineIndexQuery"],[3,"SnippetCap"],[8,"LineIndexDatabase"],[3,"ActiveParameter"],[3,"AssistId"],[3,"GroupLabel"],[4,"AssistResolveStrategy"],[4,"AssistKind"],[3,"SingleResolve"],[3,"Assist"],[13,"Single"],[4,"Definition"],[4,"NameClass"],[4,"NameRefClass"],[4,"IdentClass"],[13,"Macro"],[13,"Field"],[13,"Module"],[13,"Function"],[13,"Adt"],[13,"Variant"],[13,"Const"],[13,"Static"],[13,"Trait"],[13,"TypeAlias"],[13,"BuiltinType"],[13,"SelfType"],[13,"Local"],[13,"GenericParam"],[13,"Label"],[13,"BuiltinAttr"],[13,"ToolModule"],[13,"NameClass"],[13,"NameRefClass"],[13,"Definition"],[13,"ConstReference"],[13,"PatFieldShorthand"],[13,"Definition"],[13,"FieldShorthand"],[3,"FamousDefs"],[3,"LintGroup"],[3,"Lint"],[4,"NameToImport"],[4,"ImportCandidate"],[3,"TraitImportCandidate"],[3,"PathImportCandidate"],[3,"FirstSegmentUnresolved"],[3,"ImportAssets"],[3,"LocatedImport"],[13,"Path"],[13,"TraitAssocItem"],[13,"TraitMethod"],[13,"Exact"],[13,"Fuzzy"],[4,"ImportScope"],[4,"PrefixKind"],[4,"ImportGranularity"],[3,"InsertUseConfig"],[13,"File"],[13,"Module"],[13,"Block"],[4,"MergeBehavior"],[4,"AssocItemSearch"],[3,"Label"],[3,"LineIndex"],[3,"LineColUtf16"],[3,"LineCol"],[3,"PathTransform"],[3,"RenameError"],[4,"IdentifierKind"],[4,"ReferenceCategory"],[3,"FindUsages"],[3,"UsageSearchResult"],[3,"FileReference"],[3,"SearchScope"],[4,"FileSystemEdit"],[3,"SourceChange"],[13,"CreateFile"],[13,"MoveFile"],[13,"MoveDir"],[3,"Query"],[3,"SymbolsDatabaseStorage"],[3,"SymbolsDatabaseGroupStorage__"],[3,"ModuleSymbolsQuery"],[3,"LibrarySymbolsQuery"],[3,"LocalRootsQuery"],[3,"LibraryRootsQuery"],[3,"SymbolIndex"],[8,"SymbolsDatabase"],[3,"LexedStr"],[4,"FormatSpecifier"],[4,"TryEnum"]]},\
"ide_diagnostics":{"doc":"Diagnostics rendering and fixits.","t":[12,13,3,3,3,13,4,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["0","Default","Diagnostic","DiagnosticCode","DiagnosticsConfig","Error","ExprFillDefaultMode","Severity","Todo","WeakWarning","as_str","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","code","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diagnostics","disable_experimental","disabled","drop","drop","drop","drop","drop","eq","eq","equivalent","experimental","expr_fill_default","fixes","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","init","init","init","init","init","into","into","into","into","into","message","ne","proc_attr_macros_enabled","proc_macros_enabled","range","severity","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unused"],"q":["ide_diagnostics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,2,0,0,0,3,0,0,2,3,1,1,4,3,2,5,1,4,3,2,5,1,3,2,5,1,3,2,5,4,2,5,1,4,3,2,5,1,4,3,2,5,0,5,5,1,4,3,2,5,1,2,2,4,5,4,1,4,3,2,5,1,4,3,2,5,1,4,3,2,5,1,4,3,2,5,4,1,5,5,4,4,1,3,2,5,1,4,3,2,5,1,4,3,2,5,1,4,3,2,5,4],"f":[null,null,null,null,null,null,null,null,null,null,[[["",0]],["str",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["diagnosticcode",3]],[[["",0]],["severity",4]],[[["",0]],["exprfilldefaultmode",4]],[[["",0]],["diagnosticsconfig",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,[[]],[[],["diagnosticsconfig",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["rootdatabase",3],["diagnosticsconfig",3],["assistresolvestrategy",4],["fileid",3]],["vec",3,[["diagnostic",3]]]],null,null,[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["",0],["diagnosticcode",3]],["bool",0]],[[["",0],["exprfilldefaultmode",4]],["bool",0]],[[["",0],["",0]],["bool",0]],null,null,null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],null,[[["",0],["diagnosticcode",3]],["bool",0]],null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null],"p":[[3,"DiagnosticCode"],[4,"ExprFillDefaultMode"],[4,"Severity"],[3,"Diagnostic"],[3,"DiagnosticsConfig"]]},\
"ide_ssr":{"doc":"Structural Search Replace","t":[3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Match","MatchDebugInfo","MatchFinder","SsrError","SsrMatches","SsrPattern","SsrRule","add_rule","add_search_pattern","at_first_file","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","debug_where_text_equal","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","edits","eq","flattened","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_str","from_str","in_context","init","init","init","init","init","init","init","into","into","into","into","into","into","into","matched_text","matches","matches","ne","ssr_from_comment","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["ide_ssr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Information about a match that was found.","","Searches a crate for pattern matches and possibly replaces …","","","","","Adds a rule to be applied. The order in which rules are …","Adds a search pattern. For use if you intend to only call …","Constructs an instance using the start of the first file …","","","","","","","","","","","","","","","Finds all nodes in <code>file_id</code> whose text is exactly equal to …","","","","","","","","","","","","","","","","","","","","","","","Finds matches for all added rules and returns edits for …","","Returns <code>self</code> with any nested matches removed and made into …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Constructs a new instance where names will be looked up as …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns matches for all added rules.","","","Attempts to build an SSR MatchFinder from a comment at the …","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,1,1,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,4,7,2,3,4,4,5,6,7,1,2,3,4,5,6,7,5,6,1,1,2,3,4,5,6,7,1,2,3,4,5,6,7,3,1,7,4,0,4,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7],"f":[null,null,null,null,null,null,null,[[["",0],["ssrrule",3]],["result",4,[["ssrerror",3]]]],[[["",0],["ssrpattern",3]],["result",4,[["ssrerror",3]]]],[[["rootdatabase",3]],["result",4,[["matchfinder",3],["ssrerror",3]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["fileid",3],["str",0]],["vec",3,[["matchdebuginfo",3]]]],[[],["ssrmatches",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["",0]],["fxhashmap",6,[["fileid",3],["textedit",3]]]],[[["",0],["ssrerror",3]],["bool",0]],[[],["ssrmatches",3]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",0]],["result",4,[["ssrrule",3],["ssrerror",3]]]],[[["str",0]],["result",4,[["ssrpattern",3],["ssrerror",3]]]],[[["rootdatabase",3],["fileposition",3],["vec",3,[["filerange",3]]]],["result",4,[["matchfinder",3],["ssrerror",3]]]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["string",3]],[[["",0]],["ssrmatches",3]],null,[[["",0],["ssrerror",3]],["bool",0]],[[["rootdatabase",3],["filerange",3]],["option",4]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[3,"MatchFinder"],[3,"MatchDebugInfo"],[3,"Match"],[3,"SsrError"],[3,"SsrRule"],[3,"SsrPattern"],[3,"SsrMatches"]]},\
"la_arena":{"doc":"Yet another index-based arena.","t":[3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Arena","ArenaMap","Idx","IdxRange","RawIdx","alloc","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","default","default","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_iter","from_raw","get","get_mut","hash","hash","hash","hash","index","index","index","index_mut","index_mut","insert","into","into","into","into","into","into_iter","into_raw","is_empty","is_empty","iter","iter","iter_mut","len","ne","ne","ne","new","new","new_inclusive","next","next_back","partial_cmp","partial_cmp","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","values","values_mut"],"q":["la_arena","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Yet another index-based arena.","A map from arena indexes to some other type. Space …","The index of a value allocated in an arena that holds <code>T</code>s.","A range of densely allocated arena values.","The raw index of a value in an arena.","Allocates a new value on the arena, returning the …","","","","","","","","","","","Empties the arena, removing all contained values.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Creates a new index from a <code>RawIdx</code>.","Returns a reference to the value associated with the …","Returns a mutable reference to the value associated with …","","","","","","","","","","Inserts a value associated with a given arena index into …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Converts this index into the underlying <code>RawIdx</code>.","Returns whether the index range is empty.","Returns whether the arena contains no elements.","Returns an iterator over the arena indexes and values in …","Returns an iterator over the arena’s elements.","Returns an iterator over the arena’s mutable elements.","Returns the length of the arena.","","","","Creates a new index range inclusive of the start value and …","Creates a new empty arena.","Creates a new index range inclusive of the start value and …","","","","","Reallocates the arena to make it take up as little space …","","","","","","","","","","","","","","","","","","","","","","Returns an iterator over the values in the map.","Returns an iterator over mutable references to the values …"],"i":[0,0,0,0,0,1,2,3,4,5,1,2,3,4,5,1,1,2,3,4,5,1,2,3,4,5,1,4,5,4,1,2,3,4,5,1,2,3,4,5,5,1,2,3,4,5,5,1,1,2,4,4,2,4,5,1,4,1,1,4,1,4,2,3,4,5,1,3,2,3,1,4,1,1,1,4,5,1,3,1,3,3,3,4,5,1,2,3,4,5,1,5,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,4,4],"f":[null,null,null,null,null,[[["",0]],["idx",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["arenamap",3]],[[["",0]],["rawidx",3]],[[["",0]],["arena",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["arenamap",3]],["ordering",4]],[[["",0],["rawidx",3]],["ordering",4]],[[]],[[],["arena",3]],[[["",0],["idx",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["arenamap",3]],["bool",0]],[[["",0],["rawidx",3]],["bool",0]],[[["",0],["arena",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["u32",0]],["rawidx",3]],[[]],[[]],[[["rawidx",3]]],[[["",0],["idx",3]],["option",4]],[[["",0],["idx",3]],["option",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["idx",3]],["",0]],[[["",0],["idx",3]],["",0]],[[["",0],["idxrange",3]]],[[["",0],["idx",3]],["",0]],[[["",0],["idx",3]],["",0]],[[["",0],["idx",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["rawidx",3]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["usize",0]],[[["",0],["arenamap",3]],["bool",0]],[[["",0],["rawidx",3]],["bool",0]],[[["",0],["arena",3]],["bool",0]],[[["range",3,[["idx",3]]]]],[[],["arena",3]],[[["rangeinclusive",3,[["idx",3]]]]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0],["arenamap",3]],["option",4,[["ordering",4]]]],[[["",0],["rawidx",3]],["option",4,[["ordering",4]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]]],[[["",0]]]],"p":[[3,"Arena"],[3,"Idx"],[3,"IdxRange"],[3,"ArenaMap"],[3,"RawIdx"]]},\
"limit":{"doc":"limit defines a struct to enforce limits.","t":[3,11,11,11,11,11,11,11,11,11,11,11],"n":["Limit","borrow","borrow_mut","check","from","inner","into","new","new_tracking","try_from","try_into","type_id"],"q":["limit","","","","","","","","","","",""],"d":["Represents a struct used to enforce a numerical limit.","","","Checks whether the given value is below the limit. Returns …","Returns the argument unchanged.","Gets the underlying numeric limit.","Calls <code>U::from(self)</code>.","Creates a new limit.","Creates a new limit.","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["usize",0]],["result",4]],[[]],[[["",0]],["usize",0]],[[]],[[["usize",0]]],[[["usize",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]]],"p":[[3,"Limit"]]},\
"lsp_server":{"doc":"A language server scaffold, exposing a synchronous …","t":[3,13,4,4,3,13,13,13,3,13,4,13,13,3,13,3,13,3,3,3,13,13,3,3,13,3,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,12,12,12,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12],"n":["Connection","ContentModified","ErrorCode","ExtractError","Incoming","InternalError","InvalidParams","InvalidRequest","IoThreads","JsonError","Message","MethodMismatch","MethodNotFound","Notification","Notification","Outgoing","ParseError","ProtocolError","ReqQueue","Request","Request","RequestCanceled","RequestId","Response","Response","ResponseError","ServerCancelled","ServerErrorEnd","ServerErrorStart","ServerNotInitialized","UnknownErrorCode","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","code","complete","complete","connect","data","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","equivalent","error","extract","extract","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","handle_shutdown","hash","id","id","incoming","initialize","initialize_finish","initialize_start","into","into","into","into","into","into","into","into","into","into","into","into","into","into","join","listen","memory","message","method","method","ne","new","new","new_err","new_ok","outgoing","params","params","partial_cmp","read","receiver","register","register","result","sender","serialize","serialize","serialize","serialize","serialize","serialize","stdio","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","0","error","method","0","0","0"],"q":["lsp_serverlsp_server::ExtractError","","","lsp_server::Message","",""],"d":["Connection is just a pair of channels of LSP messages.","The server detected that the content of a document got …","","","","","","","","Failed to deserialize the message.","","The extracted message was of a different method than …","","","","","","","Manages the set of pending requests, both incoming and …","","","The client has canceled a request and a server has detected","","","","","The server cancelled the request. This error code should …","","","Error code indicating that a server received a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Open a connection over tcp. This call blocks until a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","If <code>req</code> is <code>Shutdown</code>, respond to it and return <code>true</code>, …","","","","","Initialize the connection. Sends the server capabilities …","Finishes the initialization process by sending an …","Starts the initialization process by waiting for an …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Listen for a connection over tcp. This call blocks until a …","Creates a pair of connected connections.","","","","","","","","","","","","","","","","","","","","","","","","","Create connection over standard in/standard out.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,0,0,0,1,1,1,0,2,0,2,1,0,3,0,1,0,0,0,3,1,0,0,3,0,1,1,1,1,1,4,5,3,6,7,8,9,1,10,11,2,12,13,14,4,5,3,6,7,8,9,1,10,11,2,12,13,14,13,3,6,7,8,9,1,10,11,3,6,7,8,9,1,10,11,6,9,13,14,5,9,12,3,6,7,8,9,10,6,6,8,7,10,3,6,6,7,8,9,1,10,11,11,2,2,2,12,13,14,4,5,3,3,3,3,6,6,6,7,8,9,1,10,11,2,12,13,14,5,6,7,8,12,5,5,5,4,5,3,6,7,8,9,1,10,11,2,12,13,14,4,5,5,9,7,10,6,7,10,8,8,12,7,10,6,3,5,13,14,8,5,3,6,7,8,9,10,5,3,6,7,8,9,1,10,11,6,11,2,4,5,3,6,7,8,9,1,10,11,2,12,13,14,4,5,3,6,7,8,9,1,10,11,2,12,13,14,4,5,3,6,7,8,9,1,10,11,2,12,13,14,3,15,16,16,17,18,19],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullrequestid",3]],["option",4,[["response",3]]]],[[["",0]],["message",4]],[[["",0]],["requestid",3]],[[["",0]],["request",3]],[[["",0]],["response",3]],[[["",0]],["responseerror",3]],[[["",0]],["errorcode",4]],[[["",0]],["notification",3]],[[["",0]],["protocolerror",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["requestid",3]],["ordering",4]],null,[[["",0],["requestid",3]],["option",4]],[[["",0],["requestid",3]],["option",4]],[[["tosocketaddrs",8]],["result",6]],null,[[],["reqqueue",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0],["requestid",3]],["bool",0]],[[["",0],["",0]],["bool",0]],null,[[["str",0]],["result",4,[["extracterror",4,[["request",3]]]]]],[[["str",0]],["result",4,[["deserializeowned",8],["extracterror",4,[["notification",3]]]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["request",3]],["message",4]],[[["response",3]],["message",4]],[[["notification",3]],["message",4]],[[]],[[]],[[["i32",0]],["requestid",3]],[[["string",3]],["requestid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["request",3]],["result",4,[["bool",0],["protocolerror",3]]]],[[["",0],["",0]]],null,null,null,[[["",0],["value",4]],["result",4,[["value",4],["protocolerror",3]]]],[[["",0],["requestid",3],["value",4]],["result",4,[["protocolerror",3]]]],[[["",0]],["result",4,[["protocolerror",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",6]],[[["tosocketaddrs",8]],["result",6]],[[]],null,null,null,[[["",0],["requestid",3]],["bool",0]],[[["requestid",3],["string",3],["serialize",8]],["request",3]],[[["string",3]],["notification",3]],[[["requestid",3],["i32",0],["string",3]],["response",3]],[[["requestid",3],["serialize",8]],["response",3]],null,null,null,[[["",0],["requestid",3]],["option",4,[["ordering",4]]]],[[],["result",6,[["option",4,[["message",4]]]]]],null,[[["",0],["requestid",3]]],[[["",0],["string",3],["serialize",8]],["request",3]],null,null,[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["result",6]],null,null,null,null,null,null],"p":[[4,"ErrorCode"],[4,"ExtractError"],[4,"Message"],[3,"IoThreads"],[3,"Connection"],[3,"RequestId"],[3,"Request"],[3,"Response"],[3,"ResponseError"],[3,"Notification"],[3,"ProtocolError"],[3,"ReqQueue"],[3,"Incoming"],[3,"Outgoing"],[13,"MethodMismatch"],[13,"JsonError"],[13,"Request"],[13,"Response"],[13,"Notification"]]},\
"mbe":{"doc":"<code>mbe</code> (short for Macro By Example) crate contains code for …","t":[12,13,13,13,13,13,3,13,3,4,4,6,13,13,13,13,13,13,13,13,13,4,13,4,13,3,13,3,13,3,3,3,4,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,5,12,11,11,11,11,11,12,5,5,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12],"n":["0","BindingError","Brace","Bracket","Call","ConversionError","DeclarativeMacro","Def","Delimiter","DelimiterKind","ExpandError","ExpandResult","Expected","Expr","InvalidRepeat","LeftoverTokens","LimitExceeded","MacroItems","MacroStmts","MetaItem","NoMatchingRule","Origin","Parenthesis","ParseError","Pattern","Punct","RepetitionEmptyTokenTree","Shift","SourceFile","SyntheticToken","SyntheticTokenId","TokenMap","TopEntryPoint","Type","UnexpectedToken","UnexpectedToken","ValueResult","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","char","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","err","expand","first_range_by_token","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","id","id","id","into","into","into","into","into","into","into","into","into","into","into","into","into","kind","kind","map","map_err","map_id_down","map_id_up","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","ok","only_err","parse","parse_exprs_with_sep","parse_macro2","parse_macro_rules","parse_to_token_tree","range","ranges_by_token","result","shift","shift","shift_all","spacing","syntax_node_to_token_tree","syntax_node_to_token_tree_with_modifications","synthetic_entries","synthetic_token_id","text","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","token_by_range","token_tree_to_syntax_node","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unshift","value","0","0","0"],"q":["mbembe::ExpandError","mbe::ParseError",""],"d":["","","","","","","This struct contains AST for a single <code>macro_rules</code> …","","","","","","","","","","","","","Edge case – macros generally don’t expand to …","","","","","","","","","","","","Maps <code>tt::TokenId</code> to the relative range of the original …","Parse the whole of the input as a given syntactic …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Split token tree with separate expr: $($e:expr)SEP*","The new, unstable <code>macro m {}</code> flavor.","The old, <code>macro_rules! m {}</code> flavor.","Convert a string to a <code>TokenTree</code>","","","","","","Shift given TokenTree token id","","Convert the syntax node to a <code>TokenTree</code> (what macro will …","Convert the syntax node to a <code>TokenTree</code> (what macro will …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,2,3,3,4,2,0,4,0,0,0,0,5,6,5,2,2,6,6,6,2,0,3,0,6,0,5,0,6,0,0,0,0,6,5,2,0,7,3,8,1,9,10,5,2,11,12,4,13,6,7,3,8,1,9,10,5,2,11,12,4,13,6,8,7,3,8,1,9,10,5,2,11,12,13,7,3,8,1,9,10,5,2,11,12,13,10,7,3,8,1,10,5,2,11,12,4,13,7,3,8,1,10,5,2,11,12,4,13,13,11,10,7,3,8,8,1,9,10,5,5,2,2,11,12,4,13,6,7,3,8,1,9,10,5,2,11,12,4,13,13,6,7,3,8,1,10,12,7,8,9,7,3,8,1,9,10,5,2,11,12,4,13,6,7,9,13,13,11,11,7,8,1,10,5,2,11,12,13,12,13,13,6,0,11,11,0,9,10,13,11,12,12,8,0,0,10,10,9,7,3,8,1,9,10,5,2,11,12,13,8,5,2,10,0,7,3,8,1,9,10,5,2,11,12,4,13,6,7,3,8,1,9,10,5,2,11,12,4,13,6,7,3,8,1,9,10,5,2,11,12,4,13,6,12,13,14,15,16],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0]],["delimiter",3]],[[["",0]],["delimiterkind",4]],[[["",0]],["punct",3]],[[["",0]],["synthetictokenid",3]],[[["",0]],["synthetictoken",3]],[[["",0]],["tokenmap",3]],[[["",0]],["parseerror",4]],[[["",0]],["expanderror",4]],[[["",0]],["declarativemacro",3]],[[["",0]],["shift",3]],[[["",0]],["valueresult",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["tokenmap",3]],[[["",0],["delimiter",3]],["bool",0]],[[["",0],["delimiterkind",4]],["bool",0]],[[["",0],["punct",3]],["bool",0]],[[["",0],["synthetictokenid",3]],["bool",0]],[[["",0],["tokenmap",3]],["bool",0]],[[["",0],["parseerror",4]],["bool",0]],[[["",0],["expanderror",4]],["bool",0]],[[["",0],["declarativemacro",3]],["bool",0]],[[["",0],["shift",3]],["bool",0]],[[["",0],["origin",4]],["bool",0]],[[["",0],["valueresult",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],null,[[["",0],["subtree",3]],["expandresult",6,[["subtree",3]]]],[[["",0],["tokenid",3],["syntaxkind",4]],["option",4,[["textrange",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["result",4]]],[[]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["valueresult",3]],[[],["valueresult",3]],[[["",0],["tokenid",3]],["tokenid",3]],[[["",0],["tokenid",3]]],[[["",0],["delimiter",3]],["bool",0]],[[["",0],["punct",3]],["bool",0]],[[["",0],["synthetictokenid",3]],["bool",0]],[[["",0],["tokenmap",3]],["bool",0]],[[["",0],["parseerror",4]],["bool",0]],[[["",0],["expanderror",4]],["bool",0]],[[["",0],["declarativemacro",3]],["bool",0]],[[["",0],["shift",3]],["bool",0]],[[["",0],["valueresult",3]],["bool",0]],[[["subtree",3]],["shift",3]],[[]],[[]],[[["",0],["input",3]],["output",3]],[[["subtree",3],["char",0]],["vec",3,[["subtree",3]]]],[[["subtree",3]],["result",4,[["declarativemacro",3],["parseerror",4]]]],[[["subtree",3]],["result",4,[["declarativemacro",3],["parseerror",4]]]],[[["str",0]],["option",4]],null,[[["",0],["tokenid",3],["syntaxkind",4]]],[[],["result",4]],[[["",0]],["shift",3]],[[["tokenid",3]],["tokenid",3]],[[["subtree",3]]],null,[[["syntaxnode",6]]],[[["syntaxnode",6],["tokenmap",3],["u32",0],["fxhashmap",6,[["syntaxelement",6],["vec",3,[["synthetictoken",3]]]]],["fxhashmap",6,[["syntaxelement",6],["vec",3,[["synthetictoken",3]]]]]]],null,[[["",0],["tokenid",3]],["option",4,[["synthetictokenid",3]]]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0],["textrange",3]],["option",4,[["tokenid",3]]]],[[["subtree",3],["topentrypoint",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["tokenid",3]],["option",4,[["tokenid",3]]]],null,null,null,null],"p":[[3,"SyntheticTokenId"],[4,"ExpandError"],[4,"DelimiterKind"],[4,"Origin"],[4,"ParseError"],[4,"TopEntryPoint"],[3,"Delimiter"],[3,"Punct"],[3,"SyntheticToken"],[3,"TokenMap"],[3,"DeclarativeMacro"],[3,"Shift"],[3,"ValueResult"],[13,"BindingError"],[13,"UnexpectedToken"],[13,"Expected"]]},\
"parser":{"doc":"The Rust parser.","tn":["ABI","AMP","AMP2","AMPEQ","ARG_LIST","ARRAY_EXPR","ARRAY_TYPE","ASSOC_ITEM_LIST","ASSOC_TYPE_ARG","ASYNC_KW","AS_KW","AT","ATTR","AUTO_KW","AWAIT_EXPR","AWAIT_KW","BANG","BIN_EXPR","BLOCK_EXPR","BOX_EXPR","BOX_KW","BOX_PAT","BREAK_EXPR","BREAK_KW","BYTE","BYTE_STRING","Block","CALL_EXPR","CARET","CARETEQ","CAST_EXPR","CHAR","CLOSURE_EXPR","COLON","COLON2","COMMA","COMMENT","CONST","CONST_ARG","CONST_BLOCK_PAT","CONST_KW","CONST_PARAM","CONTINUE_EXPR","CONTINUE_KW","CRATE_KW","DEFAULT_KW","DOLLAR","DOT","DOT2","DOT2EQ","DOT3","DYN_KW","DYN_TRAIT_TYPE","ELSE_KW","ENUM","ENUM_KW","EQ","EQ2","ERROR","EXISTENTIAL_KW","EXPR_STMT","EXTERN_BLOCK","EXTERN_CRATE","EXTERN_ITEM_LIST","EXTERN_KW","Enter","Enter","Error","Error","Exit","Exit","Expr","Expr","FALSE_KW","FAT_ARROW","FIELD_EXPR","FLOAT_NUMBER","FN","FN_KW","FN_PTR_TYPE","FOR_EXPR","FOR_KW","FOR_TYPE","GENERIC_ARG_LIST","GENERIC_PARAM","GENERIC_PARAM_LIST","GTEQ","IDENT","IDENT_PAT","IF_EXPR","IF_KW","IMPL","IMPL_KW","IMPL_TRAIT_TYPE","INDEX_EXPR","INFER_TYPE","INT_NUMBER","IN_KW","ITEM_LIST","Input","Item","LABEL","LET_ELSE","LET_EXPR","LET_KW","LET_STMT","LIFETIME","LIFETIME_ARG","LIFETIME_IDENT","LIFETIME_PARAM","LITERAL","LITERAL_PAT","LOOP_EXPR","LOOP_KW","LTEQ","L_ANGLE","L_BRACK","L_CURLY","L_PAREN","LexedStr","MACRO_ARM","MACRO_CALL","MACRO_DEF","MACRO_EXPR","MACRO_ITEMS","MACRO_KW","MACRO_PAT","MACRO_RULES","MACRO_RULES_KW","MACRO_STMTS","MACRO_TYPE","MATCH_ARM","MATCH_ARM_LIST","MATCH_EXPR","MATCH_GUARD","MATCH_KW","META","METHOD_CALL_EXPR","MINUS","MINUSEQ","MODULE","MOD_KW","MOVE_KW","MUT_KW","MacroItems","MacroStmts","MetaItem","MetaItem","NAME","NAME_REF","NEQ","NEVER_TYPE","OR_PAT","Output","PARAM","PARAM_LIST","PAREN_EXPR","PAREN_PAT","PAREN_TYPE","PATH","PATH_EXPR","PATH_PAT","PATH_SEGMENT","PATH_TYPE","PERCENT","PERCENTEQ","PIPE","PIPE2","PIPEEQ","PLUS","PLUSEQ","POUND","PREFIX_EXPR","PTR_TYPE","PUB_KW","Pat","Path","Pattern","PrefixEntryPoint","QUESTION","RANGE_EXPR","RANGE_PAT","RAW_KW","RECORD_EXPR","RECORD_EXPR_FIELD","RECORD_EXPR_FIELD_LIST","RECORD_FIELD","RECORD_FIELD_LIST","RECORD_PAT","RECORD_PAT_FIELD","RECORD_PAT_FIELD_LIST","REF_EXPR","REF_KW","REF_PAT","REF_TYPE","RENAME","REST_PAT","RETURN_EXPR","RETURN_KW","RET_TYPE","R_ANGLE","R_BRACK","R_CURLY","R_PAREN","Reparser","SELF_KW","SELF_PARAM","SELF_TYPE_KW","SEMICOLON","SHEBANG","SHL","SHLEQ","SHR","SHREQ","SLASH","SLASHEQ","SLICE_PAT","SLICE_TYPE","SOURCE_FILE","STAR","STAREQ","STATIC","STATIC_KW","STMT_LIST","STRING","STRUCT","STRUCT_KW","SUPER_KW","SourceFile","Step","Stmt","StrStep","SyntaxKind","T","THIN_ARROW","TILDE","TOKEN_TREE","TRAIT","TRAIT_KW","TRUE_KW","TRY_EXPR","TRY_KW","TUPLE_EXPR","TUPLE_FIELD","TUPLE_FIELD_LIST","TUPLE_PAT","TUPLE_STRUCT_PAT","TUPLE_TYPE","TYPE_ALIAS","TYPE_ARG","TYPE_BOUND","TYPE_BOUND_LIST","TYPE_KW","TYPE_PARAM","Token","Token","TopEntryPoint","Ty","Type","UNDERSCORE","UNDERSCORE_EXPR","UNION","UNION_KW","UNSAFE_KW","USE","USE_KW","USE_TREE","USE_TREE_LIST","VARIANT","VARIANT_LIST","VISIBILITY","Vis","WHERE_CLAUSE","WHERE_KW","WHERE_PRED","WHILE_EXPR","WHILE_KW","WHITESPACE","WILDCARD_PAT","YIELD_EXPR","YIELD_KW","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","default","default","eq","error","errors","fmt","fmt","fmt","fmt","fmt","for_node","from","from","from","from","from","from","from","from","from","from","from_char","from_contextual_keyword","from_keyword","hash","intersperse_trivia","into","into","into","into","into","into","into","into","into","is_empty","is_keyword","is_literal","is_punct","is_trivia","iter","kind","len","new","parse","parse","parse","partial_cmp","push","push_ident","range_text","single_token","text","text_len","text_range","text_start","to_input","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","was_joint","kind","kind","msg","n_input_tokens","kind","kind","msg","pos","text"],"q":["parserparser::Step","","","","parser::StrStep","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Input for the parser – a sequence of tokens.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Edge case – macros generally don’t expand to …","","","","","","","Output of the parser – a DFS traversal of a concrete …","","","","","","","","","","","","","","","","","","","","","","","","","Parse a prefix of the input as a given syntactic construct.","","","","","","","","","","","","","","","","","","","","","","","","","","A parsing function for a specific braced-block.","","","","","","","","","","","","","","","","","","","","","","","","","","","","The kind of syntax node, e.g. <code>IDENT</code>, <code>USE_KW</code>, or <code>STRUCT</code>.","","","","","","","","","","","","","","","","","","","","","","","","Parse the whole of the input as a given syntactic …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If the node is a braced block, return the corresponding …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","NB: only valid to call with Output from …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Re-parse given tokens using this <code>Reparser</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets jointness for the last token we’ve pushed.","","","","","","","","",""],"i":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,4,3,4,3,4,5,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5,2,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,5,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,0,2,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,4,0,2,5,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,6,6,7,1,8,9,3,4,5,2,6,7,1,8,9,3,4,5,2,1,1,1,8,9,1,6,6,1,3,4,5,2,7,6,7,1,1,8,9,3,4,5,2,1,1,1,1,6,6,7,1,8,9,3,4,5,2,6,1,1,1,1,9,6,6,6,7,5,2,1,8,8,6,6,6,6,6,6,6,1,6,7,1,8,9,3,4,5,2,6,7,1,8,9,3,4,5,2,6,7,1,8,9,3,4,5,2,8,10,11,12,10,13,14,15,15,13],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["str",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["syntaxkind",4]],[[["",0],["",0]]],[[["",0],["syntaxkind",4]],["ordering",4]],[[],["input",3]],[[],["output",3]],[[["",0],["syntaxkind",4]],["bool",0]],[[["",0],["usize",0]],["option",4,[["str",0]]]],[[["",0]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["syntaxkind",4],["option",4,[["syntaxkind",4]]],["option",4,[["syntaxkind",4]]]],["option",4,[["reparser",3]]]],[[]],[[]],[[]],[[["u16",0]],["syntaxkind",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[["char",0]],["option",4,[["syntaxkind",4]]]],[[["str",0]],["option",4,[["syntaxkind",4]]]],[[["str",0]],["option",4,[["syntaxkind",4]]]],[[["",0],["",0]]],[[["",0],["output",3],["fnmut",8]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[],["bool",0]],[[],["bool",0]],[[],["bool",0]],[[],["bool",0]],[[["",0]]],[[["",0],["usize",0]],["syntaxkind",4]],[[["",0]],["usize",0]],[[["str",0]],["lexedstr",3]],[[["input",3]],["output",3]],[[["",0],["input",3]],["output",3]],[[["",0],["input",3]],["output",3]],[[["",0],["syntaxkind",4]],["option",4,[["ordering",4]]]],[[["",0],["syntaxkind",4]]],[[["",0],["syntaxkind",4]]],[[["",0],["range",3,[["usize",0]]]],["str",0]],[[["str",0]],["option",4]],[[["",0],["usize",0]],["str",0]],[[["",0],["usize",0]],["usize",0]],[[["",0],["usize",0]],["range",3,[["usize",0]]]],[[["",0],["usize",0]],["usize",0]],[[["",0]],["input",3]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]]],null,null,null,null,null,null,null,null,null],"p":[[4,"SyntaxKind"],[4,"PrefixEntryPoint"],[4,"Step"],[4,"StrStep"],[4,"TopEntryPoint"],[3,"LexedStr"],[3,"Reparser"],[3,"Input"],[3,"Output"],[13,"Token"],[13,"Enter"],[13,"Error"],[13,"Token"],[13,"Enter"],[13,"Error"]]},\
"paths":{"doc":"Thin wrappers around <code>std::path</code>, distinguishing between …","t":[3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["AbsPath","AbsPathBuf","RelPath","RelPathBuf","as_os_str","as_path","as_path","as_ref","as_ref","as_ref","as_ref","as_ref","assert","assert","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","cmp","cmp","deref","deref","display","ends_with","eq","eq","eq","eq","eq","exists","extension","file_name","file_stem","fmt","fmt","fmt","fmt","from","from","hash","hash","hash","hash","into","into","join","ne","ne","ne","ne","new_unchecked","normalize","parent","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pop","starts_with","strip_prefix","to_owned","to_owned","to_path_buf","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","type_id","type_id"],"q":["paths","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Wrapper around an absolute <code>Path</code>.","Wrapper around an absolute <code>PathBuf</code>.","Wrapper around a relative <code>Path</code>.","Wrapper around a relative <code>PathBuf</code>.","","Coerces to an <code>AbsPath</code> slice.","Coerces to a <code>RelPath</code> slice.","","","","","","Wrap the given absolute path in <code>AbsPathBuf</code>","Wrap the given absolute path in <code>AbsPath</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Equivalent of <code>Path::join</code> for <code>AbsPath</code>.","","","","","Creates a new <code>RelPath</code> from <code>path</code>, without checking if it is …","Normalize the given path:","Equivalent of <code>Path::parent</code> for <code>AbsPath</code>.","","","","","Equivalent of <code>PathBuf::pop</code> for <code>AbsPathBuf</code>.","","Equivalent of <code>Path::strip_prefix</code> for <code>AbsPath</code>.","","","Equivalent of <code>Path::to_path_buf</code> for <code>AbsPath</code>.","","","","","","","","","","","",""],"i":[0,0,0,0,1,2,3,2,2,1,3,4,2,1,2,2,1,3,4,2,1,3,4,2,3,2,3,2,1,3,4,2,3,1,1,2,2,1,3,4,1,1,1,1,2,1,3,4,2,3,2,1,3,4,2,3,1,2,1,3,4,4,1,1,2,1,3,4,2,1,1,2,3,1,2,2,2,3,3,3,2,3,2,1,3,4],"f":[null,null,null,null,[[["",0]],["osstr",3]],[[["",0]],["abspath",3]],[[["",0]],["relpath",3]],[[["",0]],["abspath",3]],[[["",0]],["path",3]],[[["",0]],["path",3]],[[["",0]],["path",3]],[[["",0]],["path",3]],[[["pathbuf",3]],["abspathbuf",3]],[[["path",3]],["abspath",3]],[[["",0]],["",0]],[[["",0]],["abspath",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["abspathbuf",3]],[[["",0]],["relpathbuf",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["abspathbuf",3]],["ordering",4]],[[["",0],["abspath",3]],["ordering",4]],[[["",0],["relpathbuf",3]],["ordering",4]],[[["",0],["relpath",3]],["ordering",4]],[[["",0]],["abspath",3]],[[["",0]],["relpath",3]],[[["",0]],["display",3]],[[["",0],["relpath",3]],["bool",0]],[[["",0],["abspath",3]],["bool",0]],[[["",0],["abspathbuf",3]],["bool",0]],[[["",0],["abspath",3]],["bool",0]],[[["",0],["relpathbuf",3]],["bool",0]],[[["",0],["relpath",3]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["option",4,[["osstr",3]]]],[[["",0]],["option",4,[["osstr",3]]]],[[["",0]],["option",4,[["osstr",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[]],[[]],[[["",0]],["abspathbuf",3]],[[["",0],["abspathbuf",3]],["bool",0]],[[["",0],["abspath",3]],["bool",0]],[[["",0],["relpathbuf",3]],["bool",0]],[[["",0],["relpath",3]],["bool",0]],[[["path",3]],["relpath",3]],[[["",0]],["abspathbuf",3]],[[["",0]],["option",4,[["abspath",3]]]],[[["",0],["abspathbuf",3]],["option",4,[["ordering",4]]]],[[["",0],["abspath",3]],["option",4,[["ordering",4]]]],[[["",0],["relpathbuf",3]],["option",4,[["ordering",4]]]],[[["",0],["relpath",3]],["option",4,[["ordering",4]]]],[[["",0]],["bool",0]],[[["",0],["abspath",3]],["bool",0]],[[["",0],["abspath",3]],["option",4,[["relpath",3]]]],[[["",0]]],[[["",0]]],[[["",0]],["abspathbuf",3]],[[["str",0]],["result",4,[["abspathbuf",3],["pathbuf",3]]]],[[],["result",4]],[[["pathbuf",3]],["result",4,[["abspathbuf",3],["pathbuf",3]]]],[[["pathbuf",3]],["result",4,[["relpathbuf",3],["pathbuf",3]]]],[[["str",0]],["result",4,[["relpathbuf",3],["pathbuf",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[3,"AbsPath"],[3,"AbsPathBuf"],[3,"RelPathBuf"],[3,"RelPath"]]},\
"proc_macro_api":{"doc":"Client-side Proc-Macro crate","t":[13,13,13,3,3,3,4,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,0,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,3,13,13,3,13,13,8,3,4,4,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12],"n":["Attr","CustomDerive","FuncLike","MacroDylib","MacroPanic","ProcMacro","ProcMacroKind","ProcMacroServer","RustCInfo","ServerError","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel","clone","clone","clone_into","clone_into","commit","date","deserialize","eq","eq","equivalent","equivalent","expand","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","into","into","io","kind","load_dylib","message","message","msg","name","new","read_dylib_info","read_version","serialize","spawn","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","version_string","0","ExpandMacro","ExpandMacro","ExpandMacro","FlatTree","ListMacros","ListMacros","Message","PanicMessage","Request","Response","attributes","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","current_dir","deserialize","deserialize","deserialize","deserialize","deserialize","env","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","lib","macro_body","macro_name","new","read","serialize","serialize","serialize","serialize","serialize","to_subtree","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","write","0","dylib_path","0","0"],"q":["proc_macro_api","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","proc_macro_api::msg","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","proc_macro_api::msg::Request","","proc_macro_api::msg::Response",""],"d":["","","","","","A handle to a specific macro (a <code>#[proc_macro]</code> annotated …","","A handle to an external process which load dylibs with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Defines messages for cross-process message passing based …","","","Read rustc dylib information","Check the version of rustc that was used to compile a proc …","","Spawns an external process as the proc macro server and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Possible attributes for the attribute-like macros.","","","","","","","","","","","","","","","","","Environment variables to set during macro expansion.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Argument of macro call.","Name of macro to expand.","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,1,1,0,0,0,0,0,0,0,2,3,4,5,1,6,7,2,3,4,5,1,6,7,5,1,7,1,7,5,5,1,1,7,1,7,7,3,5,1,6,7,2,3,4,5,1,6,7,2,3,4,5,1,6,7,3,7,6,3,4,0,7,2,0,0,1,6,1,7,3,2,3,4,5,1,6,7,2,3,4,5,1,6,7,2,3,4,5,1,6,7,5,5,8,0,9,10,0,9,10,0,0,0,0,11,12,9,10,8,11,12,9,10,8,11,11,12,9,10,8,11,11,12,9,10,8,11,12,9,10,8,11,12,9,10,8,11,11,11,11,12,13,12,9,10,8,11,12,12,9,10,8,11,12,9,10,8,11,12,9,10,8,11,13,14,15,16,17],"f":[null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0]],["procmacrokind",4]],[[["",0]],["procmacro",3]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,[[],["result",4]],[[["",0],["procmacrokind",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["subtree",3],["option",4,[["subtree",3]]],["vec",3]],["result",4,[["result",4,[["subtree",3],["panicmessage",3]]],["servererror",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["",0]],["procmacrokind",4]],[[["",0],["macrodylib",3]],["result",4,[["vec",3,[["procmacro",3]]],["servererror",3]]]],null,null,null,[[["",0]],["str",0]],[[["abspathbuf",3]],["result",6,[["macrodylib",3]]]],[[["abspath",3]],["result",6,[["rustcinfo",3]]]],[[["abspath",3]],["result",6,[["string",3]]]],[[["",0]],["result",4]],[[["abspathbuf",3]],["result",6,[["procmacroserver",3]]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["subtree",3]],["flattree",3]],[[["string",3]],["result",6,[["option",4]]]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[],["subtree",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["result",6]],null,null,null,null],"p":[[4,"ProcMacroKind"],[3,"MacroDylib"],[3,"ServerError"],[3,"MacroPanic"],[3,"RustCInfo"],[3,"ProcMacroServer"],[3,"ProcMacro"],[3,"PanicMessage"],[4,"Request"],[4,"Response"],[3,"ExpandMacro"],[3,"FlatTree"],[8,"Message"],[13,"ExpandMacro"],[13,"ListMacros"],[13,"ListMacros"],[13,"ExpandMacro"]]},\
"proc_macro_srv":{"doc":"RA Proc Macro Server","t":[0,5],"n":["cli","run"],"q":["proc_macro_srv","proc_macro_srv::cli"],"d":["Driver for proc macro server",""],"i":[0,0],"f":[null,[[],["result",6]]],"p":[]},\
"proc_macro_test":{"doc":"Exports a few trivial procedural macros for testing.","t":[7],"n":["PROC_MACRO_TEST_LOCATION"],"q":["proc_macro_test"],"d":[""],"i":[0],"f":[null],"p":[]},\
"profile":{"doc":"A collection of tools for profiling rust-analyzer.","t":[3,3,3,3,3,3,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,12,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,5,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Bytes","Count","CpuSpan","MemoryUsage","Scope","StopWatch","StopWatchSpan","add_assign","allocated","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","countme","cpu_span","default","default","drop","drop","drop","elapsed","enter","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","hash","heartbeat","heartbeat_span","init","init_from","instructions","into","into","into","into","into","into","into","is_active","megabytes","memory","memory","memory_usage","ne","ne","new","now","partial_cmp","partial_cmp","span","start","sub","sub","time","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["profile","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Include <code>_c: Count&lt;Self&gt;</code> field in important structs to …","A wrapper around google_cpu_profiler.","","Allows to check if the current code is withing some …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Filtering syntax env RA_PROFILE=*             // dump …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Create new <code>Count</code>, incrementing the corresponding count.","","","","This function starts a profiling scope in the current …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,2,3,4,5,6,2,1,7,3,4,5,6,2,1,7,5,2,1,5,2,1,5,1,0,0,5,1,5,6,7,3,6,5,1,4,5,2,1,7,3,4,5,6,2,1,7,5,1,0,0,0,0,4,3,4,5,6,2,1,7,6,1,3,4,0,5,1,5,2,5,1,0,3,2,1,4,5,2,1,4,2,1,3,4,5,6,2,1,7,3,4,5,6,2,1,7,3,4,5,6,2,1,7],"f":[null,null,null,null,null,null,null,[[["",0],["usize",0]]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["count",3]],[[["",0]],["memoryusage",3]],[[["",0]],["bytes",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["count",3]],["ordering",4]],[[["",0],["bytes",3]],["ordering",4]],null,[[],["cpuspan",3]],[[],["count",3]],[[],["bytes",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["stopwatchspan",3]],[[],["scope",3]],[[["",0],["count",3]],["bool",0]],[[["",0],["bytes",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["",0]]],[[["",0],["",0]]],[[]],[[],["heartbeatspan",3]],[[]],[[["str",0]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",0]],[[],["isize",0]],[[["bool",0]],["stopwatch",3]],null,[[],["memoryusage",3]],[[["",0],["count",3]],["bool",0]],[[["",0],["bytes",3]],["bool",0]],[[],["count",3]],[[],["memoryusage",3]],[[["",0],["count",3]],["option",4,[["ordering",4]]]],[[["",0],["bytes",3]],["option",4,[["ordering",4]]]],[[["str",0]],["profilespan",3]],[[],["stopwatch",3]],[[["memoryusage",3]],["memoryusage",3]],[[["bytes",3]],["bytes",3]],null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[3,"Bytes"],[3,"MemoryUsage"],[3,"StopWatch"],[3,"StopWatchSpan"],[3,"Count"],[3,"Scope"],[3,"CpuSpan"]]},\
"project_model":{"doc":"In rust-analyzer, we maintain a strict separation between …","t":[13,13,13,13,13,3,13,3,4,13,13,13,13,13,3,13,13,13,6,3,3,3,13,3,13,3,4,4,4,13,3,6,3,4,13,4,13,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,12,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,12,11,11,12,12,11,12,12,11,12,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["All","Bench","Bin","BuildScript","Cargo","CargoConfig","CargoToml","CargoWorkspace","CfgOverrides","DetachedFiles","Discover","Example","Json","Lib","ManifestPath","None","Only","Other","Package","PackageData","PackageDependency","PackageRoot","Path","ProjectJson","ProjectJson","ProjectJsonData","ProjectManifest","ProjectWorkspace","RustcSource","Selective","Sysroot","Target","TargetData","TargetKind","Test","UnsetTestCrates","Wildcard","WorkspaceBuildScripts","active_features","all_features","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cfg_overrides","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","crates","crates","default","default","default","default","dependencies","deref","deserialize","discover","discover","discover_all","discover_rustc","discover_single","edition","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","exclude","features","features","fetch_metadata","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_manifest_file","hash","hash","hash","id","include","index","index","index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_local","is_local","is_member","is_proc_macro","kind","kind","len","load","load","load_detached_files","load_inline","manifest","metadata","n_crates","n_packages","name","name","name","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","no_default_features","no_sysroot","package","package_flag","packages","parent","parent_manifests","partial_cmp","partial_cmp","path","pkg","proc_macro","public_deps","repository","required_features","root","root","run_build_script_command","run_build_scripts","rustc_source","set_build_scripts","target","target_by_root","targets","to_crate_graph","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_roots","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unset_test_crates","version","workspace_root","wrap_rustc_in_build_scripts","0","0","0","0","build_scripts","cargo","cfg_overrides","files","project","rustc","rustc_cfg","rustc_cfg","rustc_cfg","sysroot","sysroot","sysroot","0","0"],"q":["project_model","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","project_model::CfgOverrides","","project_model::ProjectManifest","","project_model::ProjectWorkspace","","","","","","","","","","","","project_model::RustcSource","project_model::UnsetTestCrates"],"d":["","","","","Project workspace was discovered by running <code>cargo metadata</code> …","","","<code>CargoWorkspace</code> represents the logical structure of, well, …","A set of cfg-overrides per crate.","Project with a set of disjoint files, not belonging to any …","Try to automatically detect where the rustc source …","","Project workspace was manually specified using a …","Any kind of Cargo lib crate-type (dylib, rlib, proc-macro, …","More or less <code>AbsPathBuf</code> with non-None parent.","","","","","Information associated with a cargo crate","","<code>PackageRoot</code> describes a package root folder. Which may be …","Explicit path for the rustc source directory.","Roots and crates that compose this Rust project.","","","","","Describes how to set the rustc source directory.","A set of overrides matching specific crates.","","","Information associated with a package’s target","","","Crates to disable <code>#[cfg(test)]</code> on.","A single global set of overrides matching all crates.","","List of features enabled on this package","Activate all available features","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator over the crates in the project.","","","","","","List of packages this package depends on","","","","","","","","Rust edition for this package","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","List of features to activate. This will be ignored if …","Features provided by the crate, mapped to the features …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","String representation of package id","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Does this package come from the local filesystem (and is …","Is from the local filesystem and may be edited","","Is this target a proc-macro","","Kind of target","","","","","","Path containing the <code>Cargo.toml</code>","The contents of [package.metadata.rust-analyzer]","Returns the number of crates in the project.","","Name as given in the <code>Cargo.toml</code>","","Name as given in the <code>Cargo.toml</code> or generated from the file …","","","","","","","","","","","","","","","","","Create a new ProjectJson instance.","Do not activate the <code>default</code> feature.","Don’t load sysroot crates (<code>std</code>, <code>core</code> &amp; friends). Might …","Package that provided this target","","","","","","","Returns the path to the project’s root folder.","","","","Repository as given in the <code>Cargo.toml</code>","Required features of the target without which it won’t …","","Path to the main source file of the target","","","rustc private crate source","","rustc target","","Targets provided by the crate (lib, bin, example, test, ……","","","","","","","","","","","","","","","","","","","Returns the roots for the current <code>ProjectWorkspace</code> The …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","crates to disable <code>#[cfg(test)]</code> on","Version given in the <code>Cargo.toml</code>","","","","","","","","","","","","","Holds cfg flags for the current target. We get those by …","","","","","","",""],"i":[1,2,2,2,3,0,4,0,0,3,5,2,3,2,0,1,1,2,0,0,0,0,5,0,4,0,0,0,0,6,0,0,0,0,2,0,6,0,7,8,9,9,10,5,1,8,7,11,12,2,13,14,15,6,16,3,17,4,9,10,5,1,8,7,11,12,2,13,14,15,6,16,3,17,4,8,9,10,5,1,8,7,11,12,2,13,14,15,6,16,3,17,4,9,10,5,1,8,7,11,12,2,13,14,15,6,16,3,17,4,9,4,13,15,1,8,6,17,7,9,14,15,4,4,15,4,7,9,10,5,1,8,7,11,12,2,13,15,6,16,3,17,4,9,10,5,1,8,7,11,12,2,13,15,6,16,3,17,4,17,16,8,7,10,9,10,5,1,8,7,11,12,2,13,14,15,6,16,3,17,4,9,10,5,1,8,7,11,12,2,13,14,15,6,16,3,17,4,4,9,16,4,7,16,10,10,15,9,10,5,1,8,7,11,12,2,13,14,15,6,16,3,17,4,7,16,7,12,11,12,6,15,3,3,3,7,7,13,3,7,11,12,9,10,5,1,8,7,11,12,13,15,6,16,3,17,4,10,13,8,8,12,10,10,9,10,9,4,13,11,15,15,7,12,15,12,8,3,8,3,8,10,7,3,9,10,5,1,8,7,11,12,2,13,14,15,6,16,3,17,4,3,9,9,10,5,1,8,7,11,12,2,13,14,15,6,16,3,17,4,9,10,5,1,8,7,11,12,2,13,14,15,6,16,3,17,4,9,10,5,1,8,7,11,12,2,13,14,15,6,16,3,17,4,8,7,10,8,18,19,20,21,22,22,22,23,24,22,22,24,23,22,24,23,25,26],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["pathcfgoverrides",4]],[[["",0]],["manifestpath",3]],[[["",0]],["cargoworkspace",3]],[[["",0]],["rustcsource",4]],[[["",0]],["unsettestcrates",4]],[[["",0]],["cargoconfig",3]],[[["",0]],["packagedata",3]],[[["",0]],["packagedependency",3]],[[["",0]],["targetdata",3]],[[["",0]],["targetkind",4]],[[["",0]],["projectjson",3]],[[["",0]],["projectjsondata",3]],[[["",0]],["sysroot",3]],[[["",0]],["cfgoverrides",4]],[[["",0]],["packageroot",3]],[[["",0]],["projectworkspace",4]],[[["",0]],["workspacebuildscripts",3]],[[["",0]],["projectmanifest",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["manifestpath",3]],["ordering",4]],[[["",0],["projectmanifest",4]],["ordering",4]],[[["",0]]],[[["",0]]],[[]],[[],["cargoconfig",3]],[[]],[[],["workspacebuildscripts",3]],null,[[["",0]]],[[],["result",4]],[[["abspath",3]],["result",6,[["sysroot",3]]]],[[["abspath",3]],["result",6,[["vec",3,[["projectmanifest",4]]]]]],[[],["vec",3,[["projectmanifest",4]]]],[[["manifestpath",3]],["option",4,[["manifestpath",3]]]],[[["abspath",3]],["result",6,[["projectmanifest",4]]]],null,[[["",0],["manifestpath",3]],["bool",0]],[[["",0],["cargoworkspace",3]],["bool",0]],[[["",0],["rustcsource",4]],["bool",0]],[[["",0],["unsettestcrates",4]],["bool",0]],[[["",0],["cargoconfig",3]],["bool",0]],[[["",0],["packagedata",3]],["bool",0]],[[["",0],["packagedependency",3]],["bool",0]],[[["",0],["targetdata",3]],["bool",0]],[[["",0],["targetkind",4]],["bool",0]],[[["",0],["projectjson",3]],["bool",0]],[[["",0],["sysroot",3]],["bool",0]],[[["",0],["cfgoverrides",4]],["bool",0]],[[["",0],["packageroot",3]],["bool",0]],[[["",0],["projectworkspace",4]],["bool",0]],[[["",0],["workspacebuildscripts",3]],["bool",0]],[[["",0],["projectmanifest",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0]],["option",4,[["str",0]]]],null,null,null,[[["manifestpath",3],["abspath",3],["cargoconfig",3],["fn",8]],["result",6,[["metadata",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["abspathbuf",3]],["result",6,[["projectmanifest",4]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,[[["",0],["target",6]],["targetdata",3]],[[["",0],["package",6]],["packagedata",3]],[[["",0],["idx",3,[["sysrootcratedata",3]]]],["sysrootcratedata",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[["",0]],["usize",0]],[[["abspathbuf",3]],["result",6,[["sysroot",3]]]],[[["projectmanifest",4],["cargoconfig",3],["fn",8]],["result",6,[["projectworkspace",4]]]],[[["vec",3,[["abspathbuf",3]]]],["result",6,[["projectworkspace",4]]]],[[["projectjson",3],["option",4,[["str",0]]]],["result",6,[["projectworkspace",4]]]],null,null,[[["",0]],["usize",0]],[[["",0]],["usize",0]],null,null,null,[[["",0],["manifestpath",3]],["bool",0]],[[["",0],["cargoworkspace",3]],["bool",0]],[[["",0],["rustcsource",4]],["bool",0]],[[["",0],["unsettestcrates",4]],["bool",0]],[[["",0],["cargoconfig",3]],["bool",0]],[[["",0],["packagedata",3]],["bool",0]],[[["",0],["packagedependency",3]],["bool",0]],[[["",0],["targetdata",3]],["bool",0]],[[["",0],["projectjson",3]],["bool",0]],[[["",0],["sysroot",3]],["bool",0]],[[["",0],["cfgoverrides",4]],["bool",0]],[[["",0],["packageroot",3]],["bool",0]],[[["",0],["projectworkspace",4]],["bool",0]],[[["",0],["workspacebuildscripts",3]],["bool",0]],[[["",0],["projectmanifest",4]],["bool",0]],[[["metadata",3]],["cargoworkspace",3]],[[["abspath",3],["projectjsondata",3]],["projectjson",3]],null,null,null,[[["",0],["packagedata",3]],["string",3]],[[["",0]]],[[["",0]],["abspath",3]],[[["",0],["manifestpath",3]],["option",4,[["vec",3,[["manifestpath",3]]]]]],[[["",0],["manifestpath",3]],["option",4,[["ordering",4]]]],[[["",0],["projectmanifest",4]],["option",4,[["ordering",4]]]],[[["",0]],["abspath",3]],null,[[["",0]],["option",4,[["idx",3,[["sysrootcratedata",3]]]]]],[[["",0]]],null,null,[[["",0]],["abspath",3]],null,null,[[["",0],["cargoconfig",3],["fn",8]],["result",6,[["workspacebuildscripts",3]]]],null,[[["",0],["workspacebuildscripts",3]]],null,[[["",0],["abspath",3]],["option",4,[["target",6]]]],null,[[["",0],["fnmut",8],["fnmut",8]],["crategraph",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["vec",3,[["packageroot",3]]]],[[],["result",4]],[[["abspathbuf",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,[[["",0]],["abspath",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"UnsetTestCrates"],[4,"TargetKind"],[4,"ProjectWorkspace"],[4,"ProjectManifest"],[4,"RustcSource"],[4,"CfgOverrides"],[3,"PackageData"],[3,"CargoConfig"],[3,"ManifestPath"],[3,"CargoWorkspace"],[3,"PackageDependency"],[3,"TargetData"],[3,"ProjectJson"],[3,"ProjectJsonData"],[3,"Sysroot"],[3,"PackageRoot"],[3,"WorkspaceBuildScripts"],[13,"Wildcard"],[13,"Selective"],[13,"ProjectJson"],[13,"CargoToml"],[13,"Cargo"],[13,"DetachedFiles"],[13,"Json"],[13,"Path"],[13,"Only"]]},\
"rust_analyzer":{"doc":"Implementation of the LSP for rust-analyzer.","t":[6,6,0,0,5,0,5,5,5,13,13,13,13,4,11,11,11,11,11,11,11,0,11,11,11,11,11,0,11,11,11,11,3,13,13,3,13,18,3,13,3,13,3,13,4,3,13,3,13,3,4,3,13,3,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,12,5,5,12,11,11,11,12,3,13,3,3,3,13,3,4,3,13,3,4,18,3,13,3,13,4,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,12,12,12,11,12,12,11,12,11,11,11,11,12,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,12,12,12,12,13,4,3,13,3,3,3,3,4,4,3,3,3,3,13,13,13,4,3,3,4,4,3,3,4,3,3,4,3,4,3,4,4,4,3,13,4,4,13,13,4,3,4,13,4,13,4,4,3,4,4,3,4,3,4,4,3,3,3,4,3,4,3,3,13,4,3,4,4,4,3,13,13,13,4,3,4,4,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12],"n":["Error","Result","cli","config","from_json","lsp_ext","main_loop","server_capabilities","version","Normal","Quiet","Spammy","Verbose","Verbosity","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","flags","from","init","into","is_spammy","is_verbose","load_cargo","to_owned","try_from","try_into","type_id","AnalysisStats","AnalysisStats","Csv","Diagnostics","Diagnostics","HELP","Highlight","Highlight","Lsif","Lsif","LspServer","LspServer","OutputFormat","Parse","Parse","ProcMacro","ProcMacro","RustAnalyzer","RustAnalyzerCmd","Search","Search","Ssr","Ssr","Symbols","Symbols","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","debug","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","disable_build_scripts","disable_build_scripts","disable_proc_macros","disable_proc_macros","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_env","from_str","from_vec","help","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","log_file","memory_usage","no_dump","no_log_buffering","no_sysroot","only","output","parallel","path","path","path","pattern","print_config_schema","quiet","rainbow","randomize","rule","run","run","run","run","run","run","run","run","skip_inference","source_stats","subcommand","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verbose","verbosity","version","wait_dbg","with_deps","0","0","0","0","0","0","0","0","0","0","LoadCargoConfig","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","load_out_dirs_from_check","load_workspace","load_workspace_at","prefill_caches","try_from","try_into","type_id","with_proc_macro","CallInfoConfig","Client","ClientCommandsConfig","Config","ConfigUpdateError","CustomCommand","FilesConfig","FilesWatcher","HoverActionsConfig","InlineJsonProject","LensConfig","LinkedProject","NO_ACTIONS","NotificationsConfig","ProjectManifest","RunnablesConfig","Rustfmt","RustfmtConfig","Server","WorkspaceSymbolConfig","any","any","assist","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_info","caps","cargo","cargo_autoreload","cargo_extra_args","cargo_toml_not_found","change_annotation_support","client_commands","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code_action_group","code_action_literals","code_action_resolve","code_lens_refresh","completion","completion_label_details_support","debug","debug","debug_single","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","detached_files","diagnostics","diagnostics_map","did_change_watched_files_dynamic_registration","did_save_text_document_dynamic_registration","discovered_projects","docs","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dummy_replacements","enum_variant_refs","eq","eq","eq","equivalent","equivalent","equivalent","exclude","expand_proc_attr_macros","files","flycheck","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","goto_location","goto_type_def","hierarchical_symbols","highlight_related","highlighting_strings","hover","hover_actions","implementations","implementations","init","init","init","init","init","init","init","init","init","init","init","init","init","inlay_hints","insert_replace_support","into","into","into","into","into","into","into","into","into","into","into","into","into","join_lines","json_schema","lens","line_folding_only","linked_projects","location_link","lru_capacity","method_refs","ne","ne","ne","new","none","none","notifications","offset_encoding","override_cargo","params_only","prefill_caches","prime_caches_num_threads","proc_macro_srv","publish_diagnostics","references","references","refs_adt","refs_trait","root_path","run","run","run_build_scripts","run_single","runnable","runnable","runnables","rustfmt","search_kind","search_limit","search_scope","semantic_tokens_refresh","server_status_notification","show_reference","signature_help_label_offsets","snippet_cap","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","trigger_parameter_hints","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","typing_autoclose_angle","update","watcher","will_rename","work_done_progress","workspace_symbol","0","0","args","command","enable_range_formatting","extra_args","AllSymbols","AnalyzerStatus","AnalyzerStatusParams","Cargo","CargoRunnable","ClientCommandOptions","CodeAction","CodeActionData","CodeActionRequest","CodeActionResolveRequest","CommandLink","CommandLinkGroup","CompletionImport","CompletionResolveData","Down","Edit","Error","ExpandMacro","ExpandMacroParams","ExpandedMacro","ExternalDocs","Health","Hover","HoverParams","HoverRequest","InlayHintResolveData","InlayHintsParams","JoinLines","JoinLinesParams","MatchingBrace","MatchingBraceParams","MemoryUsage","MoveItem","MoveItemDirection","MoveItemParams","Ok","OnEnter","OnTypeFormatting","OnlyTypes","Op","OpenCargoToml","OpenCargoTomlParams","ParentModule","Position","PositionOrRange","Range","RelatedTests","ReloadWorkspace","Runnable","RunnableKind","Runnables","RunnablesParams","ServerStatusNotification","ServerStatusParams","ShuffleCrateGraph","SnippetDocumentChangeOperation","SnippetTextDocumentEdit","SnippetTextEdit","SnippetWorkspaceEdit","Ssr","SsrParams","SyntaxTree","SyntaxTreeParams","TestInfo","Up","ViewCrateGraph","ViewCrateGraphParams","ViewFileText","ViewHir","ViewItemTree","ViewItemTreeParams","Warning","Workspace","WorkspaceAndDependencies","WorkspaceSymbol","WorkspaceSymbolParams","WorkspaceSymbolSearchKind","WorkspaceSymbolSearchScope","actions","annotation_id","args","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cargo_args","cargo_extra_args","change_annotations","changes","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code_action_params","command","command","commands","commands","data","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","direction","document_changes","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","edit","edits","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","executable_args","expansion","expect_test","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","full","full_import_path","group","health","hover","id","imported_name","imports","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","insert_text_format","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_preferred","kind","kind","label","location","message","name","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new_text","override_cargo","parse_only","partial_result_params","position","position","position","position","position","position","positions","query","query","quiescent","range","range","range","range","ranges","runnable","search_kind","search_scope","selections","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","supports_utf8","text_document","text_document","text_document","text_document","text_document","text_document","text_document","text_document","text_document","text_document","text_document","text_document","text_document","title","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","tooltip","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","work_done_progress_params","work_done_progress_params","workspace_root","0","0","0","0"],"q":["rust_analyzer","","","","","","","","","rust_analyzer::cli","","","","","","","","","","","","","","","","","","","","","","","rust_analyzer::cli::flagsrust_analyzer::cli::flags::RustAnalyzerCmd","","","","","","","","","","rust_analyzer::cli::load_cargo","","","","","","","","","","","","","","","","","rust_analyzer::configrust_analyzer::config::LinkedProject","","rust_analyzer::config::RustfmtConfig","","","","rust_analyzer::lsp_extrust_analyzer::lsp_ext::PositionOrRange","","rust_analyzer::lsp_ext::SnippetDocumentChangeOperation",""],"d":["","","Various batch processing tasks, intended primarily for …","Config used by the language server.","","rust-analyzer extensions to the LSP.","","","Returns information about cargo’s version.","","","","","","","","","","","","","Grammar for the command-line arguments.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Loads a Cargo project into a static instance of analysis, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Searches for <code>patterns</code>, printing debug information for any …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Configuration for runnable items, such as <code>main</code> function or …","","","","Configuration for workspace symbol search requests.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Additional arguments for the <code>cargo</code>, e.g. <code>--release</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Custom command to be executed instead of <code>cargo</code> for …","","","","","","","","","","","","","","","","","","","What kind of symbol is being searched for.","How many items are returned at most.","In what scope should the symbol be searched in.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The document on type formatting request is sent from the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The annotation id if this is an annotatedeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Include <em>all</em> crates, not just crates in the workspace.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","File position where SSR was invoked. Paths in <code>query</code> will …","","","","","","A non-empty query string","","","","","","","","","","Current selections. Search/replace will be restricted to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,0,2,3,0,2,4,0,2,0,2,0,2,0,0,2,0,2,0,0,0,2,0,2,0,2,4,2,5,6,7,8,9,10,11,12,13,14,3,4,2,5,6,7,8,9,10,11,12,13,14,3,12,4,2,5,6,7,8,9,10,11,12,13,14,3,4,2,5,6,7,8,9,10,11,12,13,14,3,9,10,9,10,4,2,5,6,7,8,9,10,11,12,13,14,3,3,3,4,2,5,6,7,8,9,10,11,12,13,14,3,4,2,5,6,7,8,9,10,11,12,13,14,3,4,3,4,5,4,2,5,6,7,8,9,10,11,12,13,14,3,4,2,5,6,7,8,9,10,11,12,13,14,3,4,9,6,4,9,9,9,9,9,10,14,12,5,4,8,9,11,6,7,8,9,10,11,12,14,9,9,4,4,2,5,6,7,8,9,10,11,12,13,14,3,4,2,5,6,7,8,9,10,11,12,13,14,3,4,2,5,6,7,8,9,10,11,12,13,14,3,4,4,5,4,9,15,16,17,18,19,20,21,22,23,24,0,25,25,25,25,25,25,25,25,25,0,0,25,25,25,25,25,0,26,0,0,0,27,0,0,0,28,0,0,29,0,28,0,27,0,26,0,30,29,31,32,33,31,28,30,29,34,26,35,27,36,37,38,32,33,31,28,30,29,34,26,35,27,36,37,38,31,31,31,31,36,35,31,31,31,28,30,29,34,26,35,27,36,37,31,28,30,29,34,26,35,27,36,37,31,31,31,31,31,31,30,29,33,32,33,31,28,30,29,34,26,35,27,36,37,38,32,33,31,28,30,29,34,26,35,27,36,37,38,31,31,31,31,31,31,32,32,33,31,28,30,29,34,26,35,27,36,37,38,31,30,28,30,29,28,30,29,34,31,31,31,31,28,30,29,34,26,35,27,36,37,38,38,32,33,31,28,28,28,30,29,34,26,35,27,36,37,38,33,29,31,31,31,31,31,30,29,32,33,31,28,30,29,34,26,35,27,36,37,38,31,31,32,33,31,28,30,29,34,26,35,27,36,37,38,31,31,31,31,31,31,31,30,28,30,29,31,30,29,31,31,36,32,31,31,31,31,30,29,30,30,31,30,29,31,33,30,29,31,31,37,37,37,31,31,33,31,31,31,28,30,29,34,26,35,27,36,37,38,33,32,33,31,28,30,29,34,26,35,27,36,37,38,32,33,31,28,30,29,34,26,35,27,36,37,38,32,33,31,28,30,29,34,26,35,27,36,37,38,31,31,34,31,31,31,39,40,41,41,42,42,43,0,0,44,0,0,0,0,0,0,0,0,0,0,45,46,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,47,0,0,43,46,0,0,0,48,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,0,0,0,0,0,0,47,49,49,0,0,0,0,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,52,44,86,87,88,89,90,47,91,92,93,46,94,51,95,48,50,96,97,98,99,45,100,101,49,43,102,103,104,105,106,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,52,44,86,87,88,89,90,47,91,92,93,46,94,51,95,48,50,96,97,98,99,45,100,101,49,43,102,103,104,105,106,86,86,93,93,90,47,91,92,93,46,94,51,95,48,50,96,97,101,49,43,90,47,91,92,93,46,94,51,95,48,50,96,97,101,49,43,92,91,97,96,106,91,91,93,51,96,97,101,106,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,52,44,86,87,88,89,90,47,91,92,93,46,94,51,95,48,50,96,97,98,99,45,100,101,49,43,102,103,104,105,106,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,52,44,86,87,88,89,90,47,91,92,93,46,94,51,95,48,50,96,97,98,99,45,100,101,49,43,102,103,104,105,106,77,78,79,80,81,82,83,84,85,52,44,86,87,88,89,90,47,91,92,93,46,94,51,95,48,50,96,97,98,99,45,101,49,43,103,104,105,106,99,93,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,52,44,86,87,88,89,90,47,91,92,93,46,94,51,95,48,50,96,97,98,99,45,100,101,49,43,102,103,104,105,106,91,94,90,47,91,92,93,46,94,51,95,48,50,96,97,101,49,43,90,47,92,93,46,94,51,95,48,101,49,43,86,82,86,77,78,79,80,81,82,83,84,85,52,44,86,87,88,89,91,92,93,46,94,51,95,48,50,96,97,98,99,45,100,101,49,43,102,103,104,105,106,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,52,44,86,87,88,89,90,47,91,92,93,46,94,51,95,48,50,96,97,98,99,45,100,101,49,43,102,103,104,105,106,79,105,91,90,50,92,105,103,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,52,44,86,87,88,89,90,47,91,92,93,46,94,51,95,48,50,96,97,98,99,45,100,101,49,43,102,103,104,105,106,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,52,44,86,87,88,89,90,47,91,92,93,46,94,51,95,48,50,96,97,98,99,45,100,101,49,43,102,103,104,105,106,91,52,91,52,52,90,82,90,91,92,93,46,94,51,95,48,50,96,97,101,51,86,89,101,81,85,89,95,103,104,83,89,101,90,78,88,51,99,84,87,101,101,89,77,78,79,80,81,82,83,84,85,52,44,86,87,88,89,90,47,91,92,93,46,94,51,95,48,50,96,97,98,99,45,101,49,43,103,104,105,0,77,78,80,81,83,84,85,88,94,95,98,99,104,91,96,90,47,91,92,93,46,94,51,95,48,50,96,97,101,49,43,97,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,52,44,86,87,88,89,90,47,91,92,93,46,94,51,95,48,50,96,97,98,99,45,100,101,49,43,102,103,104,105,106,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,52,44,86,87,88,89,90,47,91,92,93,46,94,51,95,48,50,96,97,98,99,45,100,101,49,43,102,103,104,105,106,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,52,44,86,87,88,89,90,47,91,92,93,46,94,51,95,48,50,96,97,98,99,45,100,101,49,43,102,103,104,105,106,95,101,86,107,108,109,110],"f":[null,null,null,null,[[["str",0],["value",4]],["result",6,[["deserializeowned",8]]]],null,[[["config",3],["connection",3]],["result",6]],[[["config",3]],["servercapabilities",3]],[[],["versioninfo",3]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["verbosity",4]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],null,[[]],[[],["usize",0]],[[]],[[],["bool",0]],[[],["bool",0]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],null,null,null,null,[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["",0],["outputformat",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",6]],[[["str",0]],["result",4]],[[["vec",3,[["osstring",3]]]],["result",6]],null,[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",6]],[[],["result",6]],[[],["result",6]],[[["verbosity",4]],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[],["result",6]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0]],["verbosity",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[]],[[],["usize",0]],[[]],null,[[["projectworkspace",4],["loadcargoconfig",3]],["result",6]],[[["path",3],["cargoconfig",3],["loadcargoconfig",3],["fn",8]],["result",6]],null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["assistconfig",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["callinfoconfig",3]],[[["",0]],["clientcapabilities",3]],[[["",0]],["cargoconfig",3]],[[["",0]],["bool",0]],null,null,[[["",0]],["bool",0]],[[["",0]],["clientcommandsconfig",3]],[[["",0]],["config",3]],[[["",0]],["linkedproject",4]],[[["",0]],["lensconfig",3]],[[["",0]],["hoveractionsconfig",3]],[[["",0]],["filesconfig",3]],[[["",0]],["fileswatcher",4]],[[["",0]],["notificationsconfig",3]],[[["",0]],["rustfmtconfig",4]],[[["",0]],["runnablesconfig",3]],[[["",0]],["workspacesymbolconfig",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["completionconfig",3]],[[["",0]],["bool",0]],null,null,null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["",0]]],[[["",0]],["diagnosticsconfig",3]],[[["",0]],["diagnosticsmapconfig",3]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],null,null,[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["",0]],["fxhashmap",6]],null,[[["",0],["linkedproject",4]],["bool",0]],[[["",0],["lensconfig",3]],["bool",0]],[[["",0],["hoveractionsconfig",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],null,[[["",0]],["bool",0]],[[["",0]],["filesconfig",3]],[[["",0]],["option",4,[["flycheckconfig",4]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["projectmanifest",4]]],[[]],[[["projectjson",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["",0]],["bool",0]],[[["",0]],["highlightrelatedconfig",3]],[[["",0]],["bool",0]],[[["",0]],["hoverconfig",3]],[[["",0]],["hoveractionsconfig",3]],null,null,[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[["",0]],["inlayhintsconfig",3]],[[["",0]],["bool",0]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["joinlinesconfig",3]],[[],["value",4]],[[["",0]],["lensconfig",3]],[[["",0]],["bool",0]],[[["",0]],["vec",3,[["linkedproject",4]]]],[[["",0]],["bool",0]],[[["",0]],["option",4,[["usize",0]]]],null,[[["",0],["linkedproject",4]],["bool",0]],[[["",0],["lensconfig",3]],["bool",0]],[[["",0],["hoveractionsconfig",3]],["bool",0]],[[["abspathbuf",3],["clientcapabilities",3]]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["notificationsconfig",3]],[[["",0]],["offsetencoding",4]],null,null,[[["",0]],["bool",0]],[[["",0]],["u8",0]],[[["",0]],["option",4]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],null,null,null,[[["",0]],["abspathbuf",3]],null,null,[[["",0]],["bool",0]],null,[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["runnablesconfig",3]],[[["",0]],["rustfmtconfig",4]],null,null,null,[[["",0]],["bool",0]],[[["",0]],["bool",0]],null,[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["bool",0]],[[["",0],["value",4]],["result",4,[["configupdateerror",3]]]],null,[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["workspacesymbolconfig",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,null,null,null,[[["",0]],["serverstatusparams",3]],[[["",0]],["health",4]],[[["",0]],["codeaction",3]],[[["",0]],["codeactiondata",3]],[[["",0]],["snippetworkspaceedit",3]],[[["",0]],["snippetdocumentchangeoperation",4]],[[["",0]],["snippettextdocumentedit",3]],[[["",0]],["snippettextedit",3]],[[["",0]],["hoverparams",3]],[[["",0]],["positionorrange",4]],[[["",0]],["hover",3]],[[["",0]],["commandlinkgroup",3]],[[["",0]],["commandlink",3]],[[["",0]],["workspacesymbolparams",3]],[[["",0]],["workspacesymbolsearchscope",4]],[[["",0]],["workspacesymbolsearchkind",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,null,null,null,null,[[],["codeaction",3]],[[],["snippetworkspaceedit",3]],[[],["snippettextedit",3]],[[],["commandlinkgroup",3]],[[],["commandlink",3]],[[],["workspacesymbolparams",3]],[[],["clientcommandoptions",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],null,null,[[["",0],["serverstatusparams",3]],["bool",0]],[[["",0],["health",4]],["bool",0]],[[["",0],["codeaction",3]],["bool",0]],[[["",0],["codeactiondata",3]],["bool",0]],[[["",0],["snippetworkspaceedit",3]],["bool",0]],[[["",0],["snippetdocumentchangeoperation",4]],["bool",0]],[[["",0],["snippettextdocumentedit",3]],["bool",0]],[[["",0],["snippettextedit",3]],["bool",0]],[[["",0],["hoverparams",3]],["bool",0]],[[["",0],["positionorrange",4]],["bool",0]],[[["",0],["hover",3]],["bool",0]],[[["",0],["commandlinkgroup",3]],["bool",0]],[[["",0],["commandlink",3]],["bool",0]],[[["",0],["workspacesymbolparams",3]],["bool",0]],[[["",0],["workspacesymbolsearchscope",4]],["bool",0]],[[["",0],["workspacesymbolsearchkind",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],null,null,null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[["",0],["serverstatusparams",3]],["bool",0]],[[["",0],["codeaction",3]],["bool",0]],[[["",0],["codeactiondata",3]],["bool",0]],[[["",0],["snippetworkspaceedit",3]],["bool",0]],[[["",0],["snippetdocumentchangeoperation",4]],["bool",0]],[[["",0],["snippettextdocumentedit",3]],["bool",0]],[[["",0],["snippettextedit",3]],["bool",0]],[[["",0],["hoverparams",3]],["bool",0]],[[["",0],["positionorrange",4]],["bool",0]],[[["",0],["hover",3]],["bool",0]],[[["",0],["commandlinkgroup",3]],["bool",0]],[[["",0],["commandlink",3]],["bool",0]],[[["",0],["workspacesymbolparams",3]],["bool",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[["clientcapabilities",3]],["bool",0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null],"p":[[4,"Verbosity"],[4,"RustAnalyzerCmd"],[4,"OutputFormat"],[3,"RustAnalyzer"],[3,"LspServer"],[3,"Parse"],[3,"Symbols"],[3,"Highlight"],[3,"AnalysisStats"],[3,"Diagnostics"],[3,"Ssr"],[3,"Search"],[3,"ProcMacro"],[3,"Lsif"],[13,"LspServer"],[13,"Parse"],[13,"Symbols"],[13,"Highlight"],[13,"AnalysisStats"],[13,"Diagnostics"],[13,"Ssr"],[13,"Search"],[13,"ProcMacro"],[13,"Lsif"],[3,"LoadCargoConfig"],[4,"FilesWatcher"],[4,"RustfmtConfig"],[4,"LinkedProject"],[3,"HoverActionsConfig"],[3,"LensConfig"],[3,"Config"],[3,"CallInfoConfig"],[3,"ClientCommandsConfig"],[3,"FilesConfig"],[3,"NotificationsConfig"],[3,"RunnablesConfig"],[3,"WorkspaceSymbolConfig"],[3,"ConfigUpdateError"],[13,"ProjectManifest"],[13,"InlineJsonProject"],[13,"CustomCommand"],[13,"Rustfmt"],[4,"WorkspaceSymbolSearchKind"],[4,"RunnableKind"],[4,"MoveItemDirection"],[4,"SnippetDocumentChangeOperation"],[4,"Health"],[4,"PositionOrRange"],[4,"WorkspaceSymbolSearchScope"],[3,"Hover"],[3,"SnippetTextEdit"],[3,"Runnable"],[4,"AnalyzerStatus"],[4,"MemoryUsage"],[4,"ShuffleCrateGraph"],[4,"ReloadWorkspace"],[4,"SyntaxTree"],[4,"ViewHir"],[4,"ViewFileText"],[4,"ViewCrateGraph"],[4,"ViewItemTree"],[4,"ExpandMacro"],[4,"MatchingBrace"],[4,"ParentModule"],[4,"JoinLines"],[4,"OnEnter"],[4,"Runnables"],[4,"RelatedTests"],[4,"Ssr"],[4,"ServerStatusNotification"],[4,"CodeActionRequest"],[4,"CodeActionResolveRequest"],[4,"HoverRequest"],[4,"ExternalDocs"],[4,"OpenCargoToml"],[4,"MoveItem"],[3,"AnalyzerStatusParams"],[3,"SyntaxTreeParams"],[3,"ViewCrateGraphParams"],[3,"ViewItemTreeParams"],[3,"ExpandMacroParams"],[3,"ExpandedMacro"],[3,"MatchingBraceParams"],[3,"JoinLinesParams"],[3,"RunnablesParams"],[3,"CargoRunnable"],[3,"TestInfo"],[3,"InlayHintsParams"],[3,"SsrParams"],[3,"ServerStatusParams"],[3,"CodeAction"],[3,"CodeActionData"],[3,"SnippetWorkspaceEdit"],[3,"SnippetTextDocumentEdit"],[3,"HoverParams"],[3,"CommandLinkGroup"],[3,"CommandLink"],[3,"OpenCargoTomlParams"],[3,"MoveItemParams"],[4,"WorkspaceSymbol"],[3,"WorkspaceSymbolParams"],[4,"OnTypeFormatting"],[3,"CompletionResolveData"],[3,"InlayHintResolveData"],[3,"CompletionImport"],[3,"ClientCommandOptions"],[13,"Position"],[13,"Range"],[13,"Op"],[13,"Edit"]]},\
"sourcegen":{"doc":"rust-analyzer relies heavily on source code generation.","t":[3,3,5,11,11,11,11,11,11,12,5,11,11,12,11,11,11,11,12,11,11,12,12,5,5,5,5,11,11,11,11,11,11,11,11],"n":["CommentBlock","Location","add_preamble","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","contents","ensure_file_contents","extract","extract_untagged","file","fmt","fmt","from","from","id","into","into","line","line","list_files","list_rust_files","project_root","reformat","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["sourcegen","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","Checks that the <code>file</code> has the specified <code>contents</code>. If that …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","",""],"i":[0,0,0,1,2,1,2,1,1,1,0,1,1,2,2,2,1,2,1,1,2,1,2,0,0,0,0,1,2,1,2,1,2,1,2],"f":[null,null,[[["str",0],["string",3]],["string",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["commentblock",3]],[[["",0],["",0]]],null,[[["path",3],["str",0]]],[[["str",0],["str",0]],["vec",3,[["commentblock",3]]]],[[["str",0]],["vec",3,[["commentblock",3]]]],null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],null,[[]],[[]],null,null,[[["path",3]],["vec",3,[["pathbuf",3]]]],[[["path",3]],["vec",3,[["pathbuf",3]]]],[[],["pathbuf",3]],[[["string",3]],["string",3]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]]],"p":[[3,"CommentBlock"],[3,"Location"]]},\
"stdx":{"doc":"Missing batteries for standard libraries.","t":[12,3,14,11,11,5,11,11,11,14,5,11,14,11,14,11,11,5,5,14,0,0,5,0,5,5,11,5,5,5,5,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,5,11,11,11,11,11,5,5],"n":["0","JodChild","always","borrow","borrow_mut","defer","deref","deref_mut","drop","eprintln","equal_range_by","fmt","format_to","from","impl_from","into","into_inner","is_ci","iter_eq_by","never","non_empty_vec","panic_context","print_backtrace","process","replace","slice_tails","spawn","timeit","to_lower_snake_case","to_upper_snake_case","trim_indent","try_from","try_into","type_id","NonEmptyVec","borrow","borrow_mut","from","into","into_last","last_mut","len","new","pop","push","try_from","try_into","type_id","PanicContext","borrow","borrow_mut","drop","enter","from","into","try_from","try_into","type_id","spawn_with_streaming_output","streaming_output"],"q":["stdx","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","stdx::non_empty_vec","","","","","","","","","","","","","","stdx::panic_context","","","","","","","","","","stdx::process",""],"d":["","A <code>std::process::Child</code> wrapper that will kill the child on …","Asserts that the condition is always true and returns its …","","","","","","","","","","Appends formatted string to a <code>String</code>.","Returns the argument unchanged.","Generates <code>From</code> impls for <code>Enum E { Foo(Foo), Bar(Bar) }</code> …","Calls <code>U::from(self)</code>.","","","","Asserts that the condition is never true and returns its …","See <code>NonEmptyVec</code>.","A micro-crate to enhance panic messages with context info.","Prints backtrace to stderr, useful for debugging.","Read both stdout and stderr of child without deadlocks.","","Returns all final segments of the argument, longest first.","","","","","","","","","A <code>Vec</code> that is guaranteed to at least contain one element.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","",""],"i":[1,0,0,1,1,0,1,1,1,0,0,1,0,1,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,1,0,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,3,3,0,3,3,3,3,3,0,0],"f":[null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["fnonce",8]]],[[["",0]],["child",3]],[[["",0]],["child",3]],[[["",0]]],null,[[],["range",3,[["usize",0]]]],[[["",0],["formatter",3]],["result",6]],null,[[]],null,[[]],[[],["child",3]],[[],["bool",0]],[[],["bool",0]],null,null,null,[[]],null,[[["string",3],["char",0],["str",0]]],[[]],[[["command",3]],["result",6]],[[["str",0]]],[[["str",0]],["string",3]],[[["str",0]],["string",3]],[[["str",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[["",0]],["",0]],[[["",0]],["usize",0]],[[]],[[["",0]],["option",4]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["string",3]],["paniccontext",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["command",3],["fnmut",8],["fnmut",8]],["result",6,[["output",3]]]],[[["childstdout",3],["childstderr",3],["fnmut",8],["fnmut",8]],["result",6]]],"p":[[3,"JodChild"],[3,"NonEmptyVec"],[3,"PanicContext"]]},\
"syntax":{"doc":"Syntax Tree library used throughout the rust analyzer.","tn":["ABI","AMP","AMP2","AMPEQ","ARG_LIST","ARRAY_EXPR","ARRAY_TYPE","ASSOC_ITEM_LIST","ASSOC_TYPE_ARG","ASYNC_KW","AS_KW","AT","ATTR","AUTO_KW","AWAIT_EXPR","AWAIT_KW","AstNode","AstPtr","AstToken","BANG","BIN_EXPR","BLOCK_EXPR","BOX_EXPR","BOX_KW","BOX_PAT","BREAK_EXPR","BREAK_KW","BYTE","BYTE_STRING","Between","CALL_EXPR","CARET","CARETEQ","CAST_EXPR","CHAR","CLOSURE_EXPR","COLON","COLON2","COMMA","COMMENT","CONST","CONST_ARG","CONST_BLOCK_PAT","CONST_KW","CONST_PARAM","CONTINUE_EXPR","CONTINUE_KW","CRATE_KW","DEFAULT_KW","DOLLAR","DOT","DOT2","DOT2EQ","DOT3","DYN_KW","DYN_TRAIT_TYPE","Direction","ELSE_KW","ENUM","ENUM_KW","EQ","EQ2","ERROR","EXISTENTIAL_KW","EXPR_STMT","EXTERN_BLOCK","EXTERN_CRATE","EXTERN_ITEM_LIST","EXTERN_KW","Enter","FALSE_KW","FAT_ARROW","FIELD_EXPR","FLOAT_NUMBER","FN","FN_KW","FN_PTR_TYPE","FOR_EXPR","FOR_KW","FOR_TYPE","GENERIC_ARG_LIST","GENERIC_PARAM","GENERIC_PARAM_LIST","GTEQ","GreenNode","IDENT","IDENT_PAT","IF_EXPR","IF_KW","IMPL","IMPL_KW","IMPL_TRAIT_TYPE","INDEX_EXPR","INFER_TYPE","INT_NUMBER","IN_KW","ITEM_LIST","LABEL","LET_ELSE","LET_EXPR","LET_KW","LET_STMT","LIFETIME","LIFETIME_ARG","LIFETIME_IDENT","LIFETIME_PARAM","LITERAL","LITERAL_PAT","LOOP_EXPR","LOOP_KW","LTEQ","L_ANGLE","L_BRACK","L_CURLY","L_PAREN","Leave","MACRO_ARM","MACRO_CALL","MACRO_DEF","MACRO_EXPR","MACRO_ITEMS","MACRO_KW","MACRO_PAT","MACRO_RULES","MACRO_RULES_KW","MACRO_STMTS","MACRO_TYPE","MATCH_ARM","MATCH_ARM_LIST","MATCH_EXPR","MATCH_GUARD","MATCH_KW","META","METHOD_CALL_EXPR","MINUS","MINUSEQ","MODULE","MOD_KW","MOVE_KW","MUT_KW","NAME","NAME_REF","NEQ","NEVER_TYPE","Next","Node","NodeOrToken","None","OR_PAT","PARAM","PARAM_LIST","PAREN_EXPR","PAREN_PAT","PAREN_TYPE","PATH","PATH_EXPR","PATH_PAT","PATH_SEGMENT","PATH_TYPE","PERCENT","PERCENTEQ","PIPE","PIPE2","PIPEEQ","PLUS","PLUSEQ","POUND","PREFIX_EXPR","PTR_TYPE","PUB_KW","Parse","Preorder","PreorderWithTokens","Prev","QUESTION","RANGE_EXPR","RANGE_PAT","RAW_KW","RECORD_EXPR","RECORD_EXPR_FIELD","RECORD_EXPR_FIELD_LIST","RECORD_FIELD","RECORD_FIELD_LIST","RECORD_PAT","RECORD_PAT_FIELD","RECORD_PAT_FIELD_LIST","REF_EXPR","REF_KW","REF_PAT","REF_TYPE","RENAME","REST_PAT","RETURN_EXPR","RETURN_KW","RET_TYPE","R_ANGLE","R_BRACK","R_CURLY","R_PAREN","RustLanguage","SELF_KW","SELF_PARAM","SELF_TYPE_KW","SEMICOLON","SHEBANG","SHL","SHLEQ","SHR","SHREQ","SLASH","SLASHEQ","SLICE_PAT","SLICE_TYPE","SOURCE_FILE","STAR","STAREQ","STATIC","STATIC_KW","STMT_LIST","STRING","STRUCT","STRUCT_KW","SUPER_KW","Single","SmolStr","SourceFile","SyntaxElement","SyntaxElementChildren","SyntaxError","SyntaxKind","SyntaxNode","SyntaxNodeChildren","SyntaxNodePtr","SyntaxText","SyntaxToken","SyntaxTreeBuilder","T","THIN_ARROW","TILDE","TOKEN_TREE","TRAIT","TRAIT_KW","TRUE_KW","TRY_EXPR","TRY_KW","TUPLE_EXPR","TUPLE_FIELD","TUPLE_FIELD_LIST","TUPLE_PAT","TUPLE_STRUCT_PAT","TUPLE_TYPE","TYPE_ALIAS","TYPE_ARG","TYPE_BOUND","TYPE_BOUND_LIST","TYPE_KW","TYPE_PARAM","TextRange","TextSize","Token","TokenAtOffset","TokenText","UNDERSCORE","UNDERSCORE_EXPR","UNION","UNION_KW","UNSAFE_KW","USE","USE_KW","USE_TREE","USE_TREE_LIST","VARIANT","VARIANT_LIST","VISIBILITY","WHERE_CLAUSE","WHERE_KW","WHERE_PRED","WHILE_EXPR","WHILE_KW","WHITESPACE","WILDCARD_PAT","WalkEvent","YIELD_EXPR","YIELD_KW","add","add","add","add","add_assign","add_assign","add_assign","algo","ancestors","ancestors","as_node","as_ref","as_str","as_str","as_token","ast","at","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","cast","char_at","checked_add","checked_add","checked_sub","checked_sub","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","contains","contains_char","contains_inclusive","contains_range","cover","cover_offset","debug_dump","default","default","default","default","deref","deref","deref","deserialize","detach","detach","empty","end","end_bound","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","errors","find_char","finish","finish_node","first_token","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each_chunk","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_char","from_contextual_keyword","from_iter","from_iter","from_iter","from_iter","from_keyword","from_str","hacks","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","index","index","intersect","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_node","into_token","is_empty","is_empty","is_empty","is_heap_allocated","is_keyword","is_literal","is_punct","is_trivia","kind","kind","kind","kind","kind_from_raw","kind_to_raw","last_token","left_biased","len","len","len","map","map","match_ast","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","multiunzip","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new_at_offset","new_inline","new_inline_from_ascii","next","next","next_sibling_or_token","next_sibling_or_token","of","ok","ordering","parent","parent","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","prev_sibling_or_token","prev_sibling_or_token","range","reparse","right_biased","serialize","size_hint","skip_subtree","slice","start","start_bound","start_node","sub","sub","sub","sub","sub_assign","sub_assign","sum","syntax_element","syntax_element","syntax_element","syntax_node","syntax_node_ptr","ted","text_len","text_len","text_range","text_range","text_range","to_node","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_syntax","token","tree","try_fold_chunks","try_for_each_chunk","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_raw","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","up_to","upcast","utils","with_range","0","0","0","0","1","0","0","TreeDiff","ancestors_at_offset","borrow","borrow_mut","diff","find_node_at_offset","find_node_at_range","fmt","from","has_errors","into","into_text_edit","is_empty","least_common_ancestor","neighbor","non_trivia_sibling","skip_trivia_token","skip_whitespace_token","try_from","try_into","type_id","ALL","Abi","Add","Adt","And","AnyHasArgList","AnyHasAttrs","AnyHasDocComments","AnyHasGenericParams","AnyHasLoopBody","AnyHasModuleItem","AnyHasName","AnyHasTypeBounds","AnyHasVisibility","ArgList","ArithOp","ArithOp","ArrayExpr","ArrayExpr","ArrayExprKind","ArrayType","ArrayType","Assignment","AssocItem","AssocItemList","AssocTypeArg","AssocTypeArg","AstChildren","AstNode","AstToken","Async","Attr","AttrDocCommentIter","AttrKind","AwaitExpr","AwaitExpr","BinExpr","BinExpr","Binary","BinaryOp","BitAnd","BitOr","BitXor","Block","Block","BlockExpr","BlockExpr","BlockModifier","Bool","BoxExpr","BoxExpr","BoxPat","BoxPat","BreakExpr","BreakExpr","Byte","Byte","ByteString","ByteString","Call","CallExpr","CallExpr","CallableExpr","CastExpr","CastExpr","Char","Char","ClosureExpr","ClosureExpr","CmpOp","CmpOp","Comment","CommentKind","CommentPlacement","CommentShape","Const","Const","Const","Const","Const","ConstArg","ConstArg","ConstBlockPat","ConstBlockPat","ConstParam","ConstParam","ContinueExpr","ContinueExpr","CrateKw","Decimal","Deref","Div","DocCommentIter","DynTraitType","DynTraitType","ElementList","ElseBranch","Enum","Enum","Enum","Eq","Exclusive","Expr","ExprStmt","ExprStmt","ExternBlock","ExternBlock","ExternCrate","ExternCrate","ExternItem","ExternItemList","FieldExpr","FieldExpr","FieldKind","FieldList","FloatNumber","FloatNumber","Fn","Fn","Fn","Fn","FnPtrType","FnPtrType","ForExpr","ForExpr","ForType","ForType","ForType","GenericArg","GenericArgList","GenericParam","GenericParamList","Greater","HasArgList","HasAttrs","HasDocComments","HasGenericParams","HasLoopBody","HasModuleItem","HasName","HasTypeBounds","HasVisibility","Hexadecimal","Ident","IdentPat","IdentPat","IfExpr","IfExpr","IfExpr","Impl","Impl","ImplTraitType","ImplTraitType","In","Inclusive","Index","IndexExpr","IndexExpr","InferType","InferType","Inner","Inner","IntNumber","IntNumber","IsString","Item","Item","ItemList","Label","Label","Less","LetElse","LetExpr","LetExpr","LetStmt","LetStmt","Lifetime","Lifetime","Lifetime","LifetimeArg","LifetimeArg","LifetimeParam","LifetimeParam","Line","Literal","Literal","LiteralKind","LiteralPat","LiteralPat","LogicOp","LogicOp","LoopExpr","LoopExpr","Macro","MacroCall","MacroCall","MacroCall","MacroCall","MacroDef","MacroDef","MacroDef","MacroExpr","MacroExpr","MacroItems","MacroPat","MacroPat","MacroRules","MacroRules","MacroRules","MacroStmts","MacroStmts","MacroType","MacroType","MatchArm","MatchArmList","MatchExpr","MatchExpr","MatchGuard","Meta","MethodCall","MethodCallExpr","MethodCallExpr","Module","Module","Mul","MutRef","Name","Name","Name","Name","Name","NameLike","NameOrNameRef","NameRef","NameRef","NameRef","Neg","NeverType","NeverType","Not","Octal","Or","OrPat","OrPat","Ord","Ordering","Outer","Outer","Owned","Param","ParamList","ParenExpr","ParenExpr","ParenPat","ParenPat","ParenType","ParenType","Pat","Path","PathExpr","PathExpr","PathPat","PathPat","PathSegment","PathSegmentKind","PathType","PathType","PathType","PrefixExpr","PrefixExpr","PtrType","PtrType","Pub","PubCrate","PubSelf","PubSuper","QuoteOffsets","Radix","RangeExpr","RangeExpr","RangeOp","RangePat","RangePat","Record","RecordExpr","RecordExpr","RecordExprField","RecordExprFieldList","RecordField","RecordFieldList","RecordFieldList","RecordPat","RecordPat","RecordPatField","RecordPatFieldList","Ref","RefExpr","RefExpr","RefPat","RefPat","RefType","RefType","Rem","Rename","Repeat","RestPat","RestPat","RetType","ReturnExpr","ReturnExpr","SelfKw","SelfParam","SelfParamKind","SelfTypeKw","Self_token","Shl","Shr","SlicePat","SlicePat","SlicePatComponents","SliceType","SliceType","SourceFile","Static","Static","Static","Stmt","StmtList","String","String","Struct","Struct","Struct","StructKind","Sub","SuperKw","TokenTree","Trait","Trait","Try","TryExpr","TryExpr","Tuple","TupleExpr","TupleExpr","TupleField","TupleFieldList","TupleFieldList","TuplePat","TuplePat","TupleStructPat","TupleStructPat","TupleType","TupleType","Type","Type","Type","TypeAlias","TypeAlias","TypeAlias","TypeAlias","TypeArg","TypeArg","TypeBound","TypeBoundKind","TypeBoundList","TypeOrConstParam","TypeParam","TypeParam","UnaryOp","UnderscoreExpr","UnderscoreExpr","Union","Union","Union","Unit","Unsafe","Use","Use","UseTree","UseTreeList","Variant","VariantList","Visibility","VisibilityKind","WhereClause","WherePred","WhileExpr","WhileExpr","Whitespace","WildcardPat","WildcardPat","YieldExpr","YieldExpr","abi","abi","abi","add_arm","add_field","add_field","add_generic_param","add_item","add_predicate","add_use_tree","amp_token","amp_token","amp_token","amp_token","arg_list","arg_list","args","args","arms","as_lifetime","as_name_ref","as_simple_atom","as_simple_call","as_single_name_ref","as_single_segment","as_token","as_token","as_token","as_tuple_field","assoc_item_list","assoc_item_list","assoc_items","async_token","async_token","async_token","async_token","at_token","attrs","attrs","auto_token","await_token","base","block_expr","block_expr","body","body","body","body","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","box_token","box_token","break_token","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","can_cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_for_update","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_subtree","close_quote_text_range","close_quote_text_range","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","colon_token","coloncolon_token","coloncolon_token","coloncolon_token","coloncolon_token","comma_token","comma_token","components","condition","condition","condition","const_arg","const_token","const_token","const_token","const_token","const_token","const_token","const_token","const_token","const_token","const_token","contents","continue_token","crate_token","crate_token","crate_token","default_token","default_token","default_token","default_token","default_type","default_val","doc","doc_comment","doc_comments","doc_comments","doc_comments_and_attrs","doc_comments_and_attrs","dot_token","dot_token","dot_token","dotdot_token","dotdot_token","dotdotdot_token","dyn_token","edit","edit_in_place","else_branch","else_token","else_token","end","end","enum_token","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","eq_token","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","escaped_char_ranges","escaped_char_ranges","excl_token","excl_token","excl_token","excl_token","excl_token","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","expr","exprs","extern_item_list","extern_items","extern_token","extern_token","fat_arrow_token","field_access","field_list","field_list","field_name","field_name","fields","fields","fields","fields","fields","fields","fields","fields","first_qualifier_or_self","first_segment","float_value","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_token","fn_token","for_field_name","for_field_name","for_field_name_ref","for_name_ref","for_token","for_token","for_token","for_token","for_token","for_trait_name_ref","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_syntax_node","from_syntax_node","generic_arg_list","generic_arg_list","generic_args","generic_param_list","generic_param_list","generic_param_list","generic_param_list","generic_param_list","generic_param_list","generic_param_list","generic_params","get_or_create_assoc_item_list","get_or_create_body","get_or_create_generic_arg_list","get_or_create_generic_param_list","get_or_create_generic_param_list","get_or_create_generic_param_list","get_or_create_generic_param_list","get_or_create_generic_param_list","get_or_create_use_tree_list","get_or_create_where_clause","get_or_create_where_clause","get_or_create_where_clause","get_or_create_where_clause","get_or_create_where_clause","guard","has_atom_attr","has_atom_attr","has_inner_comment","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","ident_token","ident_token","if_token","if_token","impl_token","impl_token","in_token","in_token","index","index_token","initializer","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_block","is_block_like","is_doc","is_inner","is_inner","is_line","is_outer","is_outer","is_raw","is_raw","is_simple_glob","is_simple_ident","is_simple_path","is_standalone","item_list","items","items","iterable","kind","kind","kind","kind","kind","kind","kind","kind","kind","kind","l_angle_token","l_angle_token","l_angle_token","l_brack_token","l_brack_token","l_brack_token","l_brack_token","l_brack_token","l_brack_token","l_brack_token","l_curly_token","l_curly_token","l_curly_token","l_curly_token","l_curly_token","l_curly_token","l_curly_token","l_curly_token","l_curly_token","l_curly_token","l_curly_token","l_paren_token","l_paren_token","l_paren_token","l_paren_token","l_paren_token","l_paren_token","l_paren_token","l_paren_token","l_paren_token","l_paren_token","l_paren_token","l_paren_token","label","label","label","left_delimiter_token","let_else","let_token","let_token","lhs","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime","lifetime_args","lifetime_bounds","lifetime_ident_token","lifetime_params","literal","loop_body","loop_body","loop_body","loop_body","loop_token","macro_call","macro_call","macro_call","macro_rules_token","macro_token","make","map_range_up","match_arm_list","match_token","meta","mod_token","modifier","move_token","mut_token","mut_token","mut_token","mut_token","mut_token","mut_token","mut_token","name","name","name","name","name_ref","name_ref","name_ref","name_ref","name_ref","name_ref","name_ref","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","new","new","new","next","next","next","op_details","op_kind","op_kind","op_kind","op_token","op_token","op_token","open_quote_text_range","open_quote_text_range","param_list","param_list","param_list","param_list","params","parent","parent_attr","parent_enum","parent_meta","parent_path","parent_path","parent_record_lit","parent_record_pat","parent_use_tree","parse","pat","pat","pat","pat","pat","pat","pat","pat","pat","pat","path","path","path","path","path","path","path","path","path","path","path","path_type","pats","pats","pipe_token","pound_token","predicates","prefix","prefix","prefix","pub_token","push_front","qualifier","qualifiers","question_mark_token","question_mark_token","quote_offsets","quote_offsets","quotes","r_angle_token","r_angle_token","r_angle_token","r_brack_token","r_brack_token","r_brack_token","r_brack_token","r_brack_token","r_brack_token","r_brack_token","r_curly_token","r_curly_token","r_curly_token","r_curly_token","r_curly_token","r_curly_token","r_curly_token","r_curly_token","r_curly_token","r_curly_token","r_curly_token","r_paren_token","r_paren_token","r_paren_token","r_paren_token","r_paren_token","r_paren_token","r_paren_token","r_paren_token","r_paren_token","r_paren_token","r_paren_token","r_paren_token","radix","raw_token","receiver","record_expr_field_list","record_field_list","record_pat_field_list","ref_token","remove","remove","remove","remove","rename","rename","replace_expr","rest_pat","ret_type","ret_type","ret_type","ret_type","return_token","rhs","right_delimiter_token","segment","segments","self_param","self_token","self_token","self_token","self_ty","self_type_token","semicolon_token","semicolon_token","semicolon_token","semicolon_token","semicolon_token","semicolon_token","semicolon_token","semicolon_token","semicolon_token","semicolon_token","semicolon_token","semicolon_token","semicolon_token","shape","shebang_token","simple_name","slice","spans_multiple_lines","split_into_parts","split_into_parts","split_prefix","spread","star_token","star_token","start","start","statements","statements","statements","static_token","static_token","stmt_list","struct_token","sub_exprs","suffix","suffix","suffix","super_token","super_token","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","tail_expr","tail_expr","text","text","text","text","text","text","text_range_between_quotes","text_range_between_quotes","then_branch","thin_arrow_token","tilde_token","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","token","token_kind","token_tree","token_tree","token_tree","token_tree","token_trees_and_tokens","top_path","trait_","trait_token","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_token","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","ty","type_bound_list","type_bound_list","type_bound_list","type_bound_list","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_or_const_params","type_token","underscore_token","underscore_token","underscore_token","underscore_token","underscore_token","union_token","unsafe_token","unsafe_token","unsafe_token","unsafe_token","unsafe_token","unsafe_token","use_token","use_tree","use_tree_list","use_trees","value","value","value","value","value","value","variant_list","variants","visibility","visibility","where_clause","where_clause","where_token","while_token","yield_token","0","0","0","0","initializer","repeat","0","0","0","0","0","0","0","op","0","0","0","0","0","0","0","negated","ordering","strict","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","trait_ref","type_ref","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","AstNodeEdit","IndentLevel","add","borrow","borrow_mut","clone","clone_into","dedent","fmt","fmt","from","from","from_element","from_node","from_token","indent","indent_level","into","is_zero","reset_indent","single","to_owned","to_string","try_from","try_into","type_id","AttrsOwnerEdit","GenericParamsOwnerEdit","Indent","dedent","get_or_create_generic_param_list","get_or_create_where_clause","indent","indent_level","reindent_to","remove_attrs_and_docs","arg_list","assoc_item_list","block_expr","expr_assignment","expr_await","expr_bin_op","expr_break","expr_call","expr_closure","expr_continue","expr_empty_block","expr_field","expr_for_loop","expr_if","expr_let","expr_literal","expr_loop","expr_macro_call","expr_match","expr_method_call","expr_paren","expr_path","expr_prefix","expr_ref","expr_return","expr_stmt","expr_try","expr_tuple","expr_unit","ext","fn_","generic_param_list","hacky_block_expr_with_comments","ident_pat","impl_","impl_trait","item_const","join_paths","let_stmt","lifetime","lifetime_param","literal_pat","match_arm","match_arm_list","match_arm_with_guard","name","name_ref","param","param_list","path_concat","path_from_segments","path_from_text","path_pat","path_qualified","path_segment","path_segment_crate","path_segment_self","path_segment_super","path_segment_ty","path_unqualified","record_expr","record_expr_field","record_expr_field_list","record_field","record_field_list","record_pat","record_pat_field","record_pat_field_list","record_pat_field_shorthand","record_pat_with_fields","ret_type","self_param","struct_","token","tokens","tuple_field","tuple_field_list","tuple_pat","tuple_struct_pat","ty","ty_path","ty_placeholder","ty_ref","ty_tuple","ty_unit","type_param","use_","use_tree","use_tree_glob","use_tree_list","variant","visibility_pub","visibility_pub_crate","where_clause","where_pred","wildcard_pat","default_bool","empty_block_expr","empty_char","empty_str","expr_todo","expr_ty_default","expr_ty_new","expr_unreachable","field_from_idents","ident_path","option_none","path_from_idents","simple_ident_pat","ty_bool","ty_option","ty_result","zero_float","zero_number","WsBuilder","blank_line","borrow","borrow_mut","doc_comment","from","into","literal","new","single_newline","single_space","try_from","try_into","type_id","whitespace","ws","parse_expr_from_str","Element","Position","after","append_child","append_child_raw","before","borrow","borrow_mut","first_child_of","fmt","from","insert","insert_all","insert_all_raw","insert_raw","into","last_child_of","remove","remove_all","remove_all_iter","replace","replace_all","replace_with_many","syntax_element","try_from","try_into","type_id","path_to_string_stripping_turbo_fish"],"q":["syntaxsyntax::NodeOrToken","","syntax::TokenAtOffset","","","syntax::WalkEvent","","syntax::algo","","","","","","","","","","","","","","","","","","","","","syntax::astsyntax::ast::Adt","","","syntax::ast::ArrayExprKind","","","syntax::ast::AssocItem","","","","syntax::ast::BinaryOp","","","","syntax::ast::BlockModifier","","","","","syntax::ast::CallableExpr","","syntax::ast::CmpOp","","","syntax::ast::ElseBranch","","syntax::ast::Expr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syntax::ast::ExternItem","","","","syntax::ast::FieldKind","","syntax::ast::FieldList","","syntax::ast::GenericArg","","","","syntax::ast::GenericParam","","","syntax::ast::Item","","","","","","","","","","","","","","","","syntax::ast::LiteralKind","","","","","","","syntax::ast::Macro","","syntax::ast::NameLike","","","syntax::ast::NameOrNameRef","","syntax::ast::Pat","","","","","","","","","","","","","","","","syntax::ast::PathSegmentKind","","","syntax::ast::Stmt","","","syntax::ast::StructKind","","syntax::ast::Type","","","","","","","","","","","","","","syntax::ast::TypeBoundKind","","","syntax::ast::TypeOrConstParam","","syntax::ast::VisibilityKind","syntax::ast::edit","","","","","","","","","","","","","","","","","","","","","","","","","","","syntax::ast::edit_in_place","","","","","","","","","","syntax::ast::make","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","syntax::ast::make::ext","","","","","","","","","","","","","","","","","","syntax::ast::make::tokens","","","","","","","","","","","","","","","","syntax::hacks","syntax::ted","","","","","","","","","","","","","","","","","","","","","","","","","","","syntax::utils"],"d":["","","","","","","","","","","","","","","","","","Like <code>SyntaxNodePtr</code>, but remembers the type of node.","","","","","","","","","","","","Offset is exactly between two leaves.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fired before traversing the node.","","","","","","","","","","","","","","","Internal node in the immutable tree. It has other nodes …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fired after the node is traversed.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","No leaves at offset – possible for the empty file.","","","","","","","","","","","","","","","","","","","","","","","<code>Parse</code> is the result of the parsing: a syntax tree and a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Only a single leaf at offset.","A <code>SmolStr</code> is a string type that has the following …","","","","Represents the result of unsuccessful tokenization, parsing","The kind of syntax node, e.g. <code>IDENT</code>, <code>USE_KW</code>, or <code>STRUCT</code>.","","","A “pointer” to a <code>SyntaxNode</code>, via location in the …","","","","","","","","","","","","","","","","","","","","","","","","","A range in text, represented as a pair of <code>TextSize</code>.","A measure of text length. Also, equivalently, an index …","","There might be zero, one or two leaves at a given offset.","","","","","","","","","","","","","","","","","","","","","<code>WalkEvent</code> describes tree walking process.","","","","","","","","","","Collection of assorted algorithms for syntax trees.","","","","","","","","Abstract Syntax Tree, layered on top of untyped <code>SyntaxNode</code>s","Create a new <code>TextRange</code> with the given <code>offset</code> and <code>len</code> (…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add an offset to this range.","Checked addition. Returns <code>None</code> if overflow occurred.","Subtract an offset from this range.","Checked subtraction. Returns <code>None</code> if overflow occurred.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check if this range contains an offset.","","Check if this range contains an offset.","Check if this range completely contains another range.","Extends the range to cover <code>other</code> as well.","Extends the range to cover <code>other</code> offsets as well.","","","","","","","","","","","","Create a zero-length range at the specified offset (…","The end point of this range.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Things which exist to solve practial issues, but which …","","","","","","","","","","","","","The range covered by both ranges, if it exists. If the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Check if this range is empty.","","","","","","","","","Returns kind of this element.","Returns kind of this element.","","","","","Convert to option, preferring the left leaf in case of a …","The size of this range.","","","","","Matches a <code>SyntaxNode</code> against an <code>ast</code> type.","","","","","","","","","","","","","","","","","","","","Creates a new <code>TextRange</code> with the given <code>start</code> and <code>end</code> (…","","Creates new Node.","","","","Constructs inline variant of <code>SmolStr</code>.","","","","","","The text size of some primitive text-like object.","","Relative order of the two ranges (overlapping ranges are …","","","","","","","","","","","","","","Convert to option, preferring the right leaf in case of a …","","","","","The start point of this range.","","","","","","","","","","","","","","","Primitive tree editor, ed for trees.","Returns the length of the text covered by this element.","Returns the length of the text covered by this element.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Like <code>SyntaxNodePtr::cast</code> but the trait bounds work out.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a range up to the given end (<code>..end</code>).","","A set of utils methods to reuse on other abstraction levels","","","","","","","","","","Returns ancestors of the node at the offset, sorted by …","","","Finds a (potentially minimal) diff, which, applied to <code>from</code>…","Finds a node of specific Ast type at offset. Note that …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","Finds the first sibling in the given direction which is …","Skip to next non <code>trivia</code> token","Skip to next non <code>whitespace</code> token","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator over <code>SyntaxNode</code> children of a particular AST …","The main trait to go from untyped <code>SyntaxNode</code>  to a typed …","Like <code>AstNode</code>, but wraps tokens rather than interior nodes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>*</code>","","","","","","","","","","","<code>..</code>","","","","","","","","","","","","","","","","","","","","","","","","","","for&lt;’a&gt; …","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>..=</code>","","","","","","","","","","","","","","","","","","","","","","","","’a","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","&amp;mut self","","","","","","","","","","","<code>-</code>","","","<code>!</code>","","","","","","","","","self","","","","","","","","","","","","","","","","","","","Trait","","","","","","","","","","","","","","","","","","","","","","","","","","","","&amp;self","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the textual content of a doc comment node as a …","","","","","","","","","","","","This module contains functions for editing syntax trees. …","Structural editing for asteals with field init shorthand","Deals with field init shorthandeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchangedalls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Returns <code>true</code> if the attr_kind is <code>Inner</code>.","","","Returns <code>true</code> if the attr_kind is <code>Outer</code>.","","","","","","false if the block is an intrinsic part of the syntax and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This module contains free-standing functions for creating …eturns the parent ast::Module, this is different than the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This will either replace the initializer, or in the case …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Splits off the given prefix, making it the path component …oft-deprecated in favor of mutable tree editing API …","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","While the parent module defines basic atomic “…","","","Ideally this function wouldn’t exist since it involves …","","","","","","","","","","","","","","","","","","","","Returns a <code>BindPat</code> if the path has just one segment, a …","","","","","","","","","","","","","","","","","","","","","","","","","Creates a tuple of patterns from an iterator of patterns.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Utility trait to allow calling <code>ted</code> functions with …","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","",""],"if":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textsize",3]],[[["textsize",3]],["textsize",3]],[[["",0]]],[[["",0]]],[[["",0],["delta",4,[["textsize",3]]]]],null,[[["",0]]],[[["",0]]],[[["",0]],["option",4]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["option",4]],null,[[["textsize",3],["textsize",3]],["textrange",3]],[[["",0]],["",0]],[[["",0]],["str",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["greennodedata",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[],["option",4,[["astptr",3,[["astnode",8]]]]]],[[],["option",4,[["parse",3,[["astnode",8]]]]]],[[["",0],["textsize",3]],["option",4,[["char",0]]]],[[["textsize",3]],["option",4,[["textrange",3]]]],[[["textsize",3]],["option",4,[["textsize",3]]]],[[["textsize",3]],["option",4,[["textrange",3]]]],[[["textsize",3]],["option",4,[["textsize",3]]]],[[["",0]],["textrange",3]],[[["",0]],["smolstr",3]],[[["",0]],["textsize",3]],[[["",0]],["syntaxkind",4]],[[["",0]],["greennode",3]],[[["",0]],["syntaxtext",3]],[[["",0]],["nodeortoken",4]],[[["",0]],["direction",4]],[[["",0]],["walkevent",4]],[[["",0]],["tokenatoffset",4]],[[["",0]],["rustlanguage",4]],[[["",0]],["syntaxerror",3]],[[["",0]],["astptr",3]],[[["",0]],["parse",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["smolstr",3]],["ordering",4]],[[["",0],["textsize",3]],["ordering",4]],[[["",0],["",0]],["ordering",4]],[[["",0],["syntaxkind",4]],["ordering",4]],[[["",0],["nodeortoken",4]],["ordering",4]],[[["",0],["direction",4]],["ordering",4]],[[["",0],["rustlanguage",4]],["ordering",4]],[[["textsize",3]],["bool",0]],[[["",0],["char",0]],["bool",0]],[[["textsize",3]],["bool",0]],[[["textrange",3]],["bool",0]],[[["textrange",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[["",0]],["string",3]],[[],["textrange",3]],[[],["smolstr",3]],[[],["textsize",3]],[[],["syntaxtreebuilder",3]],[[["",0]],["str",0]],[[["",0]],["str",0]],[[["",0]],["greennodedata",3]],[[],["result",4,[["smolstr",3]]]],[[["",0]]],[[["",0]]],[[["textsize",3]],["textrange",3]],[[],["textsize",3]],[[["",0]],["bound",4,[["textsize",3]]]],[[["",0],["textrange",3]],["bool",0]],[[["",0],["str",0]],["bool",0]],[[["",0],["string",3]],["bool",0]],[[["",0],["str",0]],["bool",0]],[[["",0],["smolstr",3]],["bool",0]],[[["",0],["string",3]],["bool",0]],[[["",0],["textsize",3]],["bool",0]],[[["",0],["str",0]],["bool",0]],[[["",0],["tokentext",3]],["bool",0]],[[["",0],["string",3]],["bool",0]],[[["",0],["syntaxkind",4]],["bool",0]],[[["",0],["greennode",3]],["bool",0]],[[["",0],["str",0]],["bool",0]],[[["",0],["str",0]],["bool",0]],[[["",0],["syntaxtext",3]],["bool",0]],[[["",0],["nodeortoken",4]],["bool",0]],[[["",0],["direction",4]],["bool",0]],[[["",0],["rustlanguage",4]],["bool",0]],[[["",0],["syntaxerror",3]],["bool",0]],[[["",0],["astptr",3]],["bool",0]],[[["",0],["parse",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["string",3],["textsize",3]]],[[["",0]]],[[["",0],["char",0]],["option",4,[["textsize",3]]]],[[],["parse",3,[["syntaxnode",6]]]],[[["",0]]],[[["",0]],["option",4,[["syntaxtoken",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0]]],[[]],[[],["smolstr",3]],[[]],[[["u32",0]],["textsize",3]],[[]],[[["astptr",3]],["syntaxnodeptr",6]],[[]],[[]],[[["u16",0]],["syntaxkind",4]],[[]],[[["cow",4,[["greennodedata",3]]]],["greennode",3]],[[]],[[]],[[["greennode",3]],["nodeortoken",4,[["greennode",3],["greentoken",3]]]],[[["greentoken",3]],["nodeortoken",4,[["greennodedata",3],["greentokendata",3]]]],[[["cow",4,[["greennodedata",3]]]],["nodeortoken",4,[["greennode",3],["greentoken",3]]]],[[["syntaxnode",3]],["nodeortoken",4,[["syntaxnode",3],["syntaxtoken",3]]]],[[["greentoken",3]],["nodeortoken",4,[["greennode",3],["greentoken",3]]]],[[["syntaxtoken",3]],["nodeortoken",4,[["syntaxnode",3],["syntaxtoken",3]]]],[[]],[[["syntaxtoken",3]],["nodeortoken",4,[["syntaxnode",3],["syntaxtoken",3]]]],[[["syntaxnode",3]],["nodeortoken",4,[["syntaxnode",3],["syntaxtoken",3]]]],[[["nodeortoken",4,[["syntaxnode",3],["syntaxtoken",3]]]],["nodeortoken",4,[["syntaxnode",3],["syntaxtoken",3]]]],[[["nodeortoken",4,[["syntaxnode",3],["syntaxtoken",3]]]],["nodeortoken",4,[["syntaxnode",3],["syntaxtoken",3]]]],[[["greennode",3]],["nodeortoken",4,[["greennodedata",3],["greentokendata",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["char",0]],["option",4,[["syntaxkind",4]]]],[[["str",0]],["option",4,[["syntaxkind",4]]]],[[],["smolstr",3]],[[],["smolstr",3]],[[],["smolstr",3]],[[],["smolstr",3]],[[["str",0]],["option",4,[["syntaxkind",4]]]],[[["str",0]],["result",4,[["smolstr",3]]]],null,[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["textrange",3]],["option",4,[["textrange",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[],["bool",0]],[[],["bool",0]],[[],["bool",0]],[[],["bool",0]],[[["",0]]],[[["",0]],["syntaxkind",3]],[[["",0]],["syntaxkind",3]],[[["",0]],["syntaxkind",3]],[[["syntaxkind",3]],["syntaxkind",4]],[[["syntaxkind",4]],["syntaxkind",3]],[[["",0]],["option",4,[["syntaxtoken",3]]]],[[],["option",4]],[[],["textsize",3]],[[["",0]],["usize",0]],[[["",0]],["textsize",3]],[[],["walkevent",4]],[[],["tokenatoffset",4]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["textrange",3]],["bool",0]],[[["",0],["textsize",3]],["bool",0]],[[["",0],["greennode",3]],["bool",0]],[[["",0],["nodeortoken",4]],["bool",0]],[[["",0],["syntaxerror",3]],["bool",0]],[[["",0],["parse",3]],["bool",0]],[[["textsize",3],["textsize",3]],["textrange",3]],[[],["smolstr",3]],[[["syntaxkind",3]],["greennode",3]],[[["textrange",3]]],[[["",0]],["astptr",3]],[[["textsize",3]]],[[["str",0]],["smolstr",3]],[[["usize",0]],["smolstr",3]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4,[["nodeortoken",4,[["syntaxnode",3],["syntaxtoken",3]]]]]],[[["",0]],["option",4,[["nodeortoken",4,[["syntaxnode",3],["syntaxtoken",3]]]]]],[[],["textsize",3]],[[],["result",4,[["arc",3,[["vec",3,[["syntaxerror",3]]]]]]]],[[["textrange",3]],["ordering",4]],[[["",0]],["option",4,[["syntaxnode",3]]]],[[["",0]],["option",4,[["syntaxnode",3]]]],[[["",0],["smolstr",3]],["option",4,[["ordering",4]]]],[[["",0],["textsize",3]],["option",4,[["ordering",4]]]],[[["",0],["",0]],["option",4,[["ordering",4]]]],[[["",0],["syntaxkind",4]],["option",4,[["ordering",4]]]],[[["",0],["nodeortoken",4]],["option",4,[["ordering",4]]]],[[["",0],["direction",4]],["option",4,[["ordering",4]]]],[[["",0],["rustlanguage",4]],["option",4,[["ordering",4]]]],[[["",0]],["option",4,[["nodeortoken",4,[["syntaxnode",3],["syntaxtoken",3]]]]]],[[["",0]],["option",4,[["nodeortoken",4,[["syntaxnode",3],["syntaxtoken",3]]]]]],[[["",0]],["textrange",3]],[[["",0],["indel",3]],["parse",3,[["sourcefile",3]]]],[[],["option",4]],[[["",0]],["result",4]],[[["",0]]],[[["",0]]],[[["",0]],["syntaxtext",3]],[[],["textsize",3]],[[["",0]],["bound",4,[["textsize",3]]]],[[["",0],["syntaxkind",4]]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textsize",3]],[[["textsize",3]],["textsize",3]],[[["",0]]],[[["",0]]],[[],["textsize",3]],[[],["syntaxelement",6]],[[],["syntaxelement",6]],[[],["syntaxelement",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnodeptr",6]],null,[[["",0]],["textsize",3]],[[],["textsize",3]],[[["",0]],["textrange",3]],[[["",0]],["textrange",3]],[[["",0]],["textrange",3]],[[["",0],["syntaxnode",6]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["nodeortoken",4,[["greennode",3],["greentoken",3]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["parse",3,[["syntaxnode",6]]]],[[["",0],["syntaxkind",4],["str",0]]],[[["",0]]],[[["",0]],["result",4]],[[["",0]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",0]],["result",4,[["textsize",3],["tryfrominterror",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["syntaxnodeptr",6]],["option",4,[["astptr",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["textsize",3]],["textrange",3]],[[],["astptr",3,[["astnode",8]]]],null,[[["textrange",3]]],null,null,null,null,null,null,null,null,[[["syntaxnode",6],["textsize",3]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["syntaxnode",6],["syntaxnode",6]],["treediff",3]],[[["syntaxnode",6],["textsize",3]],["option",4,[["astnode",8]]]],[[["syntaxnode",6],["textrange",3]],["option",4,[["astnode",8]]]],[[["",0],["formatter",3]],["result",6]],[[]],[[["syntaxnode",6]],["bool",0]],[[]],[[["",0],["texteditbuilder",3]]],[[["",0]],["bool",0]],[[["syntaxnode",6],["syntaxnode",6]],["option",4,[["syntaxnode",6]]]],[[["",0],["direction",4]],["option",4,[["astnode",8]]]],[[["syntaxelement",6],["direction",4]],["option",4,[["syntaxelement",6]]]],[[["syntaxtoken",6],["direction",4]],["option",4,[["syntaxtoken",6]]]],[[["syntaxtoken",6],["direction",4]],["option",4,[["syntaxtoken",6]]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["option",4,[["syntaxtoken",6]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["option",4,[["abi",3]]]],[[["",0]],["option",4,[["abi",3]]]],[[["",0]],["option",4,[["abi",3]]]],[[["",0],["matcharm",3]]],[[["",0],["recordexprfield",3]]],[[["",0],["recordpatfield",3]]],[[["",0],["genericparam",4]]],[[["",0],["associtem",4]]],[[["",0],["wherepred",3]]],[[["",0],["usetree",3]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["arglist",3]]]],[[["",0]],["option",4,[["arglist",3]]]],[[["",0]],["option",4,[["tokentree",3]]]],[[["",0]],["astchildren",3,[["expr",4]]]],[[["",0]],["astchildren",3,[["matcharm",3]]]],[[["",0]],["option",4,[["lifetime",3]]]],[[["",0]],["option",4,[["nameref",3]]]],[[["",0]],["option",4,[["smolstr",3]]]],[[["",0]],["option",4]],[[["",0]],["option",4,[["nameref",3]]]],[[["",0]],["option",4,[["pathsegment",3]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["usize",0]]]],[[["",0]],["option",4,[["associtemlist",3]]]],[[["",0]],["option",4,[["associtemlist",3]]]],[[["",0]],["astchildren",3,[["associtem",4]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["astchildren",3,[["attr",3]]]],[[["",0]],["astchildren",3,[["attr",3]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["option",4,[["blockexpr",3]]]],[[["",0]],["option",4,[["blockexpr",3]]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["option",4,[["blockexpr",3]]]],[[["",0]],["option",4,[["tokentree",3]]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["astchildren",3,[["typebound",3]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxkind",4]],["bool",0]],[[["syntaxnode",6]],["option",4]],[[["syntaxtoken",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxtoken",6]],["option",4]],[[["syntaxtoken",6]],["option",4]],[[["syntaxtoken",6]],["option",4]],[[["syntaxtoken",6]],["option",4]],[[["syntaxtoken",6]],["option",4]],[[["syntaxtoken",6]],["option",4]],[[["syntaxtoken",6]],["option",4]],[[["syntaxtoken",6]],["option",4]],[[["syntaxtoken",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["syntaxnode",6]],["option",4]],[[["",0]],["name",3]],[[["",0]],["nameref",3]],[[["",0]],["lifetime",3]],[[["",0]],["path",3]],[[["",0]],["pathsegment",3]],[[["",0]],["genericarglist",3]],[[["",0]],["paramlist",3]],[[["",0]],["rettype",3]],[[["",0]],["pathtype",3]],[[["",0]],["typearg",3]],[[["",0]],["assoctypearg",3]],[[["",0]],["lifetimearg",3]],[[["",0]],["constarg",3]],[[["",0]],["genericparamlist",3]],[[["",0]],["typeboundlist",3]],[[["",0]],["macrocall",3]],[[["",0]],["attr",3]],[[["",0]],["tokentree",3]],[[["",0]],["macroitems",3]],[[["",0]],["macrostmts",3]],[[["",0]],["sourcefile",3]],[[["",0]],["const",3]],[[["",0]],["enum",3]],[[["",0]],["externblock",3]],[[["",0]],["externcrate",3]],[[["",0]],["fn",3]],[[["",0]],["impl",3]],[[["",0]],["macrorules",3]],[[["",0]],["macrodef",3]],[[["",0]],["module",3]],[[["",0]],["static",3]],[[["",0]],["struct",3]],[[["",0]],["trait",3]],[[["",0]],["typealias",3]],[[["",0]],["union",3]],[[["",0]],["use",3]],[[["",0]],["visibility",3]],[[["",0]],["itemlist",3]],[[["",0]],["rename",3]],[[["",0]],["usetree",3]],[[["",0]],["usetreelist",3]],[[["",0]],["abi",3]],[[["",0]],["whereclause",3]],[[["",0]],["blockexpr",3]],[[["",0]],["selfparam",3]],[[["",0]],["param",3]],[[["",0]],["recordfieldlist",3]],[[["",0]],["tuplefieldlist",3]],[[["",0]],["recordfield",3]],[[["",0]],["tuplefield",3]],[[["",0]],["variantlist",3]],[[["",0]],["variant",3]],[[["",0]],["associtemlist",3]],[[["",0]],["externitemlist",3]],[[["",0]],["constparam",3]],[[["",0]],["lifetimeparam",3]],[[["",0]],["typeparam",3]],[[["",0]],["wherepred",3]],[[["",0]],["meta",3]],[[["",0]],["exprstmt",3]],[[["",0]],["letstmt",3]],[[["",0]],["letelse",3]],[[["",0]],["arrayexpr",3]],[[["",0]],["awaitexpr",3]],[[["",0]],["binexpr",3]],[[["",0]],["boxexpr",3]],[[["",0]],["breakexpr",3]],[[["",0]],["callexpr",3]],[[["",0]],["castexpr",3]],[[["",0]],["closureexpr",3]],[[["",0]],["continueexpr",3]],[[["",0]],["fieldexpr",3]],[[["",0]],["forexpr",3]],[[["",0]],["ifexpr",3]],[[["",0]],["indexexpr",3]],[[["",0]],["literal",3]],[[["",0]],["loopexpr",3]],[[["",0]],["macroexpr",3]],[[["",0]],["matchexpr",3]],[[["",0]],["methodcallexpr",3]],[[["",0]],["parenexpr",3]],[[["",0]],["pathexpr",3]],[[["",0]],["prefixexpr",3]],[[["",0]],["rangeexpr",3]],[[["",0]],["recordexpr",3]],[[["",0]],["refexpr",3]],[[["",0]],["returnexpr",3]],[[["",0]],["tryexpr",3]],[[["",0]],["tupleexpr",3]],[[["",0]],["whileexpr",3]],[[["",0]],["yieldexpr",3]],[[["",0]],["letexpr",3]],[[["",0]],["underscoreexpr",3]],[[["",0]],["stmtlist",3]],[[["",0]],["label",3]],[[["",0]],["recordexprfieldlist",3]],[[["",0]],["recordexprfield",3]],[[["",0]],["arglist",3]],[[["",0]],["matcharmlist",3]],[[["",0]],["matcharm",3]],[[["",0]],["matchguard",3]],[[["",0]],["arraytype",3]],[[["",0]],["dyntraittype",3]],[[["",0]],["fnptrtype",3]],[[["",0]],["fortype",3]],[[["",0]],["impltraittype",3]],[[["",0]],["infertype",3]],[[["",0]],["macrotype",3]],[[["",0]],["nevertype",3]],[[["",0]],["parentype",3]],[[["",0]],["ptrtype",3]],[[["",0]],["reftype",3]],[[["",0]],["slicetype",3]],[[["",0]],["tupletype",3]],[[["",0]],["typebound",3]],[[["",0]],["identpat",3]],[[["",0]],["boxpat",3]],[[["",0]],["restpat",3]],[[["",0]],["literalpat",3]],[[["",0]],["macropat",3]],[[["",0]],["orpat",3]],[[["",0]],["parenpat",3]],[[["",0]],["pathpat",3]],[[["",0]],["wildcardpat",3]],[[["",0]],["rangepat",3]],[[["",0]],["recordpat",3]],[[["",0]],["refpat",3]],[[["",0]],["slicepat",3]],[[["",0]],["tuplepat",3]],[[["",0]],["tuplestructpat",3]],[[["",0]],["constblockpat",3]],[[["",0]],["recordpatfieldlist",3]],[[["",0]],["recordpatfield",3]],[[["",0]],["genericarg",4]],[[["",0]],["type",4]],[[["",0]],["expr",4]],[[["",0]],["item",4]],[[["",0]],["stmt",4]],[[["",0]],["pat",4]],[[["",0]],["fieldlist",4]],[[["",0]],["adt",4]],[[["",0]],["associtem",4]],[[["",0]],["externitem",4]],[[["",0]],["genericparam",4]],[[["",0]],["anyhasarglist",3]],[[["",0]],["anyhasattrs",3]],[[["",0]],["anyhasdoccomments",3]],[[["",0]],["anyhasgenericparams",3]],[[["",0]],["anyhasloopbody",3]],[[["",0]],["anyhasmoduleitem",3]],[[["",0]],["anyhasname",3]],[[["",0]],["anyhastypebounds",3]],[[["",0]],["anyhasvisibility",3]],[[["",0]],["whitespace",3]],[[["",0]],["comment",3]],[[["",0]],["string",3]],[[["",0]],["bytestring",3]],[[["",0]],["intnumber",3]],[[["",0]],["floatnumber",3]],[[["",0]],["char",3]],[[["",0]],["byte",3]],[[["",0]],["ident",3]],[[["",0]],["commentkind",3]],[[["",0]],["commentshape",4]],[[["",0]],["commentplacement",4]],[[["",0]],["radix",4]],[[["",0]],["macro",4]],[[["",0]],["attrkind",4]],[[["",0]],["pathsegmentkind",4]],[[["",0]],["structkind",4]],[[["",0]],["namelike",4]],[[["",0]],["nameornameref",4]],[[["",0]],["fieldkind",4]],[[["",0]],["selfparamkind",4]],[[["",0]],["typeboundkind",4]],[[["",0]],["typeorconstparam",4]],[[["",0]],["elsebranch",4]],[[["",0]],["literalkind",4]],[[["",0]],["callableexpr",4]],[[["",0]],["rangeop",4]],[[["",0]],["unaryop",4]],[[["",0]],["binaryop",4]],[[["",0]],["logicop",4]],[[["",0]],["cmpop",4]],[[["",0]],["ordering",4]],[[["",0]],["arithop",4]],[[["",0]],["astchildrenoption",4,[["textrange",3]]]],[[["",0]],["option",4,[["textrange",3]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["slicepatcomponents",3]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["option",4,[["constarg",3]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],null,[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["type",4]]]],[[["",0]],["option",4,[["expr",4]]]],null,[[["",0]],["option",4,[["str",0]]]],[[["",0]],["doccommentiter",3]],[[["",0]],["doccommentiter",3]],[[["",0]],["attrdoccommentiter",3]],[[["",0]],["attrdoccommentiter",3]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],null,null,[[["",0]],["option",4,[["elsebranch",4]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["option",4,[["pat",4]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0],["name",3]],["bool",0]],[[["",0],["nameref",3]],["bool",0]],[[["",0],["lifetime",3]],["bool",0]],[[["",0],["path",3]],["bool",0]],[[["",0],["pathsegment",3]],["bool",0]],[[["",0],["genericarglist",3]],["bool",0]],[[["",0],["paramlist",3]],["bool",0]],[[["",0],["rettype",3]],["bool",0]],[[["",0],["pathtype",3]],["bool",0]],[[["",0],["typearg",3]],["bool",0]],[[["",0],["assoctypearg",3]],["bool",0]],[[["",0],["lifetimearg",3]],["bool",0]],[[["",0],["constarg",3]],["bool",0]],[[["",0],["genericparamlist",3]],["bool",0]],[[["",0],["typeboundlist",3]],["bool",0]],[[["",0],["macrocall",3]],["bool",0]],[[["",0],["attr",3]],["bool",0]],[[["",0],["tokentree",3]],["bool",0]],[[["",0],["macroitems",3]],["bool",0]],[[["",0],["macrostmts",3]],["bool",0]],[[["",0],["sourcefile",3]],["bool",0]],[[["",0],["const",3]],["bool",0]],[[["",0],["enum",3]],["bool",0]],[[["",0],["externblock",3]],["bool",0]],[[["",0],["externcrate",3]],["bool",0]],[[["",0],["fn",3]],["bool",0]],[[["",0],["impl",3]],["bool",0]],[[["",0],["macrorules",3]],["bool",0]],[[["",0],["macrodef",3]],["bool",0]],[[["",0],["module",3]],["bool",0]],[[["",0],["static",3]],["bool",0]],[[["",0],["struct",3]],["bool",0]],[[["",0],["trait",3]],["bool",0]],[[["",0],["typealias",3]],["bool",0]],[[["",0],["union",3]],["bool",0]],[[["",0],["use",3]],["bool",0]],[[["",0],["visibility",3]],["bool",0]],[[["",0],["itemlist",3]],["bool",0]],[[["",0],["rename",3]],["bool",0]],[[["",0],["usetree",3]],["bool",0]],[[["",0],["usetreelist",3]],["bool",0]],[[["",0],["abi",3]],["bool",0]],[[["",0],["whereclause",3]],["bool",0]],[[["",0],["blockexpr",3]],["bool",0]],[[["",0],["selfparam",3]],["bool",0]],[[["",0],["param",3]],["bool",0]],[[["",0],["recordfieldlist",3]],["bool",0]],[[["",0],["tuplefieldlist",3]],["bool",0]],[[["",0],["recordfield",3]],["bool",0]],[[["",0],["tuplefield",3]],["bool",0]],[[["",0],["variantlist",3]],["bool",0]],[[["",0],["variant",3]],["bool",0]],[[["",0],["associtemlist",3]],["bool",0]],[[["",0],["externitemlist",3]],["bool",0]],[[["",0],["constparam",3]],["bool",0]],[[["",0],["lifetimeparam",3]],["bool",0]],[[["",0],["typeparam",3]],["bool",0]],[[["",0],["wherepred",3]],["bool",0]],[[["",0],["meta",3]],["bool",0]],[[["",0],["exprstmt",3]],["bool",0]],[[["",0],["letstmt",3]],["bool",0]],[[["",0],["letelse",3]],["bool",0]],[[["",0],["arrayexpr",3]],["bool",0]],[[["",0],["awaitexpr",3]],["bool",0]],[[["",0],["binexpr",3]],["bool",0]],[[["",0],["boxexpr",3]],["bool",0]],[[["",0],["breakexpr",3]],["bool",0]],[[["",0],["callexpr",3]],["bool",0]],[[["",0],["castexpr",3]],["bool",0]],[[["",0],["closureexpr",3]],["bool",0]],[[["",0],["continueexpr",3]],["bool",0]],[[["",0],["fieldexpr",3]],["bool",0]],[[["",0],["forexpr",3]],["bool",0]],[[["",0],["ifexpr",3]],["bool",0]],[[["",0],["indexexpr",3]],["bool",0]],[[["",0],["literal",3]],["bool",0]],[[["",0],["loopexpr",3]],["bool",0]],[[["",0],["macroexpr",3]],["bool",0]],[[["",0],["matchexpr",3]],["bool",0]],[[["",0],["methodcallexpr",3]],["bool",0]],[[["",0],["parenexpr",3]],["bool",0]],[[["",0],["pathexpr",3]],["bool",0]],[[["",0],["prefixexpr",3]],["bool",0]],[[["",0],["rangeexpr",3]],["bool",0]],[[["",0],["recordexpr",3]],["bool",0]],[[["",0],["refexpr",3]],["bool",0]],[[["",0],["returnexpr",3]],["bool",0]],[[["",0],["tryexpr",3]],["bool",0]],[[["",0],["tupleexpr",3]],["bool",0]],[[["",0],["whileexpr",3]],["bool",0]],[[["",0],["yieldexpr",3]],["bool",0]],[[["",0],["letexpr",3]],["bool",0]],[[["",0],["underscoreexpr",3]],["bool",0]],[[["",0],["stmtlist",3]],["bool",0]],[[["",0],["label",3]],["bool",0]],[[["",0],["recordexprfieldlist",3]],["bool",0]],[[["",0],["recordexprfield",3]],["bool",0]],[[["",0],["arglist",3]],["bool",0]],[[["",0],["matcharmlist",3]],["bool",0]],[[["",0],["matcharm",3]],["bool",0]],[[["",0],["matchguard",3]],["bool",0]],[[["",0],["arraytype",3]],["bool",0]],[[["",0],["dyntraittype",3]],["bool",0]],[[["",0],["fnptrtype",3]],["bool",0]],[[["",0],["fortype",3]],["bool",0]],[[["",0],["impltraittype",3]],["bool",0]],[[["",0],["infertype",3]],["bool",0]],[[["",0],["macrotype",3]],["bool",0]],[[["",0],["nevertype",3]],["bool",0]],[[["",0],["parentype",3]],["bool",0]],[[["",0],["ptrtype",3]],["bool",0]],[[["",0],["reftype",3]],["bool",0]],[[["",0],["slicetype",3]],["bool",0]],[[["",0],["tupletype",3]],["bool",0]],[[["",0],["typebound",3]],["bool",0]],[[["",0],["identpat",3]],["bool",0]],[[["",0],["boxpat",3]],["bool",0]],[[["",0],["restpat",3]],["bool",0]],[[["",0],["literalpat",3]],["bool",0]],[[["",0],["macropat",3]],["bool",0]],[[["",0],["orpat",3]],["bool",0]],[[["",0],["parenpat",3]],["bool",0]],[[["",0],["pathpat",3]],["bool",0]],[[["",0],["wildcardpat",3]],["bool",0]],[[["",0],["rangepat",3]],["bool",0]],[[["",0],["recordpat",3]],["bool",0]],[[["",0],["refpat",3]],["bool",0]],[[["",0],["slicepat",3]],["bool",0]],[[["",0],["tuplepat",3]],["bool",0]],[[["",0],["tuplestructpat",3]],["bool",0]],[[["",0],["constblockpat",3]],["bool",0]],[[["",0],["recordpatfieldlist",3]],["bool",0]],[[["",0],["recordpatfield",3]],["bool",0]],[[["",0],["genericarg",4]],["bool",0]],[[["",0],["type",4]],["bool",0]],[[["",0],["expr",4]],["bool",0]],[[["",0],["item",4]],["bool",0]],[[["",0],["stmt",4]],["bool",0]],[[["",0],["pat",4]],["bool",0]],[[["",0],["fieldlist",4]],["bool",0]],[[["",0],["adt",4]],["bool",0]],[[["",0],["associtem",4]],["bool",0]],[[["",0],["externitem",4]],["bool",0]],[[["",0],["genericparam",4]],["bool",0]],[[["",0],["anyhasarglist",3]],["bool",0]],[[["",0],["anyhasattrs",3]],["bool",0]],[[["",0],["anyhasdoccomments",3]],["bool",0]],[[["",0],["anyhasgenericparams",3]],["bool",0]],[[["",0],["anyhasloopbody",3]],["bool",0]],[[["",0],["anyhasmoduleitem",3]],["bool",0]],[[["",0],["anyhasname",3]],["bool",0]],[[["",0],["anyhastypebounds",3]],["bool",0]],[[["",0],["anyhasvisibility",3]],["bool",0]],[[["",0],["whitespace",3]],["bool",0]],[[["",0],["comment",3]],["bool",0]],[[["",0],["string",3]],["bool",0]],[[["",0],["bytestring",3]],["bool",0]],[[["",0],["intnumber",3]],["bool",0]],[[["",0],["floatnumber",3]],["bool",0]],[[["",0],["char",3]],["bool",0]],[[["",0],["byte",3]],["bool",0]],[[["",0],["ident",3]],["bool",0]],[[["",0],["commentkind",3]],["bool",0]],[[["",0],["commentshape",4]],["bool",0]],[[["",0],["commentplacement",4]],["bool",0]],[[["",0],["radix",4]],["bool",0]],[[["",0],["macro",4]],["bool",0]],[[["",0],["attrkind",4]],["bool",0]],[[["",0],["pathsegmentkind",4]],["bool",0]],[[["",0],["structkind",4]],["bool",0]],[[["",0],["nameornameref",4]],["bool",0]],[[["",0],["fieldkind",4]],["bool",0]],[[["",0],["selfparamkind",4]],["bool",0]],[[["",0],["typeboundkind",4]],["bool",0]],[[["",0],["elsebranch",4]],["bool",0]],[[["",0],["literalkind",4]],["bool",0]],[[["",0],["callableexpr",4]],["bool",0]],[[["",0],["rangeop",4]],["bool",0]],[[["",0],["unaryop",4]],["bool",0]],[[["",0],["binaryop",4]],["bool",0]],[[["",0],["logicop",4]],["bool",0]],[[["",0],["cmpop",4]],["bool",0]],[[["",0],["ordering",4]],["bool",0]],[[["",0],["arithop",4]],["bool",0]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["fnmut",8]]],[[["",0],["fnmut",8]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["astchildren",3,[["expr",4]]]],[[["",0]],["option",4,[["externitemlist",3]]]],[[["",0]],["astchildren",3,[["externitem",4]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["fieldkind",4]]]],[[["",0]],["option",4,[["fieldlist",4]]]],[[["",0]],["option",4,[["fieldlist",4]]]],[[["",0]],["option",4,[["nameref",3]]]],[[["",0]],["option",4,[["nameornameref",4]]]],[[["",0]],["astchildren",3,[["recordfield",3]]]],[[["",0]],["astchildren",3,[["tuplefield",3]]]],[[["",0]],["astchildren",3,[["expr",4]]]],[[["",0]],["astchildren",3,[["recordexprfield",3]]]],[[["",0]],["astchildren",3,[["type",4]]]],[[["",0]],["astchildren",3,[["pat",4]]]],[[["",0]],["astchildren",3,[["pat",4]]]],[[["",0]],["astchildren",3,[["recordpatfield",3]]]],[[["",0]],["path",3]],[[["",0]],["option",4,[["pathsegment",3]]]],[[["",0]],["option",4,[["f64",0]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["nameref",3]],["option",4,[["recordexprfield",3]]]],[[["name",3]],["option",4,[["recordpatfield",3]]]],[[["nameref",3]],["option",4,[["recordpatfield",3]]]],[[["nameref",3]],["option",4,[["recordexprfield",3]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["nameref",3]],["option",4,[["impl",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["typearg",3]],["genericarg",4]],[[["constarg",3]],["genericarg",4]],[[]],[[["lifetimearg",3]],["genericarg",4]],[[["assoctypearg",3]],["genericarg",4]],[[["pathtype",3]],["type",4]],[[["macrotype",3]],["type",4]],[[["arraytype",3]],["type",4]],[[["nevertype",3]],["type",4]],[[]],[[["infertype",3]],["type",4]],[[["dyntraittype",3]],["type",4]],[[["impltraittype",3]],["type",4]],[[["tupletype",3]],["type",4]],[[["slicetype",3]],["type",4]],[[["fnptrtype",3]],["type",4]],[[["parentype",3]],["type",4]],[[["fortype",3]],["type",4]],[[["reftype",3]],["type",4]],[[["ptrtype",3]],["type",4]],[[["fieldexpr",3]],["expr",4]],[[["whileexpr",3]],["expr",4]],[[["parenexpr",3]],["expr",4]],[[["yieldexpr",3]],["expr",4]],[[["letexpr",3]],["expr",4]],[[["underscoreexpr",3]],["expr",4]],[[["forexpr",3]],["expr",4]],[[["arrayexpr",3]],["expr",4]],[[]],[[["tupleexpr",3]],["expr",4]],[[["tryexpr",3]],["expr",4]],[[["returnexpr",3]],["expr",4]],[[["refexpr",3]],["expr",4]],[[["ifexpr",3]],["expr",4]],[[["indexexpr",3]],["expr",4]],[[["literal",3]],["expr",4]],[[["loopexpr",3]],["expr",4]],[[["continueexpr",3]],["expr",4]],[[["macroexpr",3]],["expr",4]],[[["recordexpr",3]],["expr",4]],[[["rangeexpr",3]],["expr",4]],[[["prefixexpr",3]],["expr",4]],[[["closureexpr",3]],["expr",4]],[[["castexpr",3]],["expr",4]],[[["methodcallexpr",3]],["expr",4]],[[["macrostmts",3]],["expr",4]],[[["callexpr",3]],["expr",4]],[[["breakexpr",3]],["expr",4]],[[["matchexpr",3]],["expr",4]],[[["boxexpr",3]],["expr",4]],[[["blockexpr",3]],["expr",4]],[[["binexpr",3]],["expr",4]],[[["pathexpr",3]],["expr",4]],[[["awaitexpr",3]],["expr",4]],[[["typealias",3]],["item",4]],[[["associtem",4]]],[[["union",3]],["item",4]],[[]],[[["trait",3]],["item",4]],[[["fn",3]],["item",4]],[[["struct",3]],["item",4]],[[["const",3]],["item",4]],[[["enum",3]],["item",4]],[[["adt",4]]],[[["use",3]],["item",4]],[[["static",3]],["item",4]],[[["externblock",3]],["item",4]],[[["module",3]],["item",4]],[[["macrodef",3]],["item",4]],[[["externcrate",3]],["item",4]],[[["impl",3]],["item",4]],[[["macrorules",3]],["item",4]],[[["macrocall",3]],["item",4]],[[["item",4]],["stmt",4]],[[]],[[["exprstmt",3]],["stmt",4]],[[["letstmt",3]],["stmt",4]],[[["recordpat",3]],["pat",4]],[[["refpat",3]],["pat",4]],[[["restpat",3]],["pat",4]],[[["literalpat",3]],["pat",4]],[[["pathpat",3]],["pat",4]],[[["parenpat",3]],["pat",4]],[[["identpat",3]],["pat",4]],[[["wildcardpat",3]],["pat",4]],[[["rangepat",3]],["pat",4]],[[["macropat",3]],["pat",4]],[[]],[[["orpat",3]],["pat",4]],[[["slicepat",3]],["pat",4]],[[["tuplepat",3]],["pat",4]],[[["tuplestructpat",3]],["pat",4]],[[["constblockpat",3]],["pat",4]],[[["boxpat",3]],["pat",4]],[[["recordfieldlist",3]],["fieldlist",4]],[[["tuplefieldlist",3]],["fieldlist",4]],[[]],[[["enum",3]],["adt",4]],[[["struct",3]],["adt",4]],[[["union",3]],["adt",4]],[[]],[[["macrocall",3]],["associtem",4]],[[["fn",3]],["associtem",4]],[[["const",3]],["associtem",4]],[[]],[[["typealias",3]],["associtem",4]],[[["macrocall",3]],["externitem",4]],[[["static",3]],["externitem",4]],[[["typealias",3]],["externitem",4]],[[]],[[["fn",3]],["externitem",4]],[[["lifetimeparam",3]],["genericparam",4]],[[]],[[["typeparam",3]],["genericparam",4]],[[["constparam",3]],["genericparam",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["macrorules",3]]],[[["macrodef",3]]],[[]],[[]],[[]],[[]],[[["lifetime",3]],["namelike",4]],[[]],[[["name",3]],["namelike",4]],[[["nameref",3]],["namelike",4]],[[]],[[]],[[]],[[]],[[]],[[["blockexpr",3]]],[[]],[[["ifexpr",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["syntaxnode",6]],["doccommentiter",3]],[[["syntaxnode",6]],["attrdoccommentiter",3]],[[["",0]],["option",4,[["genericarglist",3]]]],[[["",0]],["option",4,[["genericarglist",3]]]],[[["",0]],["astchildren",3,[["genericarg",4]]]],[[["",0]],["option",4,[["genericparamlist",3]]]],[[["",0]],["option",4,[["genericparamlist",3]]]],[[["",0]],["option",4,[["genericparamlist",3]]]],[[["",0]],["option",4,[["genericparamlist",3]]]],[[["",0]],["option",4,[["genericparamlist",3]]]],[[["",0]],["option",4,[["genericparamlist",3]]]],[[["",0]],["option",4,[["genericparamlist",3]]]],[[["",0]],["astchildren",3,[["genericparam",4]]]],[[["",0]],["associtemlist",3]],[[["",0]],["blockexpr",3]],[[["",0]],["genericarglist",3]],[[["",0]],["genericparamlist",3]],[[["",0]],["genericparamlist",3]],[[["",0]],["genericparamlist",3]],[[["",0]],["genericparamlist",3]],[[["",0]],["genericparamlist",3]],[[["",0]],["usetreelist",3]],[[["",0]],["whereclause",3]],[[["",0]],["whereclause",3]],[[["",0]],["whereclause",3]],[[["",0]],["whereclause",3]],[[["",0]],["whereclause",3]],[[["",0]],["option",4,[["matchguard",3]]]],[[["",0],["str",0]],["bool",0]],[[["",0],["str",0]],["bool",0]],[[["",0]],["booloption",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["exprbool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["option",4,[["itemlist",3]]]],[[["",0]],["astchildren",3,[["item",4]]]],[[["",0]],["astchildren",3,[["item",4]]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["option",4,[["pathsegmentkind",4]]]],[[["",0]],["attrkind",4]],[[["",0]],["structkind",4]],[[["",0]],["visibilitykind",4]],[[["",0]],["selfparamkind",4]],[[["",0]],["structkind",4]],[[["",0]],["arrayexprkind",4]],[[["",0]],["literalkind",4]],[[["",0]],["typeboundkind",4]],[[["",0]],["commentkind",3]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["label",3]]]],[[["",0]],["option",4,[["label",3]]]],[[["",0]],["option",4,[["label",3]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["letelse",3]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["option",4,[["lifetime",3]]]],[[["",0]],["option",4,[["lifetime",3]]]],[[["",0]],["option",4,[["lifetime",3]]]],[[["",0]],["option",4,[["lifetime",3]]]],[[["",0]],["option",4,[["lifetime",3]]]],[[["",0]],["option",4,[["lifetime",3]]]],[[["",0]],["option",4,[["lifetime",3]]]],[[["",0]],["option",4,[["lifetime",3]]]],[[["",0]],["option",4,[["lifetime",3]]]],[[["",0]]],[[["",0]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]]],[[["",0]],["option",4,[["literal",3]]]],[[["",0]],["option",4,[["blockexpr",3]]]],[[["",0]],["option",4,[["blockexpr",3]]]],[[["",0]],["option",4,[["blockexpr",3]]]],[[["",0]],["option",4,[["blockexpr",3]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["macrocall",3]]]],[[["",0]],["option",4,[["macrocall",3]]]],[[["",0]],["option",4,[["macrocall",3]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],null,[[["",0],["textrange",3]],["option",4,[["textrange",3]]]],[[["",0]],["option",4,[["matcharmlist",3]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["meta",3]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["blockmodifier",4]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["name",3]]]],[[["",0]],["option",4,[["name",3]]]],[[["",0]],["option",4,[["name",3]]]],[[["",0]],["option",4,[["name",3]]]],[[["",0]],["option",4,[["nameref",3]]]],[[["",0]],["option",4,[["nameref",3]]]],[[["",0]],["option",4,[["nameref",3]]]],[[["",0]],["option",4,[["nameref",3]]]],[[["",0]],["option",4,[["nameref",3]]]],[[["",0]],["option",4,[["nameref",3]]]],[[["",0]],["option",4,[["nameref",3]]]],[[["",0],["name",3]],["bool",0]],[[["",0],["nameref",3]],["bool",0]],[[["",0],["lifetime",3]],["bool",0]],[[["",0],["path",3]],["bool",0]],[[["",0],["pathsegment",3]],["bool",0]],[[["",0],["genericarglist",3]],["bool",0]],[[["",0],["paramlist",3]],["bool",0]],[[["",0],["rettype",3]],["bool",0]],[[["",0],["pathtype",3]],["bool",0]],[[["",0],["typearg",3]],["bool",0]],[[["",0],["assoctypearg",3]],["bool",0]],[[["",0],["lifetimearg",3]],["bool",0]],[[["",0],["constarg",3]],["bool",0]],[[["",0],["genericparamlist",3]],["bool",0]],[[["",0],["typeboundlist",3]],["bool",0]],[[["",0],["macrocall",3]],["bool",0]],[[["",0],["attr",3]],["bool",0]],[[["",0],["tokentree",3]],["bool",0]],[[["",0],["macroitems",3]],["bool",0]],[[["",0],["macrostmts",3]],["bool",0]],[[["",0],["sourcefile",3]],["bool",0]],[[["",0],["const",3]],["bool",0]],[[["",0],["enum",3]],["bool",0]],[[["",0],["externblock",3]],["bool",0]],[[["",0],["externcrate",3]],["bool",0]],[[["",0],["fn",3]],["bool",0]],[[["",0],["impl",3]],["bool",0]],[[["",0],["macrorules",3]],["bool",0]],[[["",0],["macrodef",3]],["bool",0]],[[["",0],["module",3]],["bool",0]],[[["",0],["static",3]],["bool",0]],[[["",0],["struct",3]],["bool",0]],[[["",0],["trait",3]],["bool",0]],[[["",0],["typealias",3]],["bool",0]],[[["",0],["union",3]],["bool",0]],[[["",0],["use",3]],["bool",0]],[[["",0],["visibility",3]],["bool",0]],[[["",0],["itemlist",3]],["bool",0]],[[["",0],["rename",3]],["bool",0]],[[["",0],["usetree",3]],["bool",0]],[[["",0],["usetreelist",3]],["bool",0]],[[["",0],["abi",3]],["bool",0]],[[["",0],["whereclause",3]],["bool",0]],[[["",0],["blockexpr",3]],["bool",0]],[[["",0],["selfparam",3]],["bool",0]],[[["",0],["param",3]],["bool",0]],[[["",0],["recordfieldlist",3]],["bool",0]],[[["",0],["tuplefieldlist",3]],["bool",0]],[[["",0],["recordfield",3]],["bool",0]],[[["",0],["tuplefield",3]],["bool",0]],[[["",0],["variantlist",3]],["bool",0]],[[["",0],["variant",3]],["bool",0]],[[["",0],["associtemlist",3]],["bool",0]],[[["",0],["externitemlist",3]],["bool",0]],[[["",0],["constparam",3]],["bool",0]],[[["",0],["lifetimeparam",3]],["bool",0]],[[["",0],["typeparam",3]],["bool",0]],[[["",0],["wherepred",3]],["bool",0]],[[["",0],["meta",3]],["bool",0]],[[["",0],["exprstmt",3]],["bool",0]],[[["",0],["letstmt",3]],["bool",0]],[[["",0],["letelse",3]],["bool",0]],[[["",0],["arrayexpr",3]],["bool",0]],[[["",0],["awaitexpr",3]],["bool",0]],[[["",0],["binexpr",3]],["bool",0]],[[["",0],["boxexpr",3]],["bool",0]],[[["",0],["breakexpr",3]],["bool",0]],[[["",0],["callexpr",3]],["bool",0]],[[["",0],["castexpr",3]],["bool",0]],[[["",0],["closureexpr",3]],["bool",0]],[[["",0],["continueexpr",3]],["bool",0]],[[["",0],["fieldexpr",3]],["bool",0]],[[["",0],["forexpr",3]],["bool",0]],[[["",0],["ifexpr",3]],["bool",0]],[[["",0],["indexexpr",3]],["bool",0]],[[["",0],["literal",3]],["bool",0]],[[["",0],["loopexpr",3]],["bool",0]],[[["",0],["macroexpr",3]],["bool",0]],[[["",0],["matchexpr",3]],["bool",0]],[[["",0],["methodcallexpr",3]],["bool",0]],[[["",0],["parenexpr",3]],["bool",0]],[[["",0],["pathexpr",3]],["bool",0]],[[["",0],["prefixexpr",3]],["bool",0]],[[["",0],["rangeexpr",3]],["bool",0]],[[["",0],["recordexpr",3]],["bool",0]],[[["",0],["refexpr",3]],["bool",0]],[[["",0],["returnexpr",3]],["bool",0]],[[["",0],["tryexpr",3]],["bool",0]],[[["",0],["tupleexpr",3]],["bool",0]],[[["",0],["whileexpr",3]],["bool",0]],[[["",0],["yieldexpr",3]],["bool",0]],[[["",0],["letexpr",3]],["bool",0]],[[["",0],["underscoreexpr",3]],["bool",0]],[[["",0],["stmtlist",3]],["bool",0]],[[["",0],["label",3]],["bool",0]],[[["",0],["recordexprfieldlist",3]],["bool",0]],[[["",0],["recordexprfield",3]],["bool",0]],[[["",0],["arglist",3]],["bool",0]],[[["",0],["matcharmlist",3]],["bool",0]],[[["",0],["matcharm",3]],["bool",0]],[[["",0],["matchguard",3]],["bool",0]],[[["",0],["arraytype",3]],["bool",0]],[[["",0],["dyntraittype",3]],["bool",0]],[[["",0],["fnptrtype",3]],["bool",0]],[[["",0],["fortype",3]],["bool",0]],[[["",0],["impltraittype",3]],["bool",0]],[[["",0],["infertype",3]],["bool",0]],[[["",0],["macrotype",3]],["bool",0]],[[["",0],["nevertype",3]],["bool",0]],[[["",0],["parentype",3]],["bool",0]],[[["",0],["ptrtype",3]],["bool",0]],[[["",0],["reftype",3]],["bool",0]],[[["",0],["slicetype",3]],["bool",0]],[[["",0],["tupletype",3]],["bool",0]],[[["",0],["typebound",3]],["bool",0]],[[["",0],["identpat",3]],["bool",0]],[[["",0],["boxpat",3]],["bool",0]],[[["",0],["restpat",3]],["bool",0]],[[["",0],["literalpat",3]],["bool",0]],[[["",0],["macropat",3]],["bool",0]],[[["",0],["orpat",3]],["bool",0]],[[["",0],["parenpat",3]],["bool",0]],[[["",0],["pathpat",3]],["bool",0]],[[["",0],["wildcardpat",3]],["bool",0]],[[["",0],["rangepat",3]],["bool",0]],[[["",0],["recordpat",3]],["bool",0]],[[["",0],["refpat",3]],["bool",0]],[[["",0],["slicepat",3]],["bool",0]],[[["",0],["tuplepat",3]],["bool",0]],[[["",0],["tuplestructpat",3]],["bool",0]],[[["",0],["constblockpat",3]],["bool",0]],[[["",0],["recordpatfieldlist",3]],["bool",0]],[[["",0],["recordpatfield",3]],["bool",0]],[[["",0],["genericarg",4]],["bool",0]],[[["",0],["type",4]],["bool",0]],[[["",0],["expr",4]],["bool",0]],[[["",0],["item",4]],["bool",0]],[[["",0],["stmt",4]],["bool",0]],[[["",0],["pat",4]],["bool",0]],[[["",0],["fieldlist",4]],["bool",0]],[[["",0],["adt",4]],["bool",0]],[[["",0],["associtem",4]],["bool",0]],[[["",0],["externitem",4]],["bool",0]],[[["",0],["genericparam",4]],["bool",0]],[[["",0],["anyhasarglist",3]],["bool",0]],[[["",0],["anyhasattrs",3]],["bool",0]],[[["",0],["anyhasdoccomments",3]],["bool",0]],[[["",0],["anyhasgenericparams",3]],["bool",0]],[[["",0],["anyhasloopbody",3]],["bool",0]],[[["",0],["anyhasmoduleitem",3]],["bool",0]],[[["",0],["anyhasname",3]],["bool",0]],[[["",0],["anyhastypebounds",3]],["bool",0]],[[["",0],["anyhasvisibility",3]],["bool",0]],[[["",0],["whitespace",3]],["bool",0]],[[["",0],["comment",3]],["bool",0]],[[["",0],["string",3]],["bool",0]],[[["",0],["bytestring",3]],["bool",0]],[[["",0],["intnumber",3]],["bool",0]],[[["",0],["floatnumber",3]],["bool",0]],[[["",0],["char",3]],["bool",0]],[[["",0],["byte",3]],["bool",0]],[[["",0],["ident",3]],["bool",0]],[[["",0],["commentkind",3]],["bool",0]],[[["",0],["macro",4]],["bool",0]],[[["",0],["pathsegmentkind",4]],["bool",0]],[[["",0],["structkind",4]],["bool",0]],[[["",0],["nameornameref",4]],["bool",0]],[[["",0],["fieldkind",4]],["bool",0]],[[["",0],["typeboundkind",4]],["bool",0]],[[["",0],["elsebranch",4]],["bool",0]],[[["",0],["literalkind",4]],["bool",0]],[[["",0],["callableexpr",4]],["bool",0]],[[["",0],["binaryop",4]],["bool",0]],[[["",0],["cmpop",4]],["bool",0]],[[["hasarglist",8]],["anyhasarglist",3]],[[["hasattrs",8]],["anyhasattrs",3]],[[["hasdoccomments",8]],["anyhasdoccomments",3]],[[["hasgenericparams",8]],["anyhasgenericparams",3]],[[["hasloopbody",8]],["anyhasloopbody",3]],[[["hasmoduleitem",8]],["anyhasmoduleitem",3]],[[["hasname",8]],["anyhasname",3]],[[["hastypebounds",8]],["anyhastypebounds",3]],[[["hasvisibility",8]],["anyhasvisibility",3]],[[["",0]],["option",4,[["comment",3]]]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4,[["binaryop",4]]]],[[["",0]],["option",4,[["unaryop",4]]]],[[["",0]],["option",4,[["rangeop",4]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["textrange",3]]]],[[["",0]],["option",4,[["textrange",3]]]],[[["",0]],["option",4,[["paramlist",3]]]],[[["",0]],["option",4,[["paramlist",3]]]],[[["",0]],["option",4,[["paramlist",3]]]],[[["",0]],["option",4,[["paramlist",3]]]],[[["",0]],["astchildren",3,[["param",3]]]],[[["",0]],["option",4,[["module",3]]]],[[["",0]],["option",4,[["attr",3]]]],[[["",0]],["enum",3]],[[["",0]],["option",4,[["meta",3]]]],[[["",0]],["option",4,[["path",3]]]],[[["",0]],["path",3]],[[["",0]],["recordexpr",3]],[[["",0]],["recordpat",3]],[[["",0]],["usetree",3]],[[["str",0]],["parse",3,[["sourcefile",3]]]],[[["",0]],["option",4,[["pat",4]]]],[[["",0]],["option",4,[["pat",4]]]],[[["",0]],["option",4,[["pat",4]]]],[[["",0]],["option",4,[["pat",4]]]],[[["",0]],["option",4,[["pat",4]]]],[[["",0]],["option",4,[["pat",4]]]],[[["",0]],["option",4,[["pat",4]]]],[[["",0]],["option",4,[["pat",4]]]],[[["",0]],["option",4,[["pat",4]]]],[[["",0]],["option",4,[["pat",4]]]],[[["",0]],["option",4,[["path",3]]]],[[["",0]],["option",4,[["path",3]]]],[[["",0]],["option",4,[["path",3]]]],[[["",0]],["option",4,[["path",3]]]],[[["",0]],["option",4,[["path",3]]]],[[["",0]],["option",4,[["path",3]]]],[[["",0]],["option",4,[["path",3]]]],[[["",0]],["option",4,[["path",3]]]],[[["",0]],["option",4,[["path",3]]]],[[["",0]],["option",4,[["path",3]]]],[[["",0]],["option",4,[["path",3]]]],[[["",0]],["option",4,[["pathtype",3]]]],[[["",0]],["astchildren",3,[["pat",4]]]],[[["",0]],["astchildren",3,[["pat",4]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["astchildren",3,[["wherepred",3]]]],[[["",0]],["str",0]],[[["",0]],["str",0]],null,[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0],["stmt",4]]],[[["",0]],["option",4,[["path",3]]]],[[["",0]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["quoteoffsets",3]]]],[[["",0]],["option",4,[["quoteoffsets",3]]]],null,[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["radix",4]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["option",4,[["recordexprfieldlist",3]]]],[[["",0]],["option",4,[["recordfieldlist",3]]]],[[["",0]],["option",4,[["recordpatfieldlist",3]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["option",4,[["rename",3]]]],[[["",0]],["option",4,[["rename",3]]]],[[["",0],["expr",4]]],[[["",0]],["option",4,[["restpat",3]]]],[[["",0]],["option",4,[["rettype",3]]]],[[["",0]],["option",4,[["rettype",3]]]],[[["",0]],["option",4,[["rettype",3]]]],[[["",0]],["option",4,[["rettype",3]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["pathsegment",3]]]],[[["",0]]],[[["",0]],["option",4,[["selfparam",3]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["type",4]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],null,[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["smolstr",3]]]],null,[[["",0]],["bool",0]],[[["",0]]],[[["",0]]],[[["",0],["path",3]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["option",4,[["pat",4]]]],[[["",0]],["astchildren",3,[["stmt",4]]]],[[["",0]]],[[["",0]],["astchildren",3,[["stmt",4]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["stmtlist",3]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]]],[[["",0]],["option",4,[["str",0]]]],[[["",0]],["option",4,[["str",0]]]],null,[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxtoken",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxtoken",6]],[[["",0]],["syntaxtoken",6]],[[["",0]],["syntaxtoken",6]],[[["",0]],["syntaxtoken",6]],[[["",0]],["syntaxtoken",6]],[[["",0]],["syntaxtoken",6]],[[["",0]],["syntaxtoken",6]],[[["",0]],["syntaxtoken",6]],[[["",0]],["syntaxtoken",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["syntaxnode",6]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["option",4,[["expr",4]]]],[[["",0]],["str",0]],[[["",0]],["tokentext",3]],[[["",0]],["tokentext",3]],[[["",0]],["tokentext",3]],[[["",0]],["tokentext",3]],[[["",0]],["tokentext",3]],[[["",0]],["option",4,[["textrange",3]]]],[[["",0]],["option",4,[["textrange",3]]]],[[["",0]],["option",4,[["blockexpr",3]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtokenstring",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["syntaxtoken",6]],[[["",0]],["syntaxkind",4]],[[["",0]],["option",4,[["tokentree",3]]]],[[["",0]],["option",4,[["tokentree",3]]]],[[["",0]],["option",4,[["tokentree",3]]]],[[["",0]],["option",4,[["tokentree",3]]]],[[["",0]]],[[["",0]],["path",3]],[[["",0]],["option",4,[["type",4]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["type",4]]]],[[["",0]],["option",4,[["type",4]]]],[[["",0]],["option",4,[["type",4]]]],[[["",0]],["option",4,[["type",4]]]],[[["",0]],["option",4,[["type",4]]]],[[["",0]],["option",4,[["type",4]]]],[[["",0]],["option",4,[["type",4]]]],[[["",0]],["option",4,[["type",4]]]],[[["",0]],["option",4,[["type",4]]]],[[["",0]],["option",4,[["type",4]]]],[[["",0]],["option",4,[["type",4]]]],[[["",0]],["option",4,[["type",4]]]],[[["",0]],["option",4,[["type",4]]]],[[["",0]],["option",4,[["type",4]]]],[[["",0]],["option",4,[["type",4]]]],[[["",0]],["option",4,[["type",4]]]],[[["",0]],["option",4,[["type",4]]]],[[["",0]],["option",4,[["type",4]]]],[[["",0]],["option",4,[["type",4]]]],[[["",0]],["option",4,[["type",4]]]],[[["",0]],["option",4,[["type",4]]]],[[["",0]],["option",4,[["typeboundlist",3]]]],[[["",0]],["option",4,[["typeboundlist",3]]]],[[["",0]],["option",4,[["typeboundlist",3]]]],[[["",0]],["option",4,[["typeboundlist",3]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["usetree",3]]]],[[["",0]],["option",4,[["usetreelist",3]]]],[[["",0]],["astchildren",3,[["usetree",3]]]],[[["",0]],["option",4,[["cow",4,[["str",0]]]]]],[[["",0]],["option",4,[["cow",4]]]],[[["",0]],["option",4,[["u128",0]]]],[[["",0]],["option",4,[["f64",0]]]],[[["",0]],["option",4,[["char",0]]]],[[["",0]],["option",4,[["u8",0]]]],[[["",0]],["option",4,[["variantlist",3]]]],[[["",0]],["astchildren",3,[["variant",3]]]],[[["",0]],["option",4,[["visibility",3]]]],[[["",0]],["option",4,[["visibility",3]]]],[[["",0]],["option",4,[["whereclause",3]]]],[[["",0]],["option",4,[["whereclause",3]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],[[["",0]],["option",4,[["syntaxtoken",6]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u8",0]],["indentlevel",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["indentlevel",3]],[[["",0],["",0]]],[[["",0],["indentlevel",3]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["u8",0]],["indentlevel",3]],[[]],[[["syntaxelement",6]],["indentlevel",3]],[[["syntaxnode",6]],["indentlevel",3]],[[["syntaxtoken",6]],["indentlevel",3]],[[["",0],["indentlevel",3]]],[[["",0]],["indentlevel",3]],[[]],[[["",0]],["bool",0]],[[["",0]]],[[],["indentlevel",3]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],null,null,null,[[["",0],["indentlevel",3]]],[[["",0]],["genericparamlist",3]],[[["",0]],["whereclause",3]],[[["",0],["indentlevel",3]]],[[["",0]],["indentlevel",3]],[[["",0],["indentlevel",3]]],[[["",0]]],[[],["arglist",3]],[[],["associtemlist",3]],[[["option",4,[["expr",4]]]],["blockexpr",3]],[[["expr",4],["expr",4]],["expr",4]],[[["expr",4]],["expr",4]],[[["expr",4],["binaryop",4],["expr",4]],["expr",4]],[[["option",4,[["lifetime",3]]],["option",4,[["expr",4]]]],["expr",4]],[[["expr",4],["arglist",3]],["expr",4]],[[["expr",4]],["expr",4]],[[["option",4,[["lifetime",3]]]],["expr",4]],[[],["expr",4]],[[["expr",4],["str",0]],["expr",4]],[[["pat",4],["expr",4],["blockexpr",3]],["expr",4]],[[["expr",4],["blockexpr",3],["option",4,[["elsebranch",4]]]],["expr",4]],[[["pat",4],["expr",4]],["letexpr",3]],[[["str",0]],["literal",3]],[[["blockexpr",3]],["expr",4]],[[["expr",4],["arglist",3]],["expr",4]],[[["expr",4],["matcharmlist",3]],["expr",4]],[[["expr",4],["nameref",3],["arglist",3]],["expr",4]],[[["expr",4]],["expr",4]],[[["path",3]],["expr",4]],[[["syntaxkind",4],["expr",4]],["expr",4]],[[["expr",4],["bool",0]],["expr",4]],[[["option",4,[["expr",4]]]],["expr",4]],[[["expr",4]],["exprstmt",3]],[[["expr",4]],["expr",4]],[[],["expr",4]],[[],["expr",4]],null,[[["option",4,[["visibility",3]]],["name",3],["option",4,[["genericparamlist",3]]],["paramlist",3],["blockexpr",3],["option",4,[["rettype",3]]],["bool",0]],["fn",3]],[[],["genericparamlist",3]],[[["option",4,[["expr",4]]]],["blockexpr",3]],[[["bool",0],["bool",0],["name",3]],["identpat",3]],[[["path",3],["option",4,[["genericparamlist",3]]],["option",4,[["genericparamlist",3]]]],["impl",3]],[[["path",3],["path",3],["option",4,[["genericparamlist",3]]]],["impl",3]],[[["option",4,[["visibility",3]]],["name",3],["type",4],["expr",4]],["const",3]],[[],["path",3]],[[["pat",4],["option",4,[["type",4]]],["option",4,[["expr",4]]]],["letstmt",3]],[[["str",0]],["lifetime",3]],[[["lifetime",3]],["lifetimeparam",3]],[[["str",0]],["literalpat",3]],[[["option",4,[["expr",4]]],["expr",4]],["matcharm",3]],[[],["matcharmlist",3]],[[["expr",4],["expr",4]],["matcharm",3]],[[["str",0]],["name",3]],[[["str",0]],["nameref",3]],[[["pat",4],["type",4]],["param",3]],[[["option",4,[["selfparam",3]]]],["paramlist",3]],[[["path",3],["path",3]],["path",3]],[[["bool",0]],["path",3]],[[["str",0]],["path",3]],[[["path",3]],["pat",4]],[[["path",3],["pathsegment",3]],["path",3]],[[["nameref",3]],["pathsegment",3]],[[],["pathsegment",3]],[[],["pathsegment",3]],[[],["pathsegment",3]],[[["type",4],["option",4,[["pathtype",3]]]],["pathsegment",3]],[[["pathsegment",3]],["path",3]],[[["path",3],["recordexprfieldlist",3]],["recordexpr",3]],[[["nameref",3],["option",4,[["expr",4]]]],["recordexprfield",3]],[[],["recordexprfieldlist",3]],[[["option",4,[["visibility",3]]],["name",3],["type",4]],["recordfield",3]],[[],["recordfieldlist",3]],[[["path",3]],["recordpat",3]],[[["nameref",3],["pat",4]],["recordpatfield",3]],[[],["recordpatfieldlist",3]],[[["nameref",3]],["recordpatfield",3]],[[["path",3],["recordpatfieldlist",3]],["recordpat",3]],[[["type",4]],["rettype",3]],[[],["selfparam",3]],[[["option",4,[["visibility",3]]],["name",3],["option",4,[["genericparamlist",3]]],["fieldlist",4]],["struct",3]],[[["syntaxkind",4]],["syntaxtoken",6]],null,[[["option",4,[["visibility",3]]],["type",4]],["tuplefield",3]],[[],["tuplefieldlist",3]],[[],["tuplepat",3]],[[["path",3]],["tuplestructpat",3]],[[["str",0]],["type",4]],[[["path",3]],["type",4]],[[],["type",4]],[[["type",4],["bool",0]],["type",4]],[[],["type",4]],[[],["type",4]],[[["name",3],["option",4,[["typeboundlist",3]]]],["typeparam",3]],[[["option",4,[["visibility",3]]],["usetree",3]],["use",3]],[[["path",3],["option",4,[["usetreelist",3]]],["option",4,[["rename",3]]],["bool",0]],["usetree",3]],[[],["usetree",3]],[[],["usetreelist",3]],[[["name",3],["option",4,[["fieldlist",4]]]],["variant",3]],[[],["visibility",3]],[[],["visibility",3]],[[],["whereclause",3]],[[["path",3]],["wherepred",3]],[[],["wildcardpat",3]],[[],["expr",4]],[[],["blockexpr",3]],[[],["expr",4]],[[],["expr",4]],[[],["expr",4]],[[["type",4]],["expr",4]],[[["type",4]],["expr",4]],[[],["expr",4]],[[],["option",4,[["expr",4]]]],[[["str",0]],["path",3]],[[],["expr",4]],[[],["option",4,[["path",3]]]],[[["name",3]],["identpat",3]],[[],["type",4]],[[["type",4]],["type",4]],[[["type",4],["type",4]],["type",4]],[[],["expr",4]],[[],["expr",4]],null,[[],["syntaxtoken",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["str",0]],["syntaxtoken",6]],[[]],[[]],[[["str",0]],["syntaxtoken",6]],[[["str",0]],["wsbuilder",3]],[[],["syntaxtoken",6]],[[],["syntaxtoken",6]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["str",0]],["syntaxtoken",6]],[[["",0]],["syntaxtoken",6]],[[["str",0]],["option",4,[["expr",4]]]],null,null,[[],["position",3]],[[]],[[]],[[],["position",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[],["position",3]],[[["",0],["formatter",3]],["result",6]],[[]],[[["position",3]]],[[["position",3],["vec",3,[["syntaxelement",6]]]]],[[["position",3],["vec",3,[["syntaxelement",6]]]]],[[["position",3]]],[[]],[[],["position",3]],[[]],[[["rangeinclusive",3,[["syntaxelement",6]]]]],[[]],[[]],[[["rangeinclusive",3,[["syntaxelement",6]]],["vec",3,[["syntaxelement",6]]]]],[[["vec",3,[["syntaxelement",6]]]]],[[],["syntaxelement",6]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["path",3]],["string",3]]],"p":[[4,"SyntaxKind"],[4,"TokenAtOffset"],[4,"WalkEvent"],[4,"Direction"],[4,"NodeOrToken"],[3,"TextRange"],[3,"TextSize"],[3,"TokenText"],[3,"SmolStr"],[3,"Preorder"],[3,"GreenNode"],[3,"SyntaxText"],[4,"RustLanguage"],[3,"SyntaxTreeBuilder"],[3,"SyntaxError"],[3,"AstPtr"],[3,"Parse"],[6,"SyntaxNodePtr"],[6,"SyntaxNode"],[6,"SyntaxToken"],[6,"SyntaxElement"],[13,"Node"],[13,"Token"],[13,"Single"],[13,"Between"],[13,"Enter"],[13,"Leave"],[3,"TreeDiff"],[4,"Radix"],[4,"ArithOp"],[4,"LogicOp"],[4,"BinaryOp"],[4,"Expr"],[4,"Type"],[4,"GenericArg"],[4,"BlockModifier"],[4,"CommentShape"],[4,"ElseBranch"],[4,"LiteralKind"],[4,"Pat"],[4,"CallableExpr"],[4,"Item"],[4,"AssocItem"],[4,"TypeOrConstParam"],[4,"GenericParam"],[4,"PathSegmentKind"],[4,"UnaryOp"],[4,"ArrayExprKind"],[4,"Adt"],[4,"CmpOp"],[4,"RangeOp"],[4,"Stmt"],[4,"ExternItem"],[4,"TypeBoundKind"],[4,"Ordering"],[4,"VisibilityKind"],[4,"FieldKind"],[4,"CommentPlacement"],[4,"AttrKind"],[4,"NameLike"],[4,"Macro"],[4,"SelfParamKind"],[4,"NameOrNameRef"],[4,"StructKind"],[4,"FieldList"],[3,"NameRef"],[3,"ExternBlock"],[3,"Fn"],[3,"FnPtrType"],[3,"MatchArmList"],[3,"RecordExprFieldList"],[3,"RecordPatFieldList"],[3,"GenericParamList"],[3,"AssocItemList"],[3,"WhereClause"],[3,"UseTreeList"],[3,"SelfParam"],[3,"RefExpr"],[3,"RefType"],[3,"RefPat"],[8,"HasArgList"],[3,"MacroDef"],[3,"ArgList"],[3,"Attr"],[3,"Path"],[3,"PathSegment"],[3,"Rename"],[3,"CastExpr"],[3,"Impl"],[3,"Trait"],[3,"BlockExpr"],[3,"ClosureExpr"],[3,"IdentPat"],[8,"HasAttrs"],[3,"AwaitExpr"],[3,"IndexExpr"],[3,"LetElse"],[3,"ConstBlockPat"],[3,"Const"],[3,"Static"],[3,"DocCommentIter"],[3,"AttrDocCommentIter"],[3,"QuoteOffsets"],[3,"SlicePatComponents"],[3,"Name"],[3,"Lifetime"],[3,"GenericArgList"],[3,"ParamList"],[3,"RetType"],[3,"PathType"],[3,"TypeArg"],[3,"AssocTypeArg"],[3,"LifetimeArg"],[3,"ConstArg"],[3,"TypeBoundList"],[3,"MacroCall"],[3,"TokenTree"],[3,"MacroItems"],[3,"MacroStmts"],[3,"SourceFile"],[3,"Enum"],[3,"ExternCrate"],[3,"MacroRules"],[3,"Module"],[3,"Struct"],[3,"TypeAlias"],[3,"Union"],[3,"Use"],[3,"Visibility"],[3,"ItemList"],[3,"UseTree"],[3,"Abi"],[3,"Param"],[3,"RecordFieldList"],[3,"TupleFieldList"],[3,"RecordField"],[3,"TupleField"],[3,"VariantList"],[3,"Variant"],[3,"ExternItemList"],[3,"ConstParam"],[3,"LifetimeParam"],[3,"TypeParam"],[3,"WherePred"],[3,"Meta"],[3,"ExprStmt"],[3,"LetStmt"],[3,"ArrayExpr"],[3,"BinExpr"],[3,"BoxExpr"],[3,"BreakExpr"],[3,"CallExpr"],[3,"ContinueExpr"],[3,"FieldExpr"],[3,"ForExpr"],[3,"IfExpr"],[3,"Literal"],[3,"LoopExpr"],[3,"MacroExpr"],[3,"MatchExpr"],[3,"MethodCallExpr"],[3,"ParenExpr"],[3,"PathExpr"],[3,"PrefixExpr"],[3,"RangeExpr"],[3,"RecordExpr"],[3,"ReturnExpr"],[3,"TryExpr"],[3,"TupleExpr"],[3,"WhileExpr"],[3,"YieldExpr"],[3,"LetExpr"],[3,"UnderscoreExpr"],[3,"StmtList"],[3,"Label"],[3,"RecordExprField"],[3,"MatchArm"],[3,"MatchGuard"],[3,"ArrayType"],[3,"DynTraitType"],[3,"ForType"],[3,"ImplTraitType"],[3,"InferType"],[3,"MacroType"],[3,"NeverType"],[3,"ParenType"],[3,"PtrType"],[3,"SliceType"],[3,"TupleType"],[3,"TypeBound"],[3,"BoxPat"],[3,"RestPat"],[3,"LiteralPat"],[3,"MacroPat"],[3,"OrPat"],[3,"ParenPat"],[3,"PathPat"],[3,"WildcardPat"],[3,"RangePat"],[3,"RecordPat"],[3,"SlicePat"],[3,"TuplePat"],[3,"TupleStructPat"],[3,"RecordPatField"],[3,"AnyHasArgList"],[3,"AnyHasAttrs"],[3,"AnyHasDocComments"],[3,"AnyHasGenericParams"],[3,"AnyHasLoopBody"],[3,"AnyHasModuleItem"],[3,"AnyHasName"],[3,"AnyHasTypeBounds"],[3,"AnyHasVisibility"],[3,"Whitespace"],[3,"Comment"],[3,"String"],[3,"ByteString"],[3,"IntNumber"],[3,"FloatNumber"],[3,"Char"],[3,"Byte"],[3,"Ident"],[3,"CommentKind"],[3,"AstChildren"],[8,"AstNode"],[8,"AstToken"],[8,"IsString"],[8,"HasTypeBounds"],[8,"HasDocComments"],[8,"HasGenericParams"],[8,"HasModuleItem"],[8,"HasLoopBody"],[8,"HasName"],[8,"HasVisibility"],[13,"Enum"],[13,"Struct"],[13,"Union"],[13,"ElementList"],[13,"Repeat"],[13,"Const"],[13,"Fn"],[13,"MacroCall"],[13,"TypeAlias"],[13,"LogicOp"],[13,"ArithOp"],[13,"CmpOp"],[13,"Assignment"],[13,"Async"],[13,"Unsafe"],[13,"Try"],[13,"Const"],[13,"Label"],[13,"Call"],[13,"MethodCall"],[13,"Eq"],[13,"Ord"],[13,"Block"],[13,"IfExpr"],[13,"ArrayExpr"],[13,"AwaitExpr"],[13,"BinExpr"],[13,"BlockExpr"],[13,"BoxExpr"],[13,"BreakExpr"],[13,"CallExpr"],[13,"CastExpr"],[13,"ClosureExpr"],[13,"ContinueExpr"],[13,"FieldExpr"],[13,"ForExpr"],[13,"IfExpr"],[13,"IndexExpr"],[13,"Literal"],[13,"LoopExpr"],[13,"MacroExpr"],[13,"MacroStmts"],[13,"MatchExpr"],[13,"MethodCallExpr"],[13,"ParenExpr"],[13,"PathExpr"],[13,"PrefixExpr"],[13,"RangeExpr"],[13,"RecordExpr"],[13,"RefExpr"],[13,"ReturnExpr"],[13,"TryExpr"],[13,"TupleExpr"],[13,"WhileExpr"],[13,"YieldExpr"],[13,"LetExpr"],[13,"UnderscoreExpr"],[13,"Fn"],[13,"MacroCall"],[13,"Static"],[13,"TypeAlias"],[13,"Name"],[13,"Index"],[13,"RecordFieldList"],[13,"TupleFieldList"],[13,"TypeArg"],[13,"AssocTypeArg"],[13,"LifetimeArg"],[13,"ConstArg"],[13,"ConstParam"],[13,"LifetimeParam"],[13,"TypeParam"],[13,"Const"],[13,"Enum"],[13,"ExternBlock"],[13,"ExternCrate"],[13,"Fn"],[13,"Impl"],[13,"MacroCall"],[13,"MacroRules"],[13,"MacroDef"],[13,"Module"],[13,"Static"],[13,"Struct"],[13,"Trait"],[13,"TypeAlias"],[13,"Union"],[13,"Use"],[13,"String"],[13,"ByteString"],[13,"IntNumber"],[13,"FloatNumber"],[13,"Char"],[13,"Byte"],[13,"Bool"],[13,"MacroRules"],[13,"MacroDef"],[13,"NameRef"],[13,"Name"],[13,"Lifetime"],[13,"Name"],[13,"NameRef"],[13,"IdentPat"],[13,"BoxPat"],[13,"RestPat"],[13,"LiteralPat"],[13,"MacroPat"],[13,"OrPat"],[13,"ParenPat"],[13,"PathPat"],[13,"WildcardPat"],[13,"RangePat"],[13,"RecordPat"],[13,"RefPat"],[13,"SlicePat"],[13,"TuplePat"],[13,"TupleStructPat"],[13,"ConstBlockPat"],[13,"Name"],[13,"Type"],[13,"ExprStmt"],[13,"Item"],[13,"LetStmt"],[13,"Record"],[13,"Tuple"],[13,"ArrayType"],[13,"DynTraitType"],[13,"FnPtrType"],[13,"ForType"],[13,"ImplTraitType"],[13,"InferType"],[13,"MacroType"],[13,"NeverType"],[13,"ParenType"],[13,"PathType"],[13,"PtrType"],[13,"RefType"],[13,"SliceType"],[13,"TupleType"],[13,"PathType"],[13,"ForType"],[13,"Lifetime"],[13,"Type"],[13,"Const"],[13,"In"],[3,"IndentLevel"],[8,"AstNodeEdit"],[8,"Indent"],[8,"GenericParamsOwnerEdit"],[8,"AttrsOwnerEdit"],[3,"WsBuilder"],[3,"Position"],[8,"Element"]]},\
"test_utils":{"doc":"Assorted testing utilities.","t":[3,17,17,3,6,3,13,13,4,5,5,14,5,0,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,12,5,12,11,11,11,12,5,5,5,5,5,11,5,11,11,11,11,11,11,11,11,12,12,11,11,11,12,5,11,11,5,11,12,11,5,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,5,5,5],"n":["AssertLinear","CURSOR_MARKER","ESCAPED_CURSOR_MARKER","Fixture","FxHashMap","MiniCore","Offset","Range","RangeOrOffset","__diff","add_cursor","assert_eq_text","bench","bench_fixture","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cfg_atoms","cfg_key_values","clone","clone_into","default","deps","drop","edition","ensure_file_contents","env","eq","expect_offset","expect_range","extern_prelude","extract_annotations","extract_offset","extract_range","extract_range_or_offset","extract_tags","fmt","format_diff","from","from","from","from","into","into","into","into","introduce_new_source_root","krate","ne","next_round","parse","path","project_root","range_or_empty","sample","skip_slow_tests","source_code","text","to_owned","try_ensure_file_contents","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","0","0","big_struct","big_struct_n","glorious_old_parser","numerous_macro_rules"],"q":["test_utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","test_utils::RangeOrOffset","","test_utils::bench_fixture","","",""],"d":["","","","","Type alias for a hashmap using the <code>fx</code> hash algorithm.","","","","","","Inserts <code>$0</code> marker into the <code>text</code> at <code>offset</code>.","Asserts that two strings are equal, otherwise displays a …","Utility for writing benchmark tests.","Generates large snippets of Rust code for usage in the …","","","","","","","","","","","","","","","","","Checks that the <code>file</code> has the specified <code>contents</code>. If that …","","","","","","Extracts <code>//^^^ some text</code> annotations.","Infallible version of <code>try_extract_offset()</code>.","Infallible version of <code>try_extract_range()</code>.","Extracts <code>TextRange</code> or <code>TextSize</code> depending on the amount of …","Extracts ranges, marked with <code>&lt;tag&gt; &lt;/tag&gt;</code> pairs from the …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Parses text which looks like this:","","Returns the path to the root directory of <code>rust-analyzer</code> …","","","Returns <code>false</code> if slow tests should not run, otherwise …","Strips parts of minicore.rs which are flagged by inactive …","","","Checks that the <code>file</code> has the specified <code>contents</code>. If that …","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,1,1,0,0,0,0,0,0,2,3,4,1,2,3,4,1,4,4,1,1,3,4,3,4,0,4,4,1,1,4,0,0,0,0,0,4,0,2,3,4,1,2,3,4,1,4,4,4,3,4,4,0,1,3,0,2,4,1,0,2,3,4,1,2,3,4,1,2,3,4,1,5,6,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,[[["str",0],["str",0]],["vec",3,[["chunk",4],["global",3]]]],[[["str",0],["textsize",3]],["string",3]],null,[[["str",0]]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,[[["",0]],["rangeoroffset",4]],[[["",0],["",0]]],[[],["assertlinear",3]],null,[[["",0]]],null,[[["path",3],["str",0]]],null,[[["",0],["fixture",3]],["bool",0]],[[],["textsize",3]],[[],["textrange",3]],null,[[["str",0]],["vec",3]],[[["str",0]]],[[["str",0]]],[[["str",0]]],[[["str",0],["str",0]]],[[["",0],["formatter",3]],["result",6]],[[["vec",3,[["chunk",4]]]],["string",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["",0],["fixture",3]],["bool",0]],[[["",0]],["bool",0]],[[["str",0]]],null,[[],["pathbuf",3]],[[],["textrange",3]],[[["",0],["f64",0],["f64",0]]],[[],["bool",0]],[[],["string",3]],null,[[["",0]]],[[["path",3],["str",0]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,[[],["string",3]],[[["u32",0]],["string",3]],[[],["string",3]],[[],["string",3]]],"p":[[4,"RangeOrOffset"],[3,"MiniCore"],[3,"AssertLinear"],[3,"Fixture"],[13,"Range"],[13,"Offset"]]},\
"text_edit":{"doc":"Representation of a <code>TextEdit</code>.","t":[3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Indel","TextEdit","TextEditBuilder","TextRange","TextSize","add","add","add","add","add_assign","add_assign","apply","apply","apply_to_offset","at","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","checked_add","checked_add","checked_sub","checked_sub","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","contains","contains_inclusive","contains_range","cover","cover_offset","default","default","default","default","delete","delete","delete","delete","empty","end","end_bound","eq","eq","eq","finish","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","hash","hash","insert","insert","insert","insert","intersect","into","into","into","into","into","into_iter","invalidates_offset","is_empty","is_empty","is_empty","iter","len","len","ne","ne","ne","new","of","ordering","partial_cmp","replace","replace","replace","start","start_bound","sub","sub","sub","sub","sub_assign","sub_assign","sum","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","up_to"],"q":["text_edit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["<code>InsertDelete</code> – a single “atomic” change to text","","","A range in text, represented as a pair of <code>TextSize</code>.","A measure of text length. Also, equivalently, an index …","","","","","","","","","","Create a new <code>TextRange</code> with the given <code>offset</code> and <code>len</code> (…","","","","","","","","","","","","Add an offset to this range.","Checked addition. Returns <code>None</code> if overflow occurred.","Subtract an offset from this range.","Checked subtraction. Returns <code>None</code> if overflow occurred.","","","","","","","","","","","","Check if this range contains an offset.","Check if this range contains an offset.","Check if this range completely contains another range.","Extends the range to cover <code>other</code> as well.","Extends the range to cover <code>other</code> offsets as well.","","","","","","","","Refers to offsets in the original text","Create a zero-length range at the specified offset (…","The end point of this range.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","The range covered by both ranges, if it exists. If the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Check if this range is empty.","","","The size of this range.","","","","Creates a new <code>TextRange</code> with the given <code>start</code> and <code>end</code> (…","The text size of some primitive text-like object.","Relative order of the two ranges (overlapping ranges are …","","","","","The start point of this range.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a range up to the given end (<code>..end</code>)."],"i":[0,0,0,0,0,1,1,2,2,1,2,3,4,4,1,3,4,5,1,2,3,4,5,1,2,4,1,2,1,2,3,4,5,1,2,3,4,5,1,2,2,1,1,1,1,1,4,5,1,2,3,4,5,3,1,1,1,3,1,2,5,3,4,5,1,2,3,4,5,1,2,2,3,1,2,3,4,5,3,1,3,4,5,1,2,4,5,4,5,1,4,4,1,3,1,2,1,2,1,2,3,4,5,1,1,1,1,2,2,1,2,2,3,4,5,1,2,3,4,5,1,2,2,3,4,5,1,2,3,4,5,1,2,4,1],"f":[null,null,null,null,null,[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textsize",3]],[[["textsize",3]],["textsize",3]],[[["",0]]],[[["",0]]],[[["",0],["string",3]]],[[["",0],["string",3]]],[[["",0],["textsize",3]],["option",4,[["textsize",3]]]],[[["textsize",3],["textsize",3]],["textrange",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[],["texteditbuilder",3]],[[["textsize",3]],["option",4,[["textrange",3]]]],[[["textsize",3]],["option",4,[["textsize",3]]]],[[["textsize",3]],["option",4,[["textrange",3]]]],[[["textsize",3]],["option",4,[["textsize",3]]]],[[["",0]],["indel",3]],[[["",0]],["textedit",3]],[[["",0]],["texteditbuilder",3]],[[["",0]],["textrange",3]],[[["",0]],["textsize",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["textsize",3]],["ordering",4]],[[["textsize",3]],["bool",0]],[[["textsize",3]],["bool",0]],[[["textrange",3]],["bool",0]],[[["textrange",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[],["textedit",3]],[[],["texteditbuilder",3]],[[],["textrange",3]],[[],["textsize",3]],[[["textrange",3]],["indel",3]],[[["textrange",3]],["textedit",3]],[[["",0],["textrange",3]]],null,[[["textsize",3]],["textrange",3]],[[],["textsize",3]],[[["",0]],["bound",4,[["textsize",3]]]],[[["",0],["indel",3]],["bool",0]],[[["",0],["textrange",3]],["bool",0]],[[["",0],["textsize",3]],["bool",0]],[[],["textedit",3]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[["u32",0]],["textsize",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["textsize",3],["string",3]],["indel",3]],[[["textsize",3],["string",3]],["textedit",3]],[[["",0],["textsize",3],["string",3]]],null,[[["textrange",3]],["option",4,[["textrange",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["textsize",3]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[],["bool",0]],[[["",0]],["iter",3,[["indel",3]]]],[[["",0]],["usize",0]],[[],["textsize",3]],[[["",0],["indel",3]],["bool",0]],[[["",0],["textrange",3]],["bool",0]],[[["",0],["textsize",3]],["bool",0]],[[["textsize",3],["textsize",3]],["textrange",3]],[[],["textsize",3]],[[["textrange",3]],["ordering",4]],[[["",0],["textsize",3]],["option",4,[["ordering",4]]]],[[["textrange",3],["string",3]],["indel",3]],[[["textrange",3],["string",3]],["textedit",3]],[[["",0],["textrange",3],["string",3]]],[[],["textsize",3]],[[["",0]],["bound",4,[["textsize",3]]]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textrange",3]],[[["textsize",3]],["textsize",3]],[[["textsize",3]],["textsize",3]],[[["",0]]],[[["",0]]],[[],["textsize",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["usize",0]],["result",4,[["textsize",3],["tryfrominterror",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["textedit",3]],["result",4,[["textedit",3]]]],[[["textsize",3]],["textrange",3]]],"p":[[3,"TextRange"],[3,"TextSize"],[3,"Indel"],[3,"TextEdit"],[3,"TextEditBuilder"]]},\
"toolchain":{"doc":"Discovery of <code>cargo</code> &amp; <code>rustc</code> executables.","t":[5,5,5,5],"n":["cargo","rustc","rustfmt","rustup"],"q":["toolchain","","",""],"d":["","","",""],"i":[0,0,0,0],"f":[[[],["pathbuf",3]],[[],["pathbuf",3]],[[],["pathbuf",3]],[[],["pathbuf",3]]],"p":[]},\
"tt":{"doc":"<code>tt</code> crate defines a <code>TokenTree</code> data structure: this is the …","t":[12,13,13,13,3,4,3,13,13,4,13,3,13,13,3,13,3,4,3,13,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,3,13,13,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12],"n":["0","Alone","Brace","Bracket","Delimiter","DelimiterKind","Ident","Ident","Joint","Leaf","Leaf","Literal","Literal","Parenthesis","Punct","Punct","SmolStr","Spacing","Subtree","Subtree","TokenId","TokenTree","as_debug_string","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","char","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","count","default","default","delimiter","delimiter_kind","deref","deserialize","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_iter","from_iter","from_str","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","id","id","id","id","id","into","into","into","into","into","into","into","into","into","into","into","is_empty","is_heap_allocated","kind","len","ne","ne","ne","ne","ne","ne","ne","ne","new","new_inline","new_inline_from_ascii","partial_cmp","pretty","serialize","spacing","text","text","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","token_trees","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unspecified","0","0","0","0","0","Cursor","Leaf","Subtree","TokenBuffer","TokenTreeRef","begin","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bump","bump_subtree","clone","clone_into","cloned","end","eof","eq","fmt","fmt","fmt","from","from","from","from_subtree","from_tokens","into","into","into","is_root","subtree","to_owned","token_tree","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","0","1","1"],"q":["tttt::Leaf","","","tt::TokenTree","","tt::buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tt::buffer::TokenTreeRef","","",""],"d":["","","","","","","","","","","","","","","","","A <code>SmolStr</code> is a string type that has the following …","","","","Represents identity of the token.","","A simple line string used for debugging","","","","","","","","","","","","","","","","","","","","","","","","","Stateful iteration over token trees.","","","","","","","","","","","","","","","","","","","","","","","","","Count the number of tokens recursively","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Constructs inline variant of <code>SmolStr</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A safe version of <code>Cursor</code> from <code>syn</code> crate …","","","A token tree buffer The safe version of <code>syn</code> <code>TokenBuffer</code>","","Creates a cursor referencing the first token in the buffer …","","","","","","","Bump the cursor","Bump the cursor, if it is a subtree, returns a cursor into …","","","","If the cursor is pointing at the end of a subtree, returns …","Check whether it is eof","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check whether it is a top level","If the cursor is pointing at a <code>Subtree</code>, returns a cursor …","","If the cursor is pointing at a <code>TokenTree</code>, returns it","","","","","","","","","","","","",""],"i":[1,2,3,3,0,0,0,4,2,0,5,0,4,3,0,4,0,0,0,5,0,0,6,7,1,5,4,6,8,7,7,3,9,10,2,11,1,5,4,6,8,7,3,9,10,2,11,0,10,1,5,4,6,8,7,3,9,10,2,11,1,5,4,6,8,7,3,9,10,2,11,7,6,6,7,6,6,7,7,5,1,5,4,6,8,7,7,7,7,7,3,9,10,2,11,1,5,5,4,4,6,6,8,7,7,3,9,9,10,10,2,11,11,1,5,5,5,4,4,4,4,6,8,7,7,3,9,10,2,11,7,7,7,7,7,1,5,4,6,8,7,3,9,10,2,11,4,8,9,10,11,1,5,4,6,8,7,3,9,10,2,11,7,7,8,7,1,5,4,6,8,9,10,11,7,7,7,7,0,7,10,9,11,1,5,4,6,8,7,3,9,10,2,11,5,4,6,7,7,9,10,11,6,1,5,4,6,8,7,3,9,10,2,11,1,5,4,6,8,7,3,9,10,2,11,1,5,4,6,8,7,3,9,10,2,11,1,12,13,14,15,16,0,17,17,0,0,18,18,17,19,18,17,19,19,19,19,19,17,19,19,19,18,17,19,18,17,19,18,18,18,17,19,19,19,19,19,18,17,19,18,17,19,18,17,19,20,21,20,21],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["string",3]],[[["",0]],["str",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["str",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,null,[[["",0]],["tokenid",3]],[[["",0]],["tokentree",4]],[[["",0]],["leaf",4]],[[["",0]],["subtree",3]],[[["",0]],["delimiter",3]],[[["",0]],["smolstr",3]],[[["",0]],["delimiterkind",4]],[[["",0]],["literal",3]],[[["",0]],["punct",3]],[[["",0]],["spacing",4]],[[["",0]],["ident",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["smolstr",3]],["ordering",4]],[[["",0]],["usize",0]],[[],["subtree",3]],[[],["smolstr",3]],null,[[["",0]],["option",4,[["delimiterkind",4]]]],[[["",0]],["str",0]],[[],["result",4,[["smolstr",3]]]],[[]],[[["",0],["tokenid",3]],["bool",0]],[[["",0],["tokentree",4]],["bool",0]],[[["",0],["leaf",4]],["bool",0]],[[["",0],["subtree",3]],["bool",0]],[[["",0],["delimiter",3]],["bool",0]],[[["",0],["str",0]],["bool",0]],[[["",0],["string",3]],["bool",0]],[[["",0],["str",0]],["bool",0]],[[["",0],["string",3]],["bool",0]],[[["",0],["smolstr",3]],["bool",0]],[[["",0],["delimiterkind",4]],["bool",0]],[[["",0],["literal",3]],["bool",0]],[[["",0],["punct",3]],["bool",0]],[[["",0],["spacing",4]],["bool",0]],[[["",0],["ident",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[["leaf",4]],["tokentree",4]],[[]],[[["subtree",3]],["tokentree",4]],[[]],[[["ident",3]],["leaf",4]],[[["punct",3]],["leaf",4]],[[["literal",3]],["leaf",4]],[[]],[[]],[[],["smolstr",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["smolstr",3]],[[],["smolstr",3]],[[],["smolstr",3]],[[],["smolstr",3]],[[["str",0]],["result",4,[["smolstr",3]]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0]],["tokenid",3]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],null,[[["",0]],["usize",0]],[[["",0],["tokenid",3]],["bool",0]],[[["",0],["tokentree",4]],["bool",0]],[[["",0],["leaf",4]],["bool",0]],[[["",0],["subtree",3]],["bool",0]],[[["",0],["delimiter",3]],["bool",0]],[[["",0],["literal",3]],["bool",0]],[[["",0],["punct",3]],["bool",0]],[[["",0],["ident",3]],["bool",0]],[[],["smolstr",3]],[[["str",0]],["smolstr",3]],[[["usize",0]],["smolstr",3]],[[["",0],["smolstr",3]],["option",4,[["ordering",4]]]],[[],["string",3]],[[["",0]],["result",4]],null,null,null,[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[],["tokenid",3]],null,null,null,null,null,null,null,null,null,null,[[["",0]],["cursor",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[],["cursor",3]],[[],["cursor",3]],[[["",0]],["cursor",3]],[[["",0],["",0]]],[[["",0]],["tokentree",4]],[[],["option",4,[["subtree",3]]]],[[],["bool",0]],[[["",0],["cursor",3]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["subtree",3]],["tokenbuffer",3]],[[],["tokenbuffer",3]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[],["option",4,[["cursor",3]]]],[[["",0]]],[[],["option",4,[["tokentreeref",4]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null],"p":[[3,"TokenId"],[4,"Spacing"],[4,"DelimiterKind"],[4,"Leaf"],[4,"TokenTree"],[3,"Subtree"],[3,"SmolStr"],[3,"Delimiter"],[3,"Literal"],[3,"Punct"],[3,"Ident"],[13,"Literal"],[13,"Punct"],[13,"Ident"],[13,"Leaf"],[13,"Subtree"],[4,"TokenTreeRef"],[3,"TokenBuffer"],[3,"Cursor"],[13,"Subtree"],[13,"Leaf"]]},\
"vfs":{"doc":"Virtual File System","t":[12,3,3,3,3,4,3,13,13,3,13,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,13,4,13,8,13,4,13,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,10,12,10,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12],"n":["0","AbsPath","AbsPathBuf","AnchoredPath","AnchoredPathBuf","ChangeKind","ChangedFile","Create","Delete","FileId","Modify","Vfs","VfsPath","anchor","anchor","as_os_str","as_path","as_path","as_ref","as_ref","as_ref","assert","assert","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","change_kind","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","default","deref","display","ends_with","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exists","exists","extension","file_contents","file_id","file_id","file_name","file_path","file_set","file_stem","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","has_changes","hash","hash","hash","hash","into","into","into","into","into","into","into","into","is_created_or_deleted","iter","join","join","len","loader","name_and_extension","ne","ne","ne","ne","ne","ne","new_real_path","new_virtual_path","normalize","parent","parent","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path","path","pop","pop","set_file_contents","starts_with","starts_with","strip_prefix","take_changes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_path_buf","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","FileSet","FileSetConfig","FileSetConfigBuilder","add_file_set","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","builder","clone","clone_into","default","default","default","eq","equivalent","file_for_path","fmt","fmt","from","from","from","insert","into","into","into","iter","len","len","ne","partition","path_for_file","resolve_path","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Config","Directories","Directories","Entry","Files","Handle","Loaded","Message","Progress","Sender","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cargo_package_dependency","clone","clone","clone_into","clone_into","contains_dir","contains_dir","contains_file","contains_file","default","exclude","extensions","fmt","fmt","fmt","fmt","from","from","from","from","include","into","into","into","into","invalidate","load","load_sync","local_cargo_package","rs_files_recursively","set_config","spawn","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","watch","0","0","config_version","files","n_done","n_total"],"q":["vfsvfs::file_set","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","vfs::loader","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","vfs::loader::Entry","","vfs::loader::Message","","",""],"d":["","Wrapper around an absolute <code>Path</code>.","Wrapper around an absolute <code>PathBuf</code>.","Path relative to a file.","Path relative to a file.","Kind of file change.","Changed file in the <code>Vfs</code>.","The file was (re-)created","The file was deleted","Handle to a file in <code>Vfs</code>","The file was modified","Storage for all files read by rust-analyzer.","Path in <code>Vfs</code>.","File that this path is relative to.","File that this path is relative to.","","Coerces to an <code>AbsPath</code> slice.","Returns the <code>AbsPath</code> representation of <code>self</code> if <code>self</code> is on …","","","","Wrap the given absolute path in <code>AbsPathBuf</code>","Wrap the given absolute path in <code>AbsPath</code>","","","","","","","","","","","","","","","","","","","","Kind of change","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if the change is not <code>Delete</code>.","","File content corresponding to the given <code>file_id</code>.","Id of the given path if it exists in the <code>Vfs</code> and is not …","Id of the changed file","","File path corresponding to the given <code>file_id</code>.","Partitions a list of files into disjoint subsets.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns <code>true</code> if the <code>Vfs</code> contains changes.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the change is <code>Create</code> or <code>Delete</code>.","Returns an iterator over the stored ids and their …","Equivalent of <code>Path::join</code> for <code>AbsPath</code>.","Creates a new <code>VfsPath</code> with <code>path</code> adjoined to <code>self</code>.","Amount of files currently stored.","Object safe interface for file watching and reading.","Returns <code>self</code>’s base name and file extension.","","","","","","","Create a path from string. Input should be a string …","Creates an “in-memory” path from <code>/</code>-separated string.","Normalize the given path:","Equivalent of <code>Path::parent</code> for <code>AbsPath</code>.","Returns the <code>VfsPath</code> without its final component, if there …","","","","","Path relative to <code>anchor</code>’s containing directory.","Path relative to <code>anchor</code>’s containing directory.","Equivalent of <code>PathBuf::pop</code> for <code>AbsPathBuf</code>.","Remove the last component of <code>self</code> if there is one.","Update the <code>path</code> with the given <code>contents</code>. <code>None</code> means the …","","Returns <code>true</code> if <code>other</code> is a prefix of <code>self</code>.","Equivalent of <code>Path::strip_prefix</code> for <code>AbsPath</code>.","Drain and returns all the changes in the <code>Vfs</code>.","","","","","","","Equivalent of <code>Path::to_path_buf</code> for <code>AbsPath</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A set of <code>VfsPath</code>s identified by <code>FileId</code>s.","This contains path prefixes to partition a <code>Vfs</code> into <code>FileSet</code>…","Builder for <code>FileSetConfig</code>.","Add a new set of paths prefixes.","","","","","","","Build the <code>FileSetConfig</code>.","Returns a builder for <code>FileSetConfig</code>.","","","","","","","","Get the id corresponding to <code>path</code> if it exists in the set.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Insert the <code>file_id, path</code> pair into the set.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Iterate over this set’s ids.","Returns the number of sets currently held.","Returns the number of stored paths.","","Partition <code>vfs</code> into <code>FileSet</code>s.","Get the path corresponding to <code>file</code> if it exists in the set.","Get the id of the file corresponding to <code>path</code>.","","","","","","","","","","","<code>Handle</code>’s configuration.","Specifies a set of files on the file system.","The <code>Entry</code> is represented by <code>Directories</code>.","A set of files on the file system.","The <code>Entry</code> is represented by a raw set of files.","Interface for reading and watching files.","The handle loaded the following files’ content.","Message about an action taken by a <code>Handle</code>.","Indicate a gradual progress.","Type that will receive <code>Messages</code> from a <code>Handle</code>.","","","","","","","","","Returns:","","","","","Returns <code>true</code> if <code>path</code> is included in <code>self</code>.","Returns <code>true</code> if <code>path</code> is included in <code>self</code>.","Returns <code>true</code> if <code>path</code> is included in <code>self</code>.","Returns <code>true</code> if <code>path</code> is included in <code>self</code>.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The file’s content at <code>path</code> has been modified, and should …","Set of initially loaded files.","Load the content of the given file, returning <code>None</code> if it …","Returns:","Returns:","Set this handle’s configuration.","Spawn a new handle with the given <code>sender</code>.","","","","","","","","","","","","","","","Version number to associate progress updates to the right …","Index of watched entries in <code>load</code>.","","","","","",""],"i":[1,0,0,0,0,0,0,2,2,0,2,0,0,3,4,5,6,7,6,6,5,6,5,6,6,5,8,3,4,7,1,9,2,6,5,8,3,4,7,1,9,2,8,6,3,4,7,1,2,6,3,4,7,1,2,6,5,7,1,9,6,5,5,6,6,5,3,4,7,1,2,6,5,3,4,7,1,2,5,8,5,9,9,8,5,9,0,5,6,5,3,4,7,7,1,9,2,6,8,3,4,7,7,1,9,2,9,6,5,7,1,6,8,3,4,7,1,9,2,8,9,5,7,9,0,7,6,5,3,4,7,1,7,7,5,5,7,6,5,7,1,3,4,6,7,9,5,7,5,9,6,3,4,7,1,2,5,7,6,6,6,8,3,4,7,1,9,2,6,8,3,4,7,1,9,2,6,5,8,3,4,7,1,9,2,0,0,0,10,10,11,12,10,11,12,10,12,11,11,10,11,12,11,11,11,11,12,10,11,12,11,10,11,12,11,10,11,11,12,11,11,11,10,11,12,10,11,12,10,11,12,0,0,13,0,13,0,14,0,14,0,14,13,15,16,14,13,15,16,13,13,15,13,15,13,15,13,15,15,15,15,14,13,15,16,14,13,15,16,15,14,13,15,16,17,16,17,13,13,17,17,13,15,14,13,15,16,14,13,15,16,14,13,15,16,16,16,18,19,20,21,20,20],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["osstr",3]],[[["",0]],["abspath",3]],[[["",0]],["option",4,[["abspath",3]]]],[[["",0]],["path",3]],[[["",0]],["abspath",3]],[[["",0]],["path",3]],[[["pathbuf",3]],["abspathbuf",3]],[[["path",3]],["abspath",3]],[[["",0]],["abspath",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0]],["abspathbuf",3]],[[["",0]],["anchoredpathbuf",3]],[[["",0]],["anchoredpath",3]],[[["",0]],["vfspath",3]],[[["",0]],["fileid",3]],[[["",0]],["changekind",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["abspathbuf",3]],["ordering",4]],[[["",0],["abspath",3]],["ordering",4]],[[["",0],["vfspath",3]],["ordering",4]],[[["",0],["fileid",3]],["ordering",4]],[[],["vfs",3]],[[["",0]],["abspath",3]],[[["",0]],["display",3]],[[["",0],["relpath",3]],["bool",0]],[[["",0],["abspathbuf",3]],["bool",0]],[[["",0],["abspath",3]],["bool",0]],[[["",0],["abspath",3]],["bool",0]],[[["",0],["anchoredpathbuf",3]],["bool",0]],[[["",0],["anchoredpath",3]],["bool",0]],[[["",0],["vfspath",3]],["bool",0]],[[["",0],["fileid",3]],["bool",0]],[[["",0],["changekind",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["option",4,[["osstr",3]]]],[[["",0],["fileid",3]]],[[["",0],["vfspath",3]],["option",4,[["fileid",3]]]],null,[[["",0]],["option",4,[["osstr",3]]]],[[["",0],["fileid",3]],["vfspath",3]],null,[[["",0]],["option",4,[["osstr",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["abspathbuf",3]]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]]],[[["",0]],["abspathbuf",3]],[[["",0],["str",0]],["option",4,[["vfspath",3]]]],[[["",0]],["usize",0]],null,[[["",0]],["option",4]],[[["",0],["abspathbuf",3]],["bool",0]],[[["",0],["abspath",3]],["bool",0]],[[["",0],["anchoredpathbuf",3]],["bool",0]],[[["",0],["anchoredpath",3]],["bool",0]],[[["",0],["vfspath",3]],["bool",0]],[[["",0],["fileid",3]],["bool",0]],[[["string",3]],["vfspath",3]],[[["string",3]],["vfspath",3]],[[["",0]],["abspathbuf",3]],[[["",0]],["option",4,[["abspath",3]]]],[[["",0]],["option",4,[["vfspath",3]]]],[[["",0],["abspathbuf",3]],["option",4,[["ordering",4]]]],[[["",0],["abspath",3]],["option",4,[["ordering",4]]]],[[["",0],["vfspath",3]],["option",4,[["ordering",4]]]],[[["",0],["fileid",3]],["option",4,[["ordering",4]]]],null,null,[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0],["vfspath",3],["option",4,[["vec",3,[["u8",0]]]]]],["bool",0]],[[["",0],["abspath",3]],["bool",0]],[[["",0],["vfspath",3]],["bool",0]],[[["",0],["abspath",3]],["option",4,[["relpath",3]]]],[[["",0]],["vec",3,[["changedfile",3]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["abspathbuf",3]],[[["",0]],["string",3]],[[["pathbuf",3]],["result",4,[["abspathbuf",3],["pathbuf",3]]]],[[["str",0]],["result",4,[["abspathbuf",3],["pathbuf",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,[[["",0],["vec",3,[["vfspath",3]]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[],["filesetconfig",3]],[[],["filesetconfigbuilder",3]],[[["",0]],["fileset",3]],[[["",0],["",0]]],[[]],[[],["fileset",3]],[[]],[[["",0],["fileset",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["vfspath",3]],["option",4,[["fileid",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["",0],["fileid",3],["vfspath",3]]],[[]],[[]],[[]],[[["",0]]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0],["fileset",3]],["bool",0]],[[["",0],["vfs",3]],["vec",3,[["fileset",3]]]],[[["",0],["fileid",3]],["option",4,[["vfspath",3]]]],[[["",0],["anchoredpath",3]],["option",4,[["fileid",3]]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["abspathbuf",3]],["entry",4]],[[["",0]],["entry",4]],[[["",0]],["directories",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["abspath",3]],["bool",0]],[[["",0],["abspath",3]],["bool",0]],[[["",0],["abspath",3]],["bool",0]],[[["",0],["abspath",3]],["bool",0]],[[],["directories",3]],null,null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[["",0],["abspathbuf",3]]],null,[[["",0],["abspath",3]],["option",4,[["vec",3,[["u8",0]]]]]],[[["abspathbuf",3]],["entry",4]],[[["abspathbuf",3]],["entry",4]],[[["",0],["config",3]]],[[["sender",6]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null],"p":[[3,"FileId"],[4,"ChangeKind"],[3,"AnchoredPathBuf"],[3,"AnchoredPath"],[3,"AbsPath"],[3,"AbsPathBuf"],[3,"VfsPath"],[3,"ChangedFile"],[3,"Vfs"],[3,"FileSetConfigBuilder"],[3,"FileSet"],[3,"FileSetConfig"],[4,"Entry"],[4,"Message"],[3,"Directories"],[3,"Config"],[8,"Handle"],[13,"Files"],[13,"Directories"],[13,"Progress"],[13,"Loaded"]]},\
"vfs_notify":{"doc":"An implementation of <code>loader::Handle</code>, based on <code>walkdir</code> and …","t":[3,11,11,11,11,11,11,11,11,11,11,11,11],"n":["NotifyHandle","borrow","borrow_mut","fmt","from","into","invalidate","load_sync","set_config","spawn","try_from","try_into","type_id"],"q":["vfs_notify","","","","","","","","","","","",""],"d":["","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[["",0],["abspathbuf",3]]],[[["",0],["abspath",3]],["option",4,[["vec",3,[["u8",0]]]]]],[[["",0],["config",3]]],[[["sender",6]],["notifyhandle",3]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]]],"p":[[3,"NotifyHandle"]]},\
"xtask":{"doc":"See https://github.com/matklad/cargo-xtask/.","t":[5,0,0,0,5,5,0,5,0,5,3,3,17,17,17,12,11,11,11,11,11,12,5,5,11,11,11,11,5,11,11,12,11,12,12,11,12,12,11,11,11,11,11,11,3,13,3,13,3,13,18,18,3,13,3,13,3,13,3,13,3,13,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,3,13,4,13,3,13,17,11,11,11,11,11,11,11,11,12,5,11,11,11,5,5,11,11,11,12,11,11,11,11,11,11,11,11,11,11,3,3,6,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,12,12,11,11,12,5,12,11,12,12,11,11,11,11,11,11,11,11,0,13,13,13,13,3,4,13,11,11,11,11,11,11,11,11,5,11,11,12,12,5,5,5,11,11,11,11,11,11,11,5],"n":["date_iso","dist","flags","install","is_release_tag","main","metrics","project_root","release","run_fuzzer","Patch","Target","VERSION_DEV","VERSION_NIGHTLY","VERSION_STABLE","artifact_name","borrow","borrow","borrow_mut","borrow_mut","commit","contents","dist_client","dist_server","drop","from","from","get","gzip","into","into","name","new","original_contents","path","replace","server_path","symbols_path","try_from","try_from","try_into","try_into","type_id","type_id","Bb","Bb","Dist","Dist","FuzzTests","FuzzTests","HELP","HELP_","Help","Help","Install","Install","Metrics","Metrics","Promote","Promote","Release","Release","Xtask","XtaskCmd","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client","client","client_patch_version","code_bin","dry_run","dry_run","dry_run","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_env","from_env_","from_vec","from_vec_","help","into","into","into","into","into","into","into","into","into","into","jemalloc","mimalloc","parse_","parse_","parse_","parse_","parse_","parse_","parse_","parse_","parse_","run","run","run","run","run","server","server","subcommand","suffix","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","ClientOpt","Jemalloc","Malloc","Mimalloc","ServerOpt","System","VS_CODES","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","code_bin","fix_path_for_mac","from","from","from","install_client","install_server","into","into","into","malloc","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Host","Metrics","Unit","borrow","borrow","borrow_mut","borrow_mut","cpu","fmt","fmt","from","from","host","into","into","json","measure_analysis_stats","measure_analysis_stats_path","measure_analysis_stats_self","measure_build","mem","metrics","new","new","os","parse_metrics","perf_revision","report","revision","timestamp","to_json","to_json","try_from","try_from","try_into","try_into","type_id","type_id","changelog","Feature","Fix","Internal","Other","PrInfo","PrKind","Skip","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","from","from","get_changelog","into","into","kind","message","parse_changelog_line","parse_pr_number","parse_title_line","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unescape"],"q":["xtask","","","","","","","","","","xtask::dist","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","xtask::flags","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","xtask::flags::XtaskCmd","","","","","","","","xtask::install","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","xtask::metrics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","xtask::release","xtask::release::changelog","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","Installs rust-analyzer language server and/or editor …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,1,2,2,2,0,0,2,1,2,1,0,1,2,1,2,2,2,2,1,1,1,2,1,2,1,2,0,3,0,3,0,3,4,4,0,3,0,3,0,3,0,3,0,3,0,0,4,3,5,6,7,8,9,10,11,12,4,3,5,6,7,8,9,10,11,12,6,6,10,6,8,9,11,4,3,5,6,7,8,9,10,11,12,4,3,5,6,7,8,9,10,11,12,4,4,4,4,5,4,3,5,6,7,8,9,10,11,12,6,6,4,5,6,7,8,9,10,11,12,6,8,9,10,11,6,6,4,12,4,3,5,6,7,8,9,10,11,12,4,3,5,6,7,8,9,10,11,12,4,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,0,21,0,21,0,21,0,22,21,23,22,21,23,23,23,23,0,22,21,23,0,0,22,21,23,22,23,22,21,23,22,21,23,22,21,23,0,0,0,24,25,24,25,25,24,25,24,25,24,24,25,24,24,24,24,24,25,24,24,25,25,0,24,24,24,24,24,25,24,25,24,25,24,25,0,26,26,26,26,0,0,26,27,26,27,26,26,26,27,26,0,27,26,27,27,0,0,0,26,27,26,27,26,27,26,0],"f":[[[["shell",3]],["result",6,[["string",3]]]],null,null,null,[[["str",0]],["bool",0]],[[],["result",6]],null,[[],["pathbuf",3]],null,[[["shell",3]],["result",6]],null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["shell",3]],["result",6]],null,[[["shell",3],["str",0],["str",0],["target",3]],["result",6]],[[["shell",3],["str",0],["target",3]],["result",6]],[[["",0]]],[[]],[[]],[[["path",3]]],[[["path",3],["path",3]],["result",6]],[[]],[[]],null,[[["shell",3]],["result",6,[["patch",3]]]],null,null,[[["",0],["str",0],["str",0]],["patch",3]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["option",4,[["clientopt",3]]]],null,null,null,null,null,null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",6]],[[],["result",6]],[[["vec",3,[["osstring",3]]]],["result",6]],[[["vec",3,[["osstring",3]]]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["parser",3]],["result",6]],[[["parser",3]],["result",6]],[[["parser",3]],["result",6]],[[["parser",3]],["result",6]],[[["parser",3]],["result",6]],[[["parser",3]],["result",6]],[[["parser",3]],["result",6]],[[["parser",3]],["result",6]],[[["parser",3]],["result",6]],[[["shell",3]],["result",6]],[[["shell",3]],["result",6]],[[["shell",3]],["result",6]],[[["shell",3]],["result",6]],[[["shell",3]],["result",6]],[[["",0]],["option",4,[["serveropt",3]]]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["clientopt",3]],[[["",0],["",0]]],null,[[["shell",3]],["result",6]],[[]],[[]],[[]],[[["shell",3],["clientopt",3]],["result",6]],[[["shell",3],["serveropt",3]],["result",6]],[[]],[[]],[[]],null,[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],null,[[]],[[]],[[["",0]],["string",3]],[[["",0],["shell",3],["str",0]],["result",6]],[[["",0],["shell",3],["str",0],["str",0]],["result",6]],[[["",0],["shell",3]],["result",6]],[[["",0],["shell",3]],["result",6]],null,null,[[["shell",3]],["result",6,[["metrics",3]]]],[[["shell",3]],["result",6,[["host",3]]]],null,[[["str",0]],["vec",3]],null,[[["",0],["str",0],["u64",0],["string",3]]],null,null,[[["",0],["object",3]]],[[["",0],["object",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["prkind",4]],[[["",0],["",0]]],[[]],[[]],[[["shell",3],["usize",0],["str",0],["str",0],["str",0]],["result",6,[["string",3]]]],[[]],[[]],null,null,[[["str",0]],["option",4,[["prinfo",3]]]],[[["str",0]],["option",4,[["u32",0]]]],[[["str",0]],["prinfo",3]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["str",0]],["string",3]]],"p":[[3,"Target"],[3,"Patch"],[4,"XtaskCmd"],[3,"Xtask"],[3,"Help"],[3,"Install"],[3,"FuzzTests"],[3,"Release"],[3,"Promote"],[3,"Dist"],[3,"Metrics"],[3,"Bb"],[13,"Help"],[13,"Install"],[13,"FuzzTests"],[13,"Release"],[13,"Promote"],[13,"Dist"],[13,"Metrics"],[13,"Bb"],[4,"Malloc"],[3,"ServerOpt"],[3,"ClientOpt"],[3,"Metrics"],[3,"Host"],[4,"PrKind"],[3,"PrInfo"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};